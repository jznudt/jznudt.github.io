<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>品创信联</title>
  <subtitle>品创世界，信联天下</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jznudt.github.io/"/>
  <updated>2016-07-21T12:29:42.094Z</updated>
  <id>http://jznudt.github.io/</id>
  
  <author>
    <name>Zhao Jing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>美陆军提出新型导航方式</title>
    <link href="http://jznudt.github.io/2016/07/21/NovelPNTMethod/"/>
    <id>http://jznudt.github.io/2016/07/21/NovelPNTMethod/</id>
    <published>2016-07-21T12:25:52.000Z</published>
    <updated>2016-07-21T12:29:42.094Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://i7.qhimg.com/t0130e1ec41471817b4.jpg&quot; alt=&quot;GPSChart&quot;&gt;&lt;/p&gt;
&lt;p&gt;根据美国陆军士兵及地面平台定位、导航、授时的需求，美国陆军通信电子研发工程中心将通过资金和研发备份导航方案来支持PM PNT发展，这将会解决士兵不同战术环境下的PNT挑战。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;由于GPS信号容易受干扰或其他破坏，美国军方一直在寻求GPS备份导航方式。美陆军研究人员最新提出了一种导航方式——利用像眼睛一样的先进敏感相机帮助用户确定目标的相对运动。&lt;/p&gt;
&lt;p&gt;美国陆军通信电子研究开发与工程中心（CERDEC）采用可以捕捉微小运动的微型相机，使用户可以追踪到某一个人的相对位置或移动。这将作为GPS信号削弱时增强定位、导航与授时（PNT）信息的一种手段。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;美国陆军通信电子研究开发与工程中心PNT分部研发了一种视觉辅助导航系统，装有单目摄像机，可以捕捉旋转和平移运动，但是不能捕捉纵向深度变化。此外，该系统还具有惯性测量单元组件，如陀螺仪、加速器和其它传感器等，用以传递运动和方向数据。结合单目摄像机和惯性测量组件，该系统提供了类似人眼的立体视觉，用以识别距离和运动。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PNT分部工程师艾瑞克·比克福德说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;视觉辅助导航系统依靠对目标快速帧速率拍照的相机，通过对比每一帧目标的特征来判断目标相对运动的距离和方向。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;美国陆军通信电子研发工程中心称，该视觉辅助导航系统很有可能会在地面战车中首次使用，一些研究人员已在高速公路上做了试验，相机即便以高速行驶也能够拍到看到的一切事物，包括汽车、信号标志、树。&lt;/p&gt;
&lt;p&gt;目前许多商业机构依然使用GPS，且极度依赖GPS获取定位和导航信息。随着电磁频谱获取越来越紧张以及对手技术能力的增强，美国军方加快步伐寻求GPS备份导航方式。&lt;/p&gt;
&lt;p&gt;美国陆军通信电子研发工程中心计划研发“伪卫星”，这是一种能够在只有小几千英尺（几百米）的低高度轨道运行的卫星，信号会增强且不易被干扰。该中心还在研制“芯片级原子钟”，用以对GPS接收端提供精确授时，且具有反欺骗功能。同时，美国国防先期研究计划局（DARPA）“对抗性环境中的空间、时间和方位信息”（STOIC）项目，旨在开发能够提供GPS同等性能导航质量的PNT系统。&lt;/p&gt;
&lt;p&gt;战场上GPS有效性已显著提升了士兵们的导航能力，但是GPS极易受干扰。根据美国陆军士兵及地面平台定位、导航、授时的需求，美国陆军通信电子研发工程中心将通过资金和研发备份导航方案来支持PM PNT发展，这将会解决士兵不同战术环境下的PNT挑战。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://i7.qhimg.com/t0130e1ec41471817b4.jpg&quot; alt=&quot;GPSChart&quot;&gt;&lt;/p&gt;
&lt;p&gt;根据美国陆军士兵及地面平台定位、导航、授时的需求，美国陆军通信电子研发工程中心将通过资金和研发备份导航方案来支持PM PNT发展，这将会解决士兵不同战术环境下的PNT挑战。&lt;/p&gt;
    
    </summary>
    
      <category term="技术前沿" scheme="http://jznudt.github.io/categories/%E6%8A%80%E6%9C%AF%E5%89%8D%E6%B2%BF/"/>
    
    
      <category term="导航" scheme="http://jznudt.github.io/tags/%E5%AF%BC%E8%88%AA/"/>
    
      <category term="GPS" scheme="http://jznudt.github.io/tags/GPS/"/>
    
  </entry>
  
  <entry>
    <title>国外战术导弹导引头半实物仿真系统发展</title>
    <link href="http://jznudt.github.io/2016/07/21/HWILSeekerSim/"/>
    <id>http://jznudt.github.io/2016/07/21/HWILSeekerSim/</id>
    <published>2016-07-21T12:13:47.000Z</published>
    <updated>2016-07-21T12:24:11.090Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://ast.sjtu.edu.cn/userfiles/1/images/yt01.png&quot; alt=&quot;RFHWILSim&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;半实物仿真是在计算机仿真回路中接入一些实物进行的仿真试验，与纯数学模型的全数字仿真相比，由于采用了部分实物组件，因此仿真仿真结果可信度更高。由于半实物仿真系统能为导弹武器的研制实验提供最优的手段，使在不做实物飞行的条件下，可对导弹全系统进行综合测试，因此国外高度重视半实物仿真系统发展，建立了大量半实物设施，以支持战术导弹研发。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;国外发展现状&quot;&gt;&lt;a href=&quot;#国外发展现状&quot; class=&quot;headerlink&quot; title=&quot;国外发展现状&quot;&gt;&lt;/a&gt;国外发展现状&lt;/h2&gt;&lt;p&gt;经过多年建设和发展，美国已经形成了较为完整的战术导弹导引头半实物仿真体系，可进行从部件级到系统级的半实物仿真实验，满足现代战术导弹武器研制的需求，尤其是其多模导引头半实物仿真能力、制导和控制系统联合半实物仿真能力、导引头抗干扰半实物仿真能力的发展，直接支持了动能拦截弹、先进中距空空弹、远程反舰弹等先进战术导弹武器的研制。&lt;/p&gt;
&lt;p&gt;美国自20世纪60年代开始发展半实物仿真系统，至今已经建立了由军方、国防工业部门和科研机构组成的多层次、不同级别的战术导弹半实物仿真设施体系。这些半实物仿真设施主要用于战术导弹制导控制系统的试验验证，可以独立测试导引头（单模/多模）、自动驾驶仪、GPS/惯性导航器等组件，也可以综合进行战术导弹制导控制系统测试，为战术导弹研发提供了重要测试手段。&lt;/p&gt;
&lt;h3 id=&quot;具有双模引头半实物仿真能力&quot;&gt;&lt;a href=&quot;#具有双模引头半实物仿真能力&quot; class=&quot;headerlink&quot; title=&quot;具有双模引头半实物仿真能力&quot;&gt;&lt;/a&gt;具有双模引头半实物仿真能力&lt;/h3&gt;&lt;p&gt;多模导引头对于增强战术导弹武器在飞行末段的目标识别能力和提高打击精度有重要的支撑作用。近些年国外研发的新型号防空导弹、巡航导弹、空空导弹和反舰导弹等，均采用了不同制导体制混合的多模导引头。目前美国已建立的导引头半实物仿真设施能够支持不同制导体制的双模导引头半实物仿真试验，如红外/射频复合、红外/半主动激光复合。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160721_DualModeHWIL.jpg&quot; alt=&quot;DualModeHWIL&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;美国高级仿真中心的长波红外/半主动激光双模半实物仿真设施&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;具有制导和控制系统联合半实物仿真能力&quot;&gt;&lt;a href=&quot;#具有制导和控制系统联合半实物仿真能力&quot; class=&quot;headerlink&quot; title=&quot;具有制导和控制系统联合半实物仿真能力&quot;&gt;&lt;/a&gt;具有制导和控制系统联合半实物仿真能力&lt;/h3&gt;&lt;p&gt;战术导弹武器制导控制回路一般包括导引头、弹载计算机、惯性测量单元、GPS接收器和舵机等主要硬件，以及目标识别算法、制导律、自动驾驶控制算法等软件，目标识别算法、制导律、惯性测量单元、GPS接收器和导引头构成了制导系统，自动驾驶控制算法、弹载计算机和舵机构成了控制系统。整个制导控制系统半实物仿真涉及多个环节，需要软硬件结合，是一项复杂的仿真工程。目前美国军方的主要半实物仿真设施中心基本都具备同时进行战术导弹武器制导与控制系统的半实物仿真能力，其中美国陆军AMRDEC还具有双模制导系统的制导控制回路仿真能力。&lt;/p&gt;
&lt;h3 id=&quot;具有导弹抗干扰半实物仿真能力&quot;&gt;&lt;a href=&quot;#具有导弹抗干扰半实物仿真能力&quot; class=&quot;headerlink&quot; title=&quot;具有导弹抗干扰半实物仿真能力&quot;&gt;&lt;/a&gt;具有导弹抗干扰半实物仿真能力&lt;/h3&gt;&lt;p&gt;美国空军电子战靶场（AFEWES）是美国战术导弹武器红外抗干扰半实物仿真试验中心，也是美国最主要的战术导弹抗干扰测试中心，能够进行点源红外对抗和激光红外干扰半实物仿真试验。美国海军空战中心则可以对弹载GPS接收机进行半实物干扰仿真试验。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160721_IRECCMHWILSys.jpg&quot; alt=&quot;IRECCMHWILSys&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;美国红外抗干扰半实物仿真系统&lt;/em&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ast.sjtu.edu.cn/userfiles/1/images/yt01.png&quot; alt=&quot;RFHWILSim&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;半实物仿真是在计算机仿真回路中接入一些实物进行的仿真试验，与纯数学模型的全数字仿真相比，由于采用了部分实物组件，因此仿真仿真结果可信度更高。由于半实物仿真系统能为导弹武器的研制实验提供最优的手段，使在不做实物飞行的条件下，可对导弹全系统进行综合测试，因此国外高度重视半实物仿真系统发展，建立了大量半实物设施，以支持战术导弹研发。&lt;/p&gt;
    
    </summary>
    
      <category term="行业综述" scheme="http://jznudt.github.io/categories/%E8%A1%8C%E4%B8%9A%E7%BB%BC%E8%BF%B0/"/>
    
    
      <category term="导引头" scheme="http://jznudt.github.io/tags/%E5%AF%BC%E5%BC%95%E5%A4%B4/"/>
    
      <category term="半实物仿真" scheme="http://jznudt.github.io/tags/%E5%8D%8A%E5%AE%9E%E7%89%A9%E4%BB%BF%E7%9C%9F/"/>
    
      <category term="战术导弹" scheme="http://jznudt.github.io/tags/%E6%88%98%E6%9C%AF%E5%AF%BC%E5%BC%B9/"/>
    
  </entry>
  
  <entry>
    <title>美空军启动下一代空空导弹采办</title>
    <link href="http://jznudt.github.io/2016/07/21/USAFAAMAcqiure/"/>
    <id>http://jznudt.github.io/2016/07/21/USAFAAMAcqiure/</id>
    <published>2016-07-21T11:14:46.000Z</published>
    <updated>2016-07-21T12:44:26.323Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160721_AirDominance.jpg&quot; alt=&quot;AirDominance&quot;&gt;&lt;/p&gt;
&lt;p&gt;2016年7月11日，在英国范堡罗航展上，美国空军空中作战司令部司令官霍克·卡莱尔上将（Gen. Hawk Carlisle）透露：为了保持空中优势，美国空军将很快启动一个下一代空空导弹在册采办项目；与此同时，还需要更快速地扩大五代机机队规模。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt; 
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160721_AirFormation.jpg&quot; alt=&quot;AirFormation&quot;&gt;&lt;/p&gt;
&lt;p&gt;美国空军F-22战斗机（上方两架）与F-35A战斗机（下方两架）编队飞行。F-22已在2007年形成全面作战能力，正在实施增量3.2机队升级改造；F-35A很快将形成初始作战能力，将从2018年开始首次形成作战能力之后的升级改造（第4批次）。目前，美国空军拥有的生产型F-22和F-35A数量达到近300架（其中F-22为187架，F-35A约110架），此外美国海军和美国海军陆战队拥有的生产型F-35B/C数量近90架，美国空军或美军五代机总数已远超其他国家（含订购F-35的国家）总和。按照目前的装备计划，美军最终的五代机总数也仍然会超过世界其他国家五代机装备数量的总和（&lt;em&gt;美国空军图片&lt;/em&gt;）&lt;/p&gt;
&lt;p&gt;卡莱尔上将表示，美国空军迫切地需要一型全新的空空导弹。他说，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由F-22和F-35战斗机组成的“五代机组合，以及某种第五代武器，是我们必须发展的下一个重器”。美国空军刚刚完成的“空中优势2030”分析表明，“我们必须提高F-35飞机的采购速度”，并且，“我们必须获得一型新型导弹”&lt;/p&gt;
&lt;p&gt;（&lt;em&gt;评注：实际上，在美国空军发布的公开版《2030年空中优势飞行规划》文件中并没有直接提及这两点，因此，卡莱尔所引述的可能是该文件的保密版&lt;/em&gt;）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2016年5月31日，美国空军正式发布了脱密版《2030年空中优势飞行规划》，图为该规划文件的封面（美国空军图片）&lt;br&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160721_AirSuperiority.jpg&quot; alt=&quot;AirSuperiority&quot;&gt;&lt;/p&gt;
&lt;p&gt;对于扩大五代机规模，卡莱尔上将宣称为了达成空中优势，F-22飞机的机队规模应扩大一倍（现有187架），而F-35飞机每年的装备数量应增至100架（目前为48架）。他还说，F-35飞机在空战中“表现极好”，是一种“让人大为吃惊的空对空平台”。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160721_F35Deployment.jpg&quot; alt=&quot;F35Deployment&quot;&gt;&lt;/p&gt;
&lt;p&gt;2016年6月，美国空军使用F-35A战斗机在本国国内进行了首次部署演习，图为美国空军空中作战司令部在6月21日发布的该演习的一些统计数据，显示出此次演习共出动7架飞机、181名支持人员，完成了全部计划的88次出击，任务包含进攻性防空作战、压制敌防空、防御性防空作战和近距空中支援，在与扮演“红军”的F-15E战斗机的格斗中做到领损失，共投掷16枚激光制导炸弹，命中15枚（命中率94%）。按计划，2017年，美国空军的F-35A将进行首次海外部署，地点为日本冲绳嘉手纳空军基地；美国海军陆战队的F-35B也将进行首次成建制海外陆上部署，地点为日本岩国基地（&lt;em&gt;美国空军图片&lt;/em&gt;）&lt;/p&gt;
&lt;p&gt;对于新型导弹，卡莱尔上将透露美国空军将“马上”启动一个在册项目，但并未给出具体时间节点。他还表示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AIM-120D导弹升级项目“进行得很好”，但“它不是我们需要的下一代导弹”；为了跟上“我们所看到的威胁”，新型空空导弹将必须有更大的射程和更好的电子战环境弹性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160721_Missile.jpg&quot; alt=&quot;Missile&quot;&gt;&lt;/p&gt;
&lt;p&gt;美国国防部国防高级研究计划局（DARPA）、美国空军研究实验室（AFRL）已为探索未来空空导弹开展过多个科研项目，其中既包括导弹概念，也包括诸多关键技术。上图上部为DARPA“三类目标终结者”（T3）项目示意图，旨在系统性突破可打击隐身飞机、巡航导弹、先进防空系统三类目标的双用途导弹关键技术，目前已知波音公司、雷神公司分别获得过该项目的合同，其中波音公司的试验弹尺寸与AIM-120接近，但飞行速度和射程均高于AIM-120，进行了4次试飞；下部为AFRL曾研究的与未来空空导弹相关的“空中主宰技术”，其中包括制导引信一体化、定向战斗部和可以实现远程飞行的火箭发动机等。美国空军曾实施“联合双用途空中优势导弹/下一代导弹”（JDRADM/NGM，本文顶图为美国空军在2009年发布的两种JDRADM想象图）采办项目，试图研制一型双用途弹来同时取代AIM-120和AGM-88（反辐射导弹），但在2012年宣布“出于经济可承受性原因”取消该项目（&lt;em&gt;DARPA、AFRL图片&lt;/em&gt;）&lt;/p&gt;
&lt;p&gt;此前，卡莱尔曾经说过AIM-120导弹的后继弹应具有更小的体积以增加每架战斗机的携载量，并具有更好的敏捷性（&lt;em&gt;评注：在美国空军发布的公开版《2030年空中优势飞行规划》文件中，曾提出“远程的和大携载量的武器都将增强整个‘空中优势2030’能力簇的效能”，因此在美国空军的实际规划中，射程更远的未来空空导弹和可更多携载的未来空空导弹可能并不是同一种弹&lt;/em&gt;）。这次他还说，如果配装新型导弹，F-35飞机还将更好，但是“我们必须先研制出一种新型导弹”。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160721_SACMAttackJ20.jpg&quot; alt=&quot;SACMAttackJ20&quot;&gt;&lt;/p&gt;
&lt;p&gt;AFRL目前正在实施“小型先进能力导弹”（SACM）和“微型防御弹药”（MSDM）项目，图为SACM跟踪打击我国歼20战斗机想象图，表明美国空军要求该导弹具备对隐身目标的跟踪和打击能力。美国空军设想该导弹采用超敏捷弹体、高比冲推进、经济上可承受的导引头、抗干扰的制导引信一体化等技术；另外，美国空军目前总是将SACM和MSDM两个概念一起提及，并曾展示SACM拦截来袭导弹的想象图，因此两者可能至少具有通用性。由于体积小，F-35战斗机每个弹舱预计可携带多达6枚SACM/MSDM，比最大有可能携带的AIM-120导弹数量多一倍（&lt;em&gt;美国空军图片&lt;/em&gt;）&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160721_AirDominance.jpg&quot; alt=&quot;AirDominance&quot;&gt;&lt;/p&gt;
&lt;p&gt;2016年7月11日，在英国范堡罗航展上，美国空军空中作战司令部司令官霍克·卡莱尔上将（Gen. Hawk Carlisle）透露：为了保持空中优势，美国空军将很快启动一个下一代空空导弹在册采办项目；与此同时，还需要更快速地扩大五代机机队规模。&lt;/p&gt;
    
    </summary>
    
      <category term="防务观察" scheme="http://jznudt.github.io/categories/%E9%98%B2%E5%8A%A1%E8%A7%82%E5%AF%9F/"/>
    
    
      <category term="空空导弹" scheme="http://jznudt.github.io/tags/%E7%A9%BA%E7%A9%BA%E5%AF%BC%E5%BC%B9/"/>
    
      <category term="AIM-120" scheme="http://jznudt.github.io/tags/AIM-120/"/>
    
  </entry>
  
  <entry>
    <title>CUDA加速旧代码与OOAD的兼容性</title>
    <link href="http://jznudt.github.io/2016/07/21/CUDACodeTrans/"/>
    <id>http://jznudt.github.io/2016/07/21/CUDACodeTrans/</id>
    <published>2016-07-21T11:09:29.000Z</published>
    <updated>2016-07-21T11:11:45.809Z</updated>
    
    <content type="html">&lt;p&gt;最近刚上手GPU并行计算，考虑用其加速原来编写的通信信号处理库。改写过程中，发现CUDA基本上属于“&lt;strong&gt;面向过程&lt;/strong&gt;”式编程，和通用的面向对象（OO）编程&lt;strong&gt;兼容性&lt;/strong&gt;不是很好。它只能应用于具体算法的改进，而无法与封装、多态、继承和设计模式等OOAD（面向对象分析与设计）中的基本原则融合起来吗？&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近刚上手GPU并行计算，考虑用其加速原来编写的通信信号处理库。改写过程中，发现CUDA基本上属于“&lt;strong&gt;面向过程&lt;/strong&gt;”式编程，和通用的面向对象（OO）编程&lt;strong&gt;兼容性&lt;/strong&gt;不是很好。它只能应用于具体算法的改进，而无法与封装、多
    
    </summary>
    
      <category term="编程杂感" scheme="http://jznudt.github.io/categories/%E7%BC%96%E7%A8%8B%E6%9D%82%E6%84%9F/"/>
    
    
      <category term="CUDA" scheme="http://jznudt.github.io/tags/CUDA/"/>
    
      <category term="重构" scheme="http://jznudt.github.io/tags/%E9%87%8D%E6%9E%84/"/>
    
      <category term="面向对象分析与设计" scheme="http://jznudt.github.io/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>利用GDI绘制雷达P显关键代码</title>
    <link href="http://jznudt.github.io/2016/07/21/RadarPPIDisp/"/>
    <id>http://jznudt.github.io/2016/07/21/RadarPPIDisp/</id>
    <published>2016-07-21T10:57:47.000Z</published>
    <updated>2016-07-21T11:08:12.089Z</updated>
    
    <content type="html">&lt;h1 id=&quot;利用GDI绘制雷达P显的解决途径及关键代码示例&quot;&gt;&lt;a href=&quot;#利用GDI绘制雷达P显的解决途径及关键代码示例&quot; class=&quot;headerlink&quot; title=&quot;利用GDI绘制雷达P显的解决途径及关键代码示例&quot;&gt;&lt;/a&gt;利用GDI绘制雷达P显的解决途径及关键代码示例&lt;/h1&gt;&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;雷达P显包含了实时的波束扫描、探测点迹等信息，对于指挥员了解态势非常有帮助。在Visual Studio平台上，借助于GDI+来绘制雷达P显，是一个非常有挑战的工作。本博文利用双缓存机制，结合&lt;strong&gt;特定区域刷新&lt;/strong&gt;技术，实现了一个较为完整的雷达P显版本，写出关键源码，旨在抛砖引玉，和大家一起沟通交流。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;功能概述&quot;&gt;&lt;a href=&quot;#功能概述&quot; class=&quot;headerlink&quot; title=&quot;功能概述&quot;&gt;&lt;/a&gt;功能概述&lt;/h2&gt;&lt;p&gt;最近研究使用GDI+绘制雷达P显，参考了开源代码，实现了一个初步版本，实现的主要功能如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;绘制P显底图，含距离环、距离标注、方位射线（即方位角）等；&lt;/li&gt;
&lt;li&gt;实时显示方位扫描波位，并添加余辉效果（即渐变颜色）；&lt;/li&gt;
&lt;li&gt;依据给定的检测概率，随机生成一系列的探测点迹并显示在P显底图上；&lt;/li&gt;
&lt;li&gt;实现了特定区域刷新效果——即方位扫描波位覆盖的区域才进行重绘，其它区域保持不变；&lt;/li&gt;
&lt;li&gt;在界面上添加了其它的显示信息（很多尚未添加内核模型，仅为示意）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;存在问题&quot;&gt;&lt;a href=&quot;#存在问题&quot; class=&quot;headerlink&quot; title=&quot;存在问题&quot;&gt;&lt;/a&gt;存在问题&lt;/h2&gt;&lt;p&gt;通过前期编程努力，在Visual Studio 2013上完成了代码编写与测试，运行效果参加本帖最后的GIF图像。通过运行发现，系统距离预期的显示效果有一定的区别，主要表现为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;虽然使用了InvalidRgn()函数，仅对方位扫描波位覆盖的屏幕区域才进行重绘，但是通过实际运行发现，屏幕上遗留了较多的余辉残留（图中的绿色部分），具体原因尚未发现；&lt;/li&gt;
&lt;li&gt;通过长时间运行发现，程序的CPU占用较为平稳（在笔者的电脑上维持在3%左右），但是它的内存占用会缓慢地增加，表明程序中存在者内存泄露，但通过仔细检查代码，未发现问题代码。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;功能完善&quot;&gt;&lt;a href=&quot;#功能完善&quot; class=&quot;headerlink&quot; title=&quot;功能完善&quot;&gt;&lt;/a&gt;功能完善&lt;/h2&gt;&lt;p&gt;同时，我还想补充添加两个功能，具体为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;目前采用的是随机生成一系列的探测点迹并显示在P显底图上的方式，仅为示意。如果我想在P显上显示一个稳定的目标轨迹（即连续多次扫描都能发现这个目标，将每次的扫描探测结果用折线连接，显示在底图上），这会牵扯到较大范围的屏幕区域重绘，目前的程序结构无法完成，不知该如何修改； &lt;/li&gt;
&lt;li&gt;想实现在屏幕上通过鼠标点击选择特定点迹的功能，相应的右键菜单已经做好，但不知道如何才能实现鼠标点击选择。粗略地考虑，应该把当前屏幕上所有点位置均记录下来，然后通过获取当前鼠标点击位置，借助于“最近邻”准则来判决，这样感觉有些繁琐，不知道有没有更好的解决方式？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;注：在OnPaint()函数中引用了网上的开源代码，对作者表示感谢。&lt;/em&gt;&lt;/p&gt;
 &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;93&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;95&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;96&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;97&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;98&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;102&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;104&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;105&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;106&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;107&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;108&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;109&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;110&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;111&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;112&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;113&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;114&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;115&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;116&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;117&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;118&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;119&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;120&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;121&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;122&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;123&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;124&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;125&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;126&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;127&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;128&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;129&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;130&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;131&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;132&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;133&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;134&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;135&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;136&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;137&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;138&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;139&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;140&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;141&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;142&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;143&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;144&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;145&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;146&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;147&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;148&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;149&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;150&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;151&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;152&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;153&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;154&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;155&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;156&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;157&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;158&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;159&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;160&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;161&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;162&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;163&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;164&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;165&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;166&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;167&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;168&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;169&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;170&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;171&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;172&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;173&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;174&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;175&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;176&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;177&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;178&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;179&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;180&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;181&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;182&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;183&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;184&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;185&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;186&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;187&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;188&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;189&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;190&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;191&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;192&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;193&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;194&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;195&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;196&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;197&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;198&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;199&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;200&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;201&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;202&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;203&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;204&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;205&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;206&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;207&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;208&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;209&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;210&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;211&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;212&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;213&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;214&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;215&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;216&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;217&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;218&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;219&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;220&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;221&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;222&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;223&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;224&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;225&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;226&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;227&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;228&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;229&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;230&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;231&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;232&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;233&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;234&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;235&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;236&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;237&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;238&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;239&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;240&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;241&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;242&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;243&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;244&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;245&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;246&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;247&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;248&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;249&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;250&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;251&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;252&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;253&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;254&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;255&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;256&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;257&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;258&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;259&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;260&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;261&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;262&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;263&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;264&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;265&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;266&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;267&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;268&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;269&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;270&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;271&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;272&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;273&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;274&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;275&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;276&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;277&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;278&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;279&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;280&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;281&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;282&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;283&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;284&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;285&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//相关成员变量定义（在.h文件中，摘抄如下）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; m_dCurSimTime;        &lt;span class=&quot;comment&quot;&gt;//当前扫描时间，s&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; m_dCurAzimuth;        &lt;span class=&quot;comment&quot;&gt;//当前波束扫描方位角，rad&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;    m_nCurScanFrame;        &lt;span class=&quot;comment&quot;&gt;//当前扫描处理帧周期&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;    m_nCenterX;        &lt;span class=&quot;comment&quot;&gt;//P显中心X坐标，屏幕上&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;    m_nCenterY;        &lt;span class=&quot;comment&quot;&gt;//P显中心Y坐标，屏幕上&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;    m_nRadius;        &lt;span class=&quot;comment&quot;&gt;//P显半径，屏幕上&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//其它公共变量定义&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; PI = &lt;span class=&quot;number&quot;&gt;3.14159265358979&lt;/span&gt;;        &lt;span class=&quot;comment&quot;&gt;//圆周率&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; d2r = PI/&lt;span class=&quot;number&quot;&gt;180.0&lt;/span&gt;;            &lt;span class=&quot;comment&quot;&gt;//从°至rad的转换&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; UINT   TimeIntervalInMS = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;        &lt;span class=&quot;comment&quot;&gt;//以ms形式表示的方位扫描时间间隔&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; BeamWidth = &lt;span class=&quot;number&quot;&gt;6.0&lt;/span&gt;*d2r;        &lt;span class=&quot;comment&quot;&gt;//方位扫描波束宽度，rad&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; ScanPeriod = &lt;span class=&quot;number&quot;&gt;6.0&lt;/span&gt;;            &lt;span class=&quot;comment&quot;&gt;//一个完整的方位扫描周期，s&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; ScanRate = &lt;span class=&quot;number&quot;&gt;360.0&lt;/span&gt;/ScanPeriod*d2r;    &lt;span class=&quot;comment&quot;&gt;//方位波束扫描速率，rad/s&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; MaxDetectRange = &lt;span class=&quot;number&quot;&gt;500.0e3&lt;/span&gt;;        &lt;span class=&quot;comment&quot;&gt;//距离环代表的最大探测距离，m&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;    RANGERINGNUM = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;                &lt;span class=&quot;comment&quot;&gt;//P显底图上的距离环数目&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//用于实时显示状态的矩形区域(特定刷新)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;RECT rectTime,rectAzScan,rectFrame;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;RECT rectRate,rectDotNum,rectEchoNum,rectTgtNum,rectSysTime;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;RECT rectR,rectAz,rectID;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//生成给定区间内的均匀分布随机数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Rand&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; dblStart, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; dblFinish)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; minVal = min(dblStart, dblFinish);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; maxVal = max(dblStart, dblFinish);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (maxVal - minVal) * (&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;)rand() / (RAND_MAX + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) + minVal;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;BOOL CPPIDispDemoDlg::OnInitDialog()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    SetTimer(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, TimeIntervalInMS, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CPPIDispDemoDlg::OnPaint()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (IsIconic())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CPaintDC dc(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CRect rect;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        This-&amp;gt;GetClientRect(&amp;amp;rect);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; nMargin = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//边距&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; nHeight = rect.Height() - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*nMargin;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; nWidth = rect.Width() - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*nMargin;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        m_nCenterX = nWidth/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        m_nCenterY = nHeight/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        m_nRadius = min(nWidth,nHeight)/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CDC xDC;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CBitmap xBMP;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        xDC.CreateCompatibleDC(&amp;amp;dc);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        xBMP.CreateCompatibleBitmap(&amp;amp;dc,nWidth,nHeight);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        xDC.SelectObject(xBMP);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//这是显示的核心函数！&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        OnDraw(&amp;amp;xDC);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CDC yDC;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CBitmap yBMP;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        yDC.CreateCompatibleDC(&amp;amp;dc);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        yBMP.CreateCompatibleBitmap(&amp;amp;dc,nWidth,nHeight);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        yDC.SelectObject(&amp;amp;yBMP);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        yDC.FillSolidRect(rect,GetSysColor(COLOR_3DFACE));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//采用双缓存机制，防止背景闪烁&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        yDC.BitBlt(nMargin,nMargin,nWidth,nHeight,&amp;amp;xDC,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,SRCCOPY);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        dc.BitBlt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,nWidth,nHeight,&amp;amp;yDC,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,SRCCOPY);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        xBMP.DeleteObject();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        xDC.DeleteDC();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        yBMP.DeleteObject();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        yDC.DeleteDC();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CPPIDispDemoDlg::OnDraw(CDC *pDC)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//绘制方位波束扫描余辉效果(可以进行更为精细的控制)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; deltaT = BeamWidth/&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; dt = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;; dt &amp;lt; &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;*BeamWidth; dt += deltaT)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; x = m_nCenterX + m_nRadius*&lt;span class=&quot;built_in&quot;&gt;cos&lt;/span&gt;(dt + m_dCurAzimuth-BeamWidth);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; y = m_nCenterY + m_nRadius*&lt;span class=&quot;built_in&quot;&gt;sin&lt;/span&gt;(dt + m_dCurAzimuth-BeamWidth);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        pDC-&amp;gt;MoveTo(m_nCenterX,m_nCenterY);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        xPen.DeleteObject();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        xPen.CreatePen(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,RGB(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,j++,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        pDC-&amp;gt;SelectObject(&amp;amp;xPen);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        pDC-&amp;gt;LineTo(x,y);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    xPen.DeleteObject();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//绘制当前方位扫描波束中心线&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    xPen.CreatePen(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,RGB(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;SelectObject(&amp;amp;xPen);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;MoveTo(m_nCenterX, m_nCenterY);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;LineTo(m_nCenterX + m_nRadius*&lt;span class=&quot;built_in&quot;&gt;cos&lt;/span&gt;(m_dCurAzimuth), &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               m_nCenterY + m_nRadius*&lt;span class=&quot;built_in&quot;&gt;sin&lt;/span&gt;(m_dCurAzimuth));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    xPen.DeleteObject();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//在当前方位扫描波束覆盖的区域里生成距离、方位均随机分布的目标&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; Rmt = &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(Rand(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, m_nRadius));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//注意：这里显示的实际上是上一个方位扫描波束的目标，模拟实际系统的处理延迟&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; angleAZ = Rand(m_dCurAzimuth - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*BeamWidth, m_dCurAzimuth - BeamWidth);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//以给定的概率发现目标，并在P显上绘制出&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; Threshold = &lt;span class=&quot;number&quot;&gt;0.65&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (Rand(&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;) &amp;gt;= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; - Threshold)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CPoint dot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        dot.x = m_nCenterX + Rmt*&lt;span class=&quot;built_in&quot;&gt;cos&lt;/span&gt;(angleAZ);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        dot.y = m_nCenterY + Rmt*&lt;span class=&quot;built_in&quot;&gt;sin&lt;/span&gt;(angleAZ);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        pDC-&amp;gt;SetPixel(dot,RGB(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        pDC-&amp;gt;FillSolidRect(dot.x, dot.y, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, RGB(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    CFont font;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    font.CreateFont(&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;600&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,DEFAULT_CHARSET,OUT_DEFAULT_PRECIS,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CLIP_DEFAULT_PRECIS,DEFAULT_QUALITY,FF_ROMAN,&lt;span class=&quot;string&quot;&gt;&quot;宋体&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;CString &lt;span class=&quot;title&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//绘制距离环&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; RANGERINGNUM&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;; i++)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        xPen.CreatePen(PS_SOLID,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,RGB(&lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;118&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;105&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        pDC-&amp;gt;SelectObject(&amp;amp;xPen);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        pDC-&amp;gt;Arc(m_nCenterX - m_nRadius*(RANGERINGNUM-i)/RANGERINGNUM, &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                 m_nCenterY - m_nRadius*(RANGERINGNUM-i)/RANGERINGNUM,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                 m_nCenterX + m_nRadius*(RANGERINGNUM-i)/RANGERINGNUM, &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                 m_nCenterY + m_nRadius*(RANGERINGNUM-i)/RANGERINGNUM,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        xPen.DeleteObject();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//显示距离标注&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i % &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            pDC-&amp;gt;SelectObject(&amp;amp;font);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            pDC-&amp;gt;SetTextColor(RGB(&lt;span class=&quot;number&quot;&gt;160&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;160&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;164&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            pDC-&amp;gt;SetBkMode(TRANSPARENT);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            str.Format(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;((RANGERINGNUM-i)*MaxDetectRange/&lt;span class=&quot;number&quot;&gt;1.0e3&lt;/span&gt;/RANGERINGNUM)); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            pDC-&amp;gt;TextOut(m_nCenterX + m_nRadius*(RANGERINGNUM-i)/RANGERINGNUM, &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;m_nCenterY, str);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    xPen.CreatePen(PS_SOLID,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,RGB(&lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;118&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;105&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;SelectObject(&amp;amp;xPen);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//绘制水平线&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;MoveTo(m_nCenterX - m_nRadius, m_nCenterY);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;LineTo(m_nCenterX + m_nRadius, m_nCenterY);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//绘制垂直线&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;MoveTo(m_nCenterX, m_nCenterY - m_nRadius);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;LineTo(m_nCenterX, m_nCenterY + m_nRadius);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//绘制30°方位射线&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; dTheta = &lt;span class=&quot;number&quot;&gt;30.0&lt;/span&gt;*d2r;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;MoveTo(m_nCenterX - &lt;span class=&quot;built_in&quot;&gt;cos&lt;/span&gt;(dTheta)*m_nRadius, m_nCenterY + &lt;span class=&quot;built_in&quot;&gt;sin&lt;/span&gt;(dTheta)*m_nRadius);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;LineTo(m_nCenterX + &lt;span class=&quot;built_in&quot;&gt;cos&lt;/span&gt;(dTheta)*m_nRadius, m_nCenterY - &lt;span class=&quot;built_in&quot;&gt;sin&lt;/span&gt;(dTheta)*m_nRadius);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;MoveTo(m_nCenterX - &lt;span class=&quot;built_in&quot;&gt;cos&lt;/span&gt;(dTheta)*m_nRadius, m_nCenterY - &lt;span class=&quot;built_in&quot;&gt;sin&lt;/span&gt;(dTheta)*m_nRadius);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;LineTo(m_nCenterX + &lt;span class=&quot;built_in&quot;&gt;cos&lt;/span&gt;(dTheta)*m_nRadius, m_nCenterY + &lt;span class=&quot;built_in&quot;&gt;sin&lt;/span&gt;(dTheta)*m_nRadius);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//绘制60°方位射线&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dTheta = &lt;span class=&quot;number&quot;&gt;60.0&lt;/span&gt;*d2r;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;MoveTo(m_nCenterX - &lt;span class=&quot;built_in&quot;&gt;cos&lt;/span&gt;(dTheta)*m_nRadius, m_nCenterY + &lt;span class=&quot;built_in&quot;&gt;sin&lt;/span&gt;(dTheta)*m_nRadius);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;LineTo(m_nCenterX + &lt;span class=&quot;built_in&quot;&gt;cos&lt;/span&gt;(dTheta)*m_nRadius, m_nCenterY - &lt;span class=&quot;built_in&quot;&gt;sin&lt;/span&gt;(dTheta)*m_nRadius);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;MoveTo(m_nCenterX - &lt;span class=&quot;built_in&quot;&gt;cos&lt;/span&gt;(dTheta)*m_nRadius, m_nCenterY - &lt;span class=&quot;built_in&quot;&gt;sin&lt;/span&gt;(dTheta)*m_nRadius);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;LineTo(m_nCenterX + &lt;span class=&quot;built_in&quot;&gt;cos&lt;/span&gt;(dTheta)*m_nRadius, m_nCenterY + &lt;span class=&quot;built_in&quot;&gt;sin&lt;/span&gt;(dTheta)*m_nRadius);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    xPen.DeleteObject();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//对中心距离环线换用红色进行突出显示&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    xPen.CreatePen(PS_SOLID,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,RGB(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;SelectObject(&amp;amp;xPen);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    i = RANGERINGNUM&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;Arc(m_nCenterX - m_nRadius*(RANGERINGNUM-i)/RANGERINGNUM, &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             m_nCenterY - m_nRadius*(RANGERINGNUM-i)/RANGERINGNUM,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             m_nCenterX + m_nRadius*(RANGERINGNUM-i)/RANGERINGNUM, &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             m_nCenterY + m_nRadius*(RANGERINGNUM-i)/RANGERINGNUM,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    xPen.DeleteObject();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//显示距离标注&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;SelectObject(&amp;amp;font);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;SetTextColor(RGB(&lt;span class=&quot;number&quot;&gt;160&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;160&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;164&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;SetBkMode(TRANSPARENT);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    str.Format(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;((RANGERINGNUM-i)*MaxDetectRange/&lt;span class=&quot;number&quot;&gt;1.0e3&lt;/span&gt;/RANGERINGNUM)); /单位km&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;TextOut(m_nCenterX + m_nRadius*(RANGERINGNUM-i)/RANGERINGNUM, m_nCenterY, str);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//显示当前仿真时间(注意：不是系统时间)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    str.Format(&lt;span class=&quot;string&quot;&gt;&quot;当前时间(s):%6.3f&quot;&lt;/span&gt;, m_dCurSimTime);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    rectTime.left = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    rectTime.top = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    rectTime.right = rectTime.left + &lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(str) * &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    rectTime.bottom = rectTime.top + &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//pDC-&amp;gt;FillSolidRect(&amp;amp;rectTime,RGB(255,255,0));&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;DrawText(str,&amp;amp;rectTime,DT_LEFT);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//还有其它信息显示，重复度较大，不再赘述&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    font.DeleteObject();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//换回原来的画笔&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pDC-&amp;gt;SelectObject(oPen);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CPPIDispDemoDlg::OnTimer(UINT_PTR nIDEvent)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//更新当前方位扫描角，以及当前仿真时刻&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    m_dCurAzimuth += BeamWidth;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    m_dCurSimTime += &lt;span class=&quot;number&quot;&gt;1.0e-3&lt;/span&gt;*TimeIntervalInMS;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//将方位扫描角限定在[0,360°]之间，并且进行方位扫描帧周期的判断&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(m_dCurAzimuth &amp;gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*PI)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        m_dCurAzimuth -= &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*PI;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        m_nCurScanFrame++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//刷新特定区域(显示各种实时状态信息)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    InvalidateRect(&amp;amp;rectTime);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    InvalidateRect(&amp;amp;rectAzScan);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    InvalidateRect(&amp;amp;rectFrame);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    InvalidateRect(&amp;amp;rectDotNum);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    InvalidateRect(&amp;amp;rectEchoNum);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    InvalidateRect(&amp;amp;rectTgtNum);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    InvalidateRect(&amp;amp;rectSysTime);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    InvalidateRect(&amp;amp;rectRate);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    InvalidateRect(&amp;amp;rectID);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    InvalidateRect(&amp;amp;rectR);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    InvalidateRect(&amp;amp;rectAz);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    CDC dc;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dc.CreateCompatibleDC(&amp;amp;dc);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dc.SetViewportOrg(m_nCenterX,m_nCenterY);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    CPoint topleft,bottomright;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    topleft.x = -m_nRadius ;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    topleft.y = -m_nRadius;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    bottomright.x = m_nRadius ;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    bottomright.y = m_nRadius ;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    CRgn rgn;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;CRect &lt;span class=&quot;title&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(topleft,bottomright)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//当前方位扫描波束的起点、终点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    CPoint pt1, pt2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pt1.x = m_nRadius*&lt;span class=&quot;built_in&quot;&gt;cos&lt;/span&gt;(m_dCurAzimuth);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pt1.y = m_nRadius*&lt;span class=&quot;built_in&quot;&gt;sin&lt;/span&gt;(m_dCurAzimuth);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pt2.x = m_nRadius*&lt;span class=&quot;built_in&quot;&gt;cos&lt;/span&gt;(m_dCurAzimuth - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*BeamWidth);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pt2.y = m_nRadius*&lt;span class=&quot;built_in&quot;&gt;sin&lt;/span&gt;(m_dCurAzimuth - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*BeamWidth);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//指定当前方位扫描波束覆盖的P显区域，并进行重绘&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dc.BeginPath();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dc.MoveTo(CPoint(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dc.LineTo(pt1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dc.ArcTo(rect,pt1,pt2);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dc.LineTo(CPoint(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dc.EndPath();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    rgn.CreateFromPath(&amp;amp;dc);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    InvalidateRgn(&amp;amp;rgn,TRUE);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    rgn.DeleteObject();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dc.DeleteDC();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    CDialog::OnTimer(nIDEvent);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CPPIDispDemoDlg::OnClose()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    KillTimer(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;演示示例&quot;&gt;&lt;a href=&quot;#演示示例&quot; class=&quot;headerlink&quot; title=&quot;演示示例&quot;&gt;&lt;/a&gt;演示示例&lt;/h2&gt;&lt;p&gt;由于GIF图像太大，无法上传，仅上传了其中的某一帧截屏（参见楼主帖子最后的那副图像）。最主要的缺陷就是雷达扫描余辉无法全部清除，在图中的左下角区域，有很多的绿色残留，而且在最中心的圆形局域内尤其严重，目前尚未找到问题症结。本来怀疑是指定的刷新区域坐标有误，但从图中可看出，右上角的区域很好地实现了特定区域刷新效果，最中心的区域内也较少有余辉残留，所以排除了这个原因。我在想，是不是因为在程序中，将sin()和cos()等函数计算得出的double类型数据转换为屏幕上的int型坐标而导致的。恳请大家批评指正。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/img/201508/03194229_pHW6.jpg&quot; alt=&quot;PPIDisp&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;利用GDI绘制雷达P显的解决途径及关键代码示例&quot;&gt;&lt;a href=&quot;#利用GDI绘制雷达P显的解决途径及关键代码示例&quot; class=&quot;headerlink&quot; title=&quot;利用GDI绘制雷达P显的解决途径及关键代码示例&quot;&gt;&lt;/a&gt;利用GDI绘制雷达P显的解决途径及关键代码示例&lt;/h1&gt;&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;雷达P显包含了实时的波束扫描、探测点迹等信息，对于指挥员了解态势非常有帮助。在Visual Studio平台上，借助于GDI+来绘制雷达P显，是一个非常有挑战的工作。本博文利用双缓存机制，结合&lt;strong&gt;特定区域刷新&lt;/strong&gt;技术，实现了一个较为完整的雷达P显版本，写出关键源码，旨在抛砖引玉，和大家一起沟通交流。&lt;/p&gt;
    
    </summary>
    
      <category term="代码分享" scheme="http://jznudt.github.io/categories/%E4%BB%A3%E7%A0%81%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="GDI" scheme="http://jznudt.github.io/tags/GDI/"/>
    
      <category term="雷达P显" scheme="http://jznudt.github.io/tags/%E9%9B%B7%E8%BE%BEP%E6%98%BE/"/>
    
      <category term="C++源码" scheme="http://jznudt.github.io/tags/C-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>多线程控制问题</title>
    <link href="http://jznudt.github.io/2016/07/21/MultiThreadCtrl/"/>
    <id>http://jznudt.github.io/2016/07/21/MultiThreadCtrl/</id>
    <published>2016-07-21T04:32:35.000Z</published>
    <updated>2016-07-21T04:38:08.242Z</updated>
    
    <content type="html">&lt;h2 id=&quot;自组织线程设计&quot;&gt;&lt;a href=&quot;#自组织线程设计&quot; class=&quot;headerlink&quot; title=&quot;自组织线程设计&quot;&gt;&lt;/a&gt;自组织线程设计&lt;/h2&gt;&lt;p&gt;在开发某业务系统过程中，遇到了多线程开发的问题。由于业务逻辑较为复杂，系统中使用了接近50个线程，它们有着不同的业务逻辑和线程执行函数（ProcFunction），所以无法通过for循环方式来创建。由于每个线程的创建、同步、退出/销毁等操作都需要外部手动控制，造成了代码的混乱和重复。为了避免上述问题，想到了设计一个自组织、功能完善的工作线程类WorkThread，它的骨干代码如下所示：&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
 &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设计完善的自组织工作线程&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; WorkThread&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    WorkThread() : m_hThread(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        m_hEvent = CreateEvent(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, TRUE, FALSE, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//初始无信号状态&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; ~WorkThread()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CloseHandle(m_hEvent);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; != m_hThread)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            CloseHandle(m_hThread);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            m_hThread = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt;    BOOL    &lt;span class=&quot;title&quot;&gt;Create&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        DWORD dw;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        m_hThread = ::CreateThread(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, ProcFunction, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, &amp;amp;dw);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//控制线程暂时不执行相关代码&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; == m_hThread) ? FALSE : TRUE;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; BOOL    &lt;span class=&quot;title&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;        &lt;span class=&quot;title&quot;&gt;Execute&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//业务相关&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; BOOL    &lt;span class=&quot;title&quot;&gt;Pause&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; BOOL    &lt;span class=&quot;title&quot;&gt;Resume&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; BOOL    &lt;span class=&quot;title&quot;&gt;Terminate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; BOOL    &lt;span class=&quot;title&quot;&gt;Destroy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;BOOL            &lt;span class=&quot;title&quot;&gt;IsActive&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;BOOL            &lt;span class=&quot;title&quot;&gt;IsExit&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    HANDLE    m_hThread;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    HANDLE  m_hEvent;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; DWORD WINAPI &lt;span class=&quot;title&quot;&gt;ProcFunction&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(LPVOID lParam)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        WorkThread* pThread = (WorkThread*)lParam;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; == pThread)     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        DWORD dw = pThread-&amp;gt;Execute();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dw;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;设计问题&quot;&gt;&lt;a href=&quot;#设计问题&quot; class=&quot;headerlink&quot; title=&quot;设计问题&quot;&gt;&lt;/a&gt;设计问题&lt;/h2&gt;&lt;p&gt;在上述代码的实现过程中，有下面一些疑问，具体包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工作线程类中采用何种方式进行同步较为便捷，例如互斥、事件、信号量或者是临界区？&lt;/li&gt;
&lt;li&gt;如果想实现线程创建后暂不执行，应该如何实现？在MFC中可以通过AfxBeginThread()函数实现，但不知晓具体的实现方式。&lt;/li&gt;
&lt;li&gt;在线程函数执行完毕后不自动销毁，因为要执行额外的清理操作，那么应该如何实现？&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;自组织线程设计&quot;&gt;&lt;a href=&quot;#自组织线程设计&quot; class=&quot;headerlink&quot; title=&quot;自组织线程设计&quot;&gt;&lt;/a&gt;自组织线程设计&lt;/h2&gt;&lt;p&gt;在开发某业务系统过程中，遇到了多线程开发的问题。由于业务逻辑较为复杂，系统中使用了接近50个线程，它们有着不同的业务逻辑和线程执行函数（ProcFunction），所以无法通过for循环方式来创建。由于每个线程的创建、同步、退出/销毁等操作都需要外部手动控制，造成了代码的混乱和重复。为了避免上述问题，想到了设计一个自组织、功能完善的工作线程类WorkThread，它的骨干代码如下所示：&lt;/p&gt;
    
    </summary>
    
      <category term="编程杂感" scheme="http://jznudt.github.io/categories/%E7%BC%96%E7%A8%8B%E6%9D%82%E6%84%9F/"/>
    
    
      <category term="多线程" scheme="http://jznudt.github.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="并行仿真" scheme="http://jznudt.github.io/tags/%E5%B9%B6%E8%A1%8C%E4%BB%BF%E7%9C%9F/"/>
    
      <category term="仿真引擎" scheme="http://jznudt.github.io/tags/%E4%BB%BF%E7%9C%9F%E5%BC%95%E6%93%8E/"/>
    
  </entry>
  
  <entry>
    <title>单例模式中的静态变量冲突</title>
    <link href="http://jznudt.github.io/2016/07/21/SingletonStatic/"/>
    <id>http://jznudt.github.io/2016/07/21/SingletonStatic/</id>
    <published>2016-07-21T04:24:53.000Z</published>
    <updated>2016-07-21T04:40:33.983Z</updated>
    
    <content type="html">&lt;h2 id=&quot;单例模式&quot;&gt;&lt;a href=&quot;#单例模式&quot; class=&quot;headerlink&quot; title=&quot;单例模式&quot;&gt;&lt;/a&gt;单例模式&lt;/h2&gt;&lt;p&gt;采用模块化设计思想，把XX仿真模型拆分成了若干个分系统，在每个分系统中可能都会使用到初始化参数（即INITPATAM），所以用单例模式构建了一个“&lt;strong&gt;全局可见、全局唯一&lt;/strong&gt;”的参数集合（除了INITPATAM外，还包含其它很多公共参数，不再赘述），同时为了进一步提升安全性，采用了操作接口（即Set/Get函数），如下面的代码段。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//初始化参数定义&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; INITPATAM&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;    Longitude; &lt;span class=&quot;comment&quot;&gt;//WGS-84系下的经度值，rad&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//采用单例模式构建的全局可见参数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; GlobalParam&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; ~GlobalParam();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt;  GlobalParam* &lt;span class=&quot;title&quot;&gt;Instance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//初始化参数操作接口&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;    &lt;span class=&quot;title&quot;&gt;SetInitParam&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; INITPATAM&amp;amp; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;param)&lt;/span&gt; &lt;/span&gt;&amp;#123;param = &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;param;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;    &lt;span class=&quot;title&quot;&gt;GetInitParam&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(INITPATAM&amp;amp; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;param)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;param = param;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//其它全局函数操作接口&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    GlobalParam();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; GlobalParam*    &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;state;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    INITPATAM            param;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;全局变量&quot;&gt;&lt;a href=&quot;#全局变量&quot; class=&quot;headerlink&quot; title=&quot;全局变量&quot;&gt;&lt;/a&gt;全局变量&lt;/h2&gt;&lt;p&gt;在上述仿真模型的初始化函数中，完成全局变量设置；在时间迭代步进操作中，其它的子系统调用了该全局可见参数，即：&lt;/p&gt;
 &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//利用模块化思想设计的XX仿真模型&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; CAntenna;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; RADAR_API RADARDLL&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    RADARDLL();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//其它构造函数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; ~RADARDLL();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//执行初始化操作&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;    &lt;span class=&quot;title&quot;&gt;Initialize&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; INITPATAM&amp;amp; param)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        GlobalParam::Instance()-&amp;gt;SetInitParam(param);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//其它初始化操作&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//执行时间迭代步进操作&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;    &lt;span class=&quot;title&quot;&gt;Advance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    CAntenna*    m_Antenna;        &lt;span class=&quot;comment&quot;&gt;//天线分系统&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; RADARDLL::Advance()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//各分系统逐一执行迭代&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    m_Antenna-&amp;gt;Advance();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CAntenna::Advance()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    INITPATAM InitParam;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    GlobalParam::Instance()-&amp;gt;GetInitParam(InitParam);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//其它操作&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;多次实例化&quot;&gt;&lt;a href=&quot;#多次实例化&quot; class=&quot;headerlink&quot; title=&quot;多次实例化&quot;&gt;&lt;/a&gt;多次实例化&lt;/h2&gt;&lt;p&gt;设计外部应用程序，调用上述设计的RADARDLL仿真模型，因为考虑了多个对象，所以进行了多次示例化，它们具有&lt;strong&gt;不同&lt;/strong&gt;的初始化参数，即&lt;/p&gt;
 &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//主执行线程函数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;UINT &lt;span class=&quot;title&quot;&gt;SimMainProc&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(LPVOID param)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    INITPATAM *InitParam = (INITPATAM*)param;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    RADARDLL *pRadar = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RADARDLL();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pRadar-&amp;gt;Initialize();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pRadar-&amp;gt;Advance();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//退出线程&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; != pRadar)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; pRadar, pRadar = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//外部应用系统,假定是响应了某个按钮的事件&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; RadarSimDemo::OnSimBegin()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt;        RADARNUM    2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//设置第一个参数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    INITPATAM Param1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//设置第二个参数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    INITPATAM Param2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    CWinThread* Radar1Thread = AfxBeginThread(SimMainProc, (LPVOID)&amp;amp;Param1,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        THREAD_PRIORITY_BELOW_NORMAL, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, CREATE_SUSPENDED);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//其它初始化操作&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Radar1Thread-&amp;gt;ResumeThread();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    CWinThread* Radar2Thread = AfxBeginThread(SimMainProc, (LPVOID)&amp;amp;Param2,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        THREAD_PRIORITY_BELOW_NORMAL, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, CREATE_SUSPENDED);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Radar2Thread-&amp;gt;ResumeThread();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;静态变量冲突&quot;&gt;&lt;a href=&quot;#静态变量冲突&quot; class=&quot;headerlink&quot; title=&quot;静态变量冲突&quot;&gt;&lt;/a&gt;静态变量冲突&lt;/h2&gt;&lt;p&gt;问题出现了：由于RADARDLL仿真模型中的单例全局参数中含有静态变量，而在RADARDLL仿真模型的内部子系统中均是采用同样的GlobalParam::Instance()形式调用单例全局参数，造成了冲突，从而导致了程序运行结果不符合预期。&lt;/p&gt;
&lt;p&gt;如何才能够有效地解决上述冲突，或者有没有什么更优的技术手段，可以回避这个问题。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;单例模式&quot;&gt;&lt;a href=&quot;#单例模式&quot; class=&quot;headerlink&quot; title=&quot;单例模式&quot;&gt;&lt;/a&gt;单例模式&lt;/h2&gt;&lt;p&gt;采用模块化设计思想，把XX仿真模型拆分成了若干个分系统，在每个分系统中可能都会使用到初始化参数（即INITPATAM），所以用单例模式构建了一个“&lt;strong&gt;全局可见、全局唯一&lt;/strong&gt;”的参数集合（除了INITPATAM外，还包含其它很多公共参数，不再赘述），同时为了进一步提升安全性，采用了操作接口（即Set/Get函数），如下面的代码段。
    
    </summary>
    
      <category term="编程杂感" scheme="http://jznudt.github.io/categories/%E7%BC%96%E7%A8%8B%E6%9D%82%E6%84%9F/"/>
    
    
      <category term="设计模式" scheme="http://jznudt.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="单例模式" scheme="http://jznudt.github.io/tags/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="静态变量" scheme="http://jznudt.github.io/tags/%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F/"/>
    
      <category term="C++" scheme="http://jznudt.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>闭源库的功能扩展与完善</title>
    <link href="http://jznudt.github.io/2016/07/21/DLLModify/"/>
    <id>http://jznudt.github.io/2016/07/21/DLLModify/</id>
    <published>2016-07-21T04:09:01.000Z</published>
    <updated>2016-07-21T04:22:03.823Z</updated>
    
    <content type="html">&lt;h2 id=&quot;功能库构建&quot;&gt;&lt;a href=&quot;#功能库构建&quot; class=&quot;headerlink&quot; title=&quot;功能库构建&quot;&gt;&lt;/a&gt;功能库构建&lt;/h2&gt;&lt;p&gt;利用策略与工厂模式，构建了某闭源的功能模型库，主要用于无人飞行器上的自主寻的制导。现将骨干程序抽离如下：首先定义了导引律接口（Interface），在C++中采用了纯虚函数来实现，然后采用公有继承的方法，实现了三种典型的导引律，包括：比例导引律（PN）、修正比例导引律（APN）和追踪法导引律（TPN）。相关代码如下图所示：&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//导引律枚举&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; HOMINGLAW&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	PN,		&lt;span class=&quot;comment&quot;&gt;//比例导引律&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	APN,	&lt;span class=&quot;comment&quot;&gt;//修正比例导引律&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	TPN,	&lt;span class=&quot;comment&quot;&gt;//追踪法导引律&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; GuidanceLaw&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	GuidanceLaw();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; ~GuidanceLaw();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt;	BOOL &lt;span class=&quot;title&quot;&gt;Initialize&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt;	&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Advance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//其它代码&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	…………&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; PNGuidanceLaw : &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; GuidanceLaw&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//具体实现&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;BOOL &lt;span class=&quot;title&quot;&gt;Initialize&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Advance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; APNGuidanceLaw : &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; GuidanceLaw&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//具体实现&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;BOOL &lt;span class=&quot;title&quot;&gt;Initialize&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Advance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; TPNGuidanceLaw : &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; GuidanceLaw&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//具体实现&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;BOOL &lt;span class=&quot;title&quot;&gt;Initialize&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Advance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;策略模式&quot;&gt;&lt;a href=&quot;#策略模式&quot; class=&quot;headerlink&quot; title=&quot;策略模式&quot;&gt;&lt;/a&gt;策略模式&lt;/h2&gt;&lt;p&gt;在实现了上述三种典型的导引律基础上，采用策略与简单工厂模式，完成了自主寻的制导功能模型的开发，概述如下：&lt;br&gt; &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Guidance&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	Guidance() : pGuidanceLaw(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	Guidance(HOMINGLAW law)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;(law)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; PN:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			pGuidanceLaw = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PNGuidanceLaw;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; APN:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			pGuidanceLaw = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; APNGuidanceLaw;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; TPN;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			pGuidanceLaw = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TPNGuidanceLaw;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			pGuidanceLaw = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PNGuidanceLaw; &lt;span class=&quot;comment&quot;&gt;//默认采用比例导引律&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; ~Guidance();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//其它操作代码&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	…………&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	GuidanceLaw*	pGuidanceLaw;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	…………&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;功能扩展完善&quot;&gt;&lt;a href=&quot;#功能扩展完善&quot; class=&quot;headerlink&quot; title=&quot;功能扩展完善&quot;&gt;&lt;/a&gt;功能扩展完善&lt;/h2&gt;&lt;p&gt;在实际使用上述闭源模型过程中，用户提出需要新增一至两种导引律（也就是要增加GuidanceLaw的若干种具体实现）。因为提供的功能库仅为二进制形式，无法直接修改源码，造成了功能扩展的不便。那么，应该如何才能够便捷地实现上述功能呢？或者说，在设计功能模型时，应该如何优化实现方案，以便满足用户实际使用过程中的快捷功能扩展？&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;功能库构建&quot;&gt;&lt;a href=&quot;#功能库构建&quot; class=&quot;headerlink&quot; title=&quot;功能库构建&quot;&gt;&lt;/a&gt;功能库构建&lt;/h2&gt;&lt;p&gt;利用策略与工厂模式，构建了某闭源的功能模型库，主要用于无人飞行器上的自主寻的制导。现将骨干程序抽离如下：首先定义了导引律接口（Interface），在C++中采用了纯虚函数来实现，然后采用公有继承的方法，实现了三种典型的导引律，包括：比例导引律（PN）、修正比例导引律（APN）和追踪法导引律（TPN）。相关代码如下图所示：
    
    </summary>
    
      <category term="编程杂感" scheme="http://jznudt.github.io/categories/%E7%BC%96%E7%A8%8B%E6%9D%82%E6%84%9F/"/>
    
    
      <category term="设计模式" scheme="http://jznudt.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="策略模式" scheme="http://jznudt.github.io/tags/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="功能扩展" scheme="http://jznudt.github.io/tags/%E5%8A%9F%E8%83%BD%E6%89%A9%E5%B1%95/"/>
    
  </entry>
  
  <entry>
    <title>屏蔽C++开发的功能模型API中的实现细节</title>
    <link href="http://jznudt.github.io/2016/07/20/APIDesign/"/>
    <id>http://jznudt.github.io/2016/07/20/APIDesign/</id>
    <published>2016-07-20T14:38:02.000Z</published>
    <updated>2016-07-20T15:08:36.545Z</updated>
    
    <content type="html">&lt;h1 id=&quot;屏蔽C-开发的功能模型API中的实现细节&quot;&gt;&lt;a href=&quot;#屏蔽C-开发的功能模型API中的实现细节&quot; class=&quot;headerlink&quot; title=&quot;屏蔽C++开发的功能模型API中的实现细节&quot;&gt;&lt;/a&gt;屏蔽C++开发的功能模型API中的实现细节&lt;/h1&gt;&lt;p&gt;最近承担了利用C++开发某仿真模型的任务，最终提交形式为DLL，以及对应的.h头文件（按照划分粒度，可能有多个）及lib文件，采用面向对象和模块化的设计思路，已经完成了大体框架设计，概述如下：&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; CAntenna;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; CReciver;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; CDigitalProcessor;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; RADAR_API RADARDLL&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	RADARDLL();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//其它构造函数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; ~RADARDLL();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//执行初始化操作&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;	&lt;span class=&quot;title&quot;&gt;Initialize&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; INITPATAM&amp;amp; param)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//执行时间迭代步进操作&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;	&lt;span class=&quot;title&quot;&gt;Advance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	CAntenna*		m_Antenna;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	CReciver*			m_Receiver;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	CDigitalProcessor*	m_DigitalProcessor;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	……&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;感觉在头文件中暴露了太多的实现细节，例如把XX仿真模型拆分成了&lt;strong&gt;天线&lt;/strong&gt;等多个子系统。有没有一种设计思路，能尽量在头文件&lt;em&gt;屏蔽实现细节&lt;/em&gt;？最理想的情况是，除了暴露出来的公有接口外，基本上不包含任何的私有变量。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;屏蔽C-开发的功能模型API中的实现细节&quot;&gt;&lt;a href=&quot;#屏蔽C-开发的功能模型API中的实现细节&quot; class=&quot;headerlink&quot; title=&quot;屏蔽C++开发的功能模型API中的实现细节&quot;&gt;&lt;/a&gt;屏蔽C++开发的功能模型API中的实现细节&lt;/h1&gt;&lt;p&gt;最近承担了利用C++开发某仿真模型的任务，最终提交形式为DLL，以及对应的.h头文件（按照划分粒度，可能有多个）及lib文件，采用面向对象和模块化的设计思路，已经完成了大体框架设计，概述如下：
    
    </summary>
    
      <category term="编程杂感" scheme="http://jznudt.github.io/categories/%E7%BC%96%E7%A8%8B%E6%9D%82%E6%84%9F/"/>
    
    
      <category term="设计模式" scheme="http://jznudt.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="C++" scheme="http://jznudt.github.io/tags/C/"/>
    
      <category term="API设计" scheme="http://jznudt.github.io/tags/API%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>电子战系统仿真与测试的发展</title>
    <link href="http://jznudt.github.io/2016/07/20/EWSimTest/"/>
    <id>http://jznudt.github.io/2016/07/20/EWSimTest/</id>
    <published>2016-07-20T14:13:28.000Z</published>
    <updated>2016-07-20T15:07:04.676Z</updated>
    
    <content type="html">&lt;h1 id=&quot;电子战系统仿真与测试的发展&quot;&gt;&lt;a href=&quot;#电子战系统仿真与测试的发展&quot; class=&quot;headerlink&quot; title=&quot;电子战系统仿真与测试的发展&quot;&gt;&lt;/a&gt;电子战系统仿真与测试的发展&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://p14.qhimg.com/t01f0a3251589b147df.jpg&quot; alt=&quot;Markdown&quot;&gt;&lt;/p&gt;
&lt;p&gt;电子战系统的测试一直以来都是一项举足轻重的工程挑战，并且随着电子战系统的技术水平和预期性能的提高以及不断增强的相控阵（AESA）雷达威胁而迅速发展。每种新型电子战系统都将在试验靶场上面临最后一关，在这里必须测试系统在实际作战使用中可能面临的各种情况。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;但是，电子战系统在进入试验靶场前，首先要在具有复杂威胁环境模拟器的安装系统测试设备中进行全面的评估。甚至在电子战系统达到这些测试处理阶段前，还必须先在系统集成实验室和半实物的测试设备中完成许多测试。这些测试阶段极其重要，因为测试期间能发现问题并使研发人员在转向上述更昂贵的测试阶段前解决问题。其目的就是要经常进行测试和早期测试，特别是在实验室里进行测试。幸好，软件仿真工具和商用现货测试系统日趋成熟，现在已经成为成本高度敏感的电子战开发环境的必备工具。&lt;/p&gt;
&lt;h2 id=&quot;电子战测试机制&quot;&gt;&lt;a href=&quot;#电子战测试机制&quot; class=&quot;headerlink&quot; title=&quot;电子战测试机制&quot;&gt;&lt;/a&gt;电子战测试机制&lt;/h2&gt;&lt;p&gt;由于试验靶场非常少，几乎一直处于&lt;em&gt;使用中&lt;/em&gt;状态，&lt;em&gt;预订&lt;/em&gt;测试时间如同预约顶级医疗专家一样难。因此，美国国防部、主承包商和测试设备制造商迫于压力，只好将仿真与测试尽量从试验靶场转移回实验室。这就推动了对实验室具备更复杂先进测试能力的需求。不管怎样，由于这些基于商用现货的仿真与测试平台已经取得了长足的进步，所以现在的电子战系统在面临最终的验证挑战前就能得到更全面更好的评估。&lt;/p&gt;
&lt;p&gt;上述想法旨在利用仿真软件和商用测试设备，在设计过程的早期进行绝大多数的仿真、测试和分析。必须进行大量测试，让电子战系统在最大带宽范围内经受最大容量信号的考验，包括信号环境中频繁变化的波形、干扰、已知的威胁以及其他动态变化的因素。&lt;/p&gt;
&lt;p&gt;这种测试系统的能力是全面的，必须能正确模拟实时雷达脉冲特征、干扰和传播异常，包括如下方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;脉冲上升沿和下降沿时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;脉冲宽度, 脉冲重复频率及模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;每个脉冲的调制&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;频率和频谱特征&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;信号幅度&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;雷达天线方向图&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;天线扫描方式&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些测试系统还必须能产生和动态改变辐射源类型，对模式的变化进行仿真并实现其他功能，与先进威胁系统（例如相控阵雷达）不断增强的能力同步发展。&lt;/p&gt;
&lt;p&gt;对于仿真测试工程师来说幸运的是，这种需要大型数/模数据库、射频和微波测试装备（大多数为用户定制并且专用于特殊项目）的情况正在慢慢改变。这是由于美国国防部缩减预算引起的成本限制需要一种新途径，另外美国国防部还希望尽快扭转电子战技术多年以来在研究开发和采办预算中不受重视的局面。时间就是生命，而测试是系统研发耗时较多并且价格高企的部分之一，因此，业界加强了简化测试的开发工作。想要通过增强实验室部分的测试来达到目的，就必须了解需求是什么。&lt;/p&gt;
&lt;h2 id=&quot;基于商用现货的方法&quot;&gt;&lt;a href=&quot;#基于商用现货的方法&quot; class=&quot;headerlink&quot; title=&quot;基于商用现货的方法&quot;&gt;&lt;/a&gt;基于商用现货的方法&lt;/h2&gt;&lt;p&gt;一种典型的基于实验室的闭环电子战仿真与评估系统包括以下主要特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;信号波形的宽频带序列，产生新波形的软件，用于回放信号波形的一个或多个矢量信号发生器，其频率可以是从高频到&lt;strong&gt;18GHz&lt;/strong&gt; (有时更高)且调制带宽超过&lt;strong&gt;1GHz&lt;/strong&gt;的任意频率。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;系统能在尽可能短的反应时间内对波形进行数字化、记录、存储和回放。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;软件工具能快速对几小时的波形文件进行分类整理，识别出感兴趣的部分并加以修改，产生只包含特定波形的文件，最终生成了仿真但却是很“真”的信号环境。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;截获威胁并对其分类是一项艰巨的工作，需要经年累月对信号情报进行搜集、利用与分析，从而构建包含了特定雷达系统的极其详细信息的数据库，如友方的、敌方的和疑似敌方的雷达系统信息。所幸由于美国国防部长期致力于数据搜集，这样的数据库已经建成并持续更新。&lt;/p&gt;
&lt;p&gt;然而，威胁“前景”处于持续变化的状态，因为世界先进军事技术不断产生新的威胁雷达和雷达波形，一些先进雷达在作战期间能够实时（脉冲到脉冲）改变现有波形。因此，识别出全部可能存在的威胁是不现实的，先进电子战系统必须依靠高速数字信号处理能力和软件实时动态生成对抗手段。&lt;/p&gt;
&lt;p&gt;为了产生能反映实际情况的仿真威胁环境，必须考虑所有因素，例如信号传播和干扰的各种变化。利用信号生成和通道仿真软件来产生信号波形或波形序列，可以非常有效地仿真威胁环境。离散的任意波形发生器(AWG)或矢量信号发生器(VSG)可以实现合成信号的重构。&lt;/p&gt;
&lt;p&gt;在电子战系统仿真与评估的所有阶段中，实验室方法花费最少，虽然AVG和VSG通常只具备有限的多辐射源评估能力，却减轻了在较复杂威胁环境发生器上以及在安装系统测试设备上和开放空间试验靶场中进行测试所需要的工作量，还减少了重新设计和重编程所需要的工作量。就这一点来说，AVG和VSG是早期的评估系统，是试验靶场的补充而不是替换。他们的好处是闭环系统，使设计者们能完全控制研发期间所需要的测试、评估及“优化”，并且以很小的代价或者无需额外的费用就能重用或另作他用。&lt;/p&gt;
&lt;h2 id=&quot;像变色龙一样的相控阵雷达&quot;&gt;&lt;a href=&quot;#像变色龙一样的相控阵雷达&quot; class=&quot;headerlink&quot; title=&quot;像变色龙一样的相控阵雷达&quot;&gt;&lt;/a&gt;像变色龙一样的相控阵雷达&lt;/h2&gt;&lt;p&gt;由于两种不可控变数的存在，任何测试设备制造商、软件销售商、主承包商或其他机构都不可能产生针对电子战系统仿真与测试的理想解决方案。第一个变数是技术的变革，这种变革是如此之快，以至于今天的尖端科技明天就成了标准配置。主导这些进步的是所有电子战和雷达系统的核心组件：模-数转换器(ADC)、数-模转换器(DAC)、FPGA、GPU和通用处理器。&lt;/p&gt;
&lt;p&gt;第二个变数是对手们每年也在加速取得技术进步。尤其是相控阵雷达。多模式相控阵雷达正在进入世界上许多国家的军队。这些雷达常常表现出相似于变色龙的能力，这种能力使他们成为强大的威胁。除了具有许多其他雷达的功能外，相控阵雷达还能同时工作于许多不同的频率，采用有源波束形成方式产生多个子波束（每个子波束在不同频率上发射信号），随机改变每个脉冲的频率和其他特征，增大或减小每个天线单元的发射功率以免受到探测，采用包括各种扩谱技术在内的多种调制样式，在一些扇区以被动方式工作而在其他扇区以主动方式工作，还有许多其他特征。&lt;/p&gt;
&lt;p&gt;也许最令人惊异的是相控阵雷达日益增强的这种能力：搜集到足够多的目标相关信息就能推算出该目标的雷达截面积，从接收到的回波信号可得出发动机调制和通道效应，能有效产生目标的三维图像。相控阵雷达利用存储的已知目标信息，能识别出正在跟踪的飞机类型以及飞机配置的电子战和电子对抗能力。这一切使得相控阵雷达具有明显的优势。&lt;/p&gt;
&lt;h2 id=&quot;带宽的挑战&quot;&gt;&lt;a href=&quot;#带宽的挑战&quot; class=&quot;headerlink&quot; title=&quot;带宽的挑战&quot;&gt;&lt;/a&gt;带宽的挑战&lt;/h2&gt;&lt;p&gt;电子战测试中使用的大多数先进商用现货仪器的性能通常必须等于或优于待测的电子战系统，达到这个要求是仪器制造商的首要目标。最使人畏缩的挑战之一是带宽似乎将无限增大。电子战系统覆盖了宽广的频率范围，雷达与之相比以前一直是窄带的，工作频率范围只有几百兆赫兹。如今这种情况已经显著改变了，因为现在的雷达系统带宽一般能达到1GHz或甚至2GHz，预计2020年前带宽将扩大到&lt;strong&gt;4GHz&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;雷达信号和工作带宽的每次进步都会全面影响电子战系统，波及到系统的所有功能。例如，较大的带宽和较快的采样率明显增加了电子战系统必须采集和处理的样本数，而系统的处理容量和速度是有限的。电子战系统采集的数据（即I/Q采样）不仅要进行处理，还必须能够存储，这就需要超高性能（价格昂贵）的固态存储器和高速系统总线。&lt;/p&gt;
&lt;p&gt;记录带宽为2GHz的信号，即使时间很短也会产生几百万兆字节数据，唯一有效的处理办法就是利用FPGA和（或）GPU这样的高速信号处理工具。这种硬件在软件的协助下能分选出感兴趣的信号，只传送那些选中了（数量更少因此数据量更小）的信号到其他的信号处理器进行更详细处理。然后，电子战系统必须做出响应，这就需要更多的分析和处理。通常必须近实时完成这一切处理，因为响应时间“窗口”受控于敌方威胁系统。因此，不管电子战系统必须处理多少数据，它仍然只有相同的限定时间来进行处理。&lt;/p&gt;
&lt;p&gt;反应时间是影响电子战系统性能的另一个关键因素，它对于模拟电子战系统性能的测试系统同样重要。反应时间来源于信号处理设备引起的延时和将数据从一个功能模块传输到另一个功能模块（或从一台仪器到另一台仪器）引起的延时。在电子战系统设计中，尽可能缩短反应时间是绝对有必要的，因为响应时间是以微秒为测量单位。所以，即使逐渐缩短反应时间也是受欢迎的。缩短电子战测试系统的反应时间也很关键，通过选择高速通信总线以实现系统内点对点数据传输可以极大缩短反应时间。目前有代表性的是PCI快速总线(PCI)，它已经发展成能更好地集成进PC环境并能提供高达几千兆字节/秒的通用传输率。&lt;/p&gt;
&lt;p&gt;有效应对更大带宽和更短反应时间提出的挑战，以及对其他诸如无杂散动态范围(SFDR)和转换器分辨率这样很重要参数的测量，对于电子战仿真系统设计与电子战系统自身设计来说都同样重要。&lt;/p&gt;
&lt;h2 id=&quot;结语&quot;&gt;&lt;a href=&quot;#结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语&lt;/h2&gt;&lt;p&gt;通过在试验靶场上和在即将部署的平台上评估电子战系统（或者说雷达系统），全仪器控制的开放空间试验靶场是最有效的评估手段，这一说法是经得起论证的。然而，在设计和开发过程的早期，试验靶场并不是理想的评估场所，利用商用现货测试设备和仿真软件结合起来进行评估能够提供更强的灵活性、可重复性及进行特殊测试的能力。&lt;/p&gt;
&lt;p&gt;任何基于商用现货的测试解决方案都不是完美无缺的，虽然使用了设备和软件，这种测试系统还是像待评估系统一样复杂。然而，这种方案与五角大楼实现更高性价比的研究、测试、开发与评估（RTD&amp;amp;E）的目标是一致的,因为测试系统是一次性购买并在多次测试电子战和雷达系统时分期付款的，所以必定会在未来得到更广泛的使用。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;原作者简介：JohnHansen，现为&lt;a href=&quot;http://www.keysight.com/main/home.jspx?cc=CN&amp;amp;lc=chi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;是德技术公司（Keysight）&lt;/a&gt;解决方案规划工程师，在无线电、微波电子及防御行业内的系统工程和新产品开发领域拥有30多年的经验。&lt;/em&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;电子战系统仿真与测试的发展&quot;&gt;&lt;a href=&quot;#电子战系统仿真与测试的发展&quot; class=&quot;headerlink&quot; title=&quot;电子战系统仿真与测试的发展&quot;&gt;&lt;/a&gt;电子战系统仿真与测试的发展&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://p14.qhimg.com/t01f0a3251589b147df.jpg&quot; alt=&quot;Markdown&quot;&gt;&lt;/p&gt;
&lt;p&gt;电子战系统的测试一直以来都是一项举足轻重的工程挑战，并且随着电子战系统的技术水平和预期性能的提高以及不断增强的相控阵（AESA）雷达威胁而迅速发展。每种新型电子战系统都将在试验靶场上面临最后一关，在这里必须测试系统在实际作战使用中可能面临的各种情况。
    
    </summary>
    
      <category term="行业综述" scheme="http://jznudt.github.io/categories/%E8%A1%8C%E4%B8%9A%E7%BB%BC%E8%BF%B0/"/>
    
    
      <category term="电子战仿真" scheme="http://jznudt.github.io/tags/%E7%94%B5%E5%AD%90%E6%88%98%E4%BB%BF%E7%9C%9F/"/>
    
      <category term="发展综述" scheme="http://jznudt.github.io/tags/%E5%8F%91%E5%B1%95%E7%BB%BC%E8%BF%B0/"/>
    
  </entry>
  
  <entry>
    <title>Markdown文件语法学习</title>
    <link href="http://jznudt.github.io/2016/07/20/MarkDownSyntax/"/>
    <id>http://jznudt.github.io/2016/07/20/MarkDownSyntax/</id>
    <published>2016-07-20T05:08:24.000Z</published>
    <updated>2016-07-20T14:58:59.780Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Markdown-文件&quot;&gt;&lt;a href=&quot;#Markdown-文件&quot; class=&quot;headerlink&quot; title=&quot;Markdown 文件&quot;&gt;&lt;/a&gt;Markdown 文件&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://markdown.tw/images/208x128.png&quot; alt=&quot;Markdown&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This is Simplified Chinese Edition Document of&lt;br&gt;Markdown Syntax. If you are seeking for English Edition&lt;br&gt;Document. Please refer to &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown: Syntax&lt;/a&gt;.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;Markdown-Syntax&quot;&gt;&lt;a href=&quot;#Markdown-Syntax&quot; class=&quot;headerlink&quot; title=&quot;Markdown: Syntax&quot;&gt;&lt;/a&gt;Markdown: Syntax&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#overview&quot;&gt;概述&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#philosophy&quot;&gt;哲学&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#html&quot;&gt;行内 HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#autoescape&quot;&gt;特殊字符自动转换&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#block&quot;&gt;区块元素&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#p&quot;&gt;段落和换行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#header&quot;&gt;标题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#blockquote&quot;&gt;区块引言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#list&quot;&gt;清单&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#precode&quot;&gt;程序代码区块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#hr&quot;&gt;分隔线&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#span&quot;&gt;区段元素&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#link&quot;&gt;连结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#em&quot;&gt;强调&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#code&quot;&gt;程序代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#img&quot;&gt;图片&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#misc&quot;&gt;其它&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#backslash&quot;&gt;跳脱字符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#autolink&quot;&gt;自动连结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#acknowledgement&quot;&gt;感谢&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;这份文件是用 Markdown 写的，你可以&lt;a href=&quot;https://github.com/othree/markdown-syntax-zhtw/blob/master/syntax.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;看看它的原始档&lt;/a&gt; 。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;overview&quot;&gt;概述&lt;/h2&gt;

&lt;h3 id=&quot;philosophy&quot;&gt;哲学&lt;/h3&gt;

&lt;p&gt;Markdown 的目标是实现「易读易写」。&lt;/p&gt;
&lt;p&gt;不过最需要强调的便是它的可读性。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多卷标或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 &lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Setext&lt;/a&gt;、&lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;atx&lt;/a&gt;、&lt;a href=&quot;http://textism.com/tools/textile/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Textile&lt;/a&gt;、&lt;a href=&quot;http://docutils.sourceforge.net/rst.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;reStructuredText&lt;/a&gt;、&lt;a href=&quot;http://www.triptico.com/software/grutatxt.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Grutatext&lt;/a&gt; 和 &lt;a href=&quot;http://ettext.taint.org/doc/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EtText&lt;/a&gt;，然而最大灵感来源其实是纯文本的电子邮件格式。&lt;/p&gt;
&lt;p&gt;因此 Markdown 的语法全由标点符号所组成，并经过严谨慎选，是为了让它们看起来就像所要表达的意思。像是在文字两旁加上星号，看起来就像*强调*。Markdown 的列表看起来，嗯，就是清单。假如你有使用过电子邮件，区块引言看起来就真的像是引用一段文字。&lt;/p&gt;
&lt;h3 id=&quot;html&quot;&gt;行内 HTML&lt;/h3&gt;

&lt;p&gt;Markdown 的语法有个主要的目的：用来作为一种网络内容的&lt;em&gt;写作&lt;/em&gt;用语言。&lt;/p&gt;
&lt;p&gt;Markdown 不是要来取代 HTML，甚至也没有要和它相似，它的语法种类不多，只和 HTML 的一部分有关系，重点&lt;em&gt;不是&lt;/em&gt;要创造一种更容易写作 HTML 文件的语法，我认为 HTML 已经很容易写了，Markdown 的重点在于，它能让文件更容易阅读、编写。HTML 是一种&lt;em&gt;发布&lt;/em&gt;的格式，Markdown 是一种&lt;em&gt;编写&lt;/em&gt;的格式，因此，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。&lt;/p&gt;
&lt;p&gt;不在 Markdown 涵盖范围之外的标签，都可以直接在文件里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。&lt;/p&gt;
&lt;p&gt;只有区块元素──比如 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 等标签，必须在前后加上空行，以利与内容区隔。而且这些（元素）的开始与结尾标签，不可以用 tab 或是空白来缩排。Markdown 的产生器有智能型判断，可以避免在区块标签前后加上没有必要的 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 标签。&lt;/p&gt;
&lt;p&gt;举例来说，在 Markdown 文件里加上一段 HTML 表格：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This is a regular paragraph.

&amp;lt;table&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Foo&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;

This is another regular paragraph.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;请注意，Markdown 语法在 HTML 区块卷标中将不会被进行处理。例如，你无法在 HTML 区块内使用 Markdown 形式的&lt;code&gt;*强调*&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;HTML 的区段标签如 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;del&amp;gt;&lt;/code&gt; 则不受限制，可以在 Markdown 的段落、清单或是标题里任意使用。依照个人习惯，甚至可以不用Markdown 格式，而采用 HTML 标签来格式化。举例说明：如果比较喜欢 HTML 的  &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是影像标示语法。&lt;/p&gt;
&lt;p&gt;HTML 区段卷标和区块卷标不同，在区段标签的范围内， Markdown 的语法是有效的。&lt;/p&gt;
&lt;h3 id=&quot;autoescape&quot;&gt;特殊字符自动转换&lt;/h3&gt;

&lt;p&gt;在 HTML 文件中，有两个字符需要特殊处理： &lt;code&gt;&amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;amp;&lt;/code&gt; 。 &lt;code&gt;&amp;lt;&lt;/code&gt; 符号用于起始卷标，&lt;code&gt;&amp;amp;&lt;/code&gt; 符号则用于标记 HTML 实体，如果你只是想要使用这些符号，你必须要使用实体的形式，像是 &lt;code&gt;&amp;amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;amp;amp;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;amp;&lt;/code&gt; 符号其实很容易让写作网络文件的人感到困扰，如果你要打「AT&amp;amp;T」 ，你必须要写成「&lt;code&gt;AT&amp;amp;amp;T&lt;/code&gt;」 ，还得转换网址内的 &lt;code&gt;&amp;amp;&lt;/code&gt; 符号，如果你要链接到：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://images.google.com/images?num=30&amp;amp;q=larry+bird
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你必须要把网址转成：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://images.google.com/images?num=30&amp;amp;amp;q=larry+bird
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;才能放到链接卷标的 &lt;code&gt;href&lt;/code&gt; 属性里。不用说也知道这很容易忘记，这也可能是 HTML 标准检查所检查到的错误中，数量最多的。&lt;/p&gt;
&lt;p&gt;Markdown 允许你直接使用这些符号，但是你要小心跳脱字符的使用，如果你是在HTML 实体中使用 &lt;code&gt;&amp;amp;&lt;/code&gt; 符号的话，它不会被转换，而在其它情形下，它则会被转换成 &lt;code&gt;&amp;amp;amp;&lt;/code&gt;。所以你如果要在文件中插入一个著作权的符号，你可以这样写：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;amp;copy;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Markdown 将不会对这段文字做修改，但是如果你这样写：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;AT&amp;amp;T
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Markdown 就会将它转为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;AT&amp;amp;amp;T
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;类似的状况也会发生在 &lt;code&gt;&amp;lt;&lt;/code&gt; 符号上，因为 Markdown 支持 &lt;a href=&quot;#html&quot;&gt;行内 HTML&lt;/a&gt; ，如果你是使用 &lt;code&gt;&amp;lt;&lt;/code&gt; 符号作为 HTML 卷标使用，那 Markdown 也不会对它做任何转换，但是如果你是写：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;4 &amp;lt; 5
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Markdown 将会把它转换为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;4 &amp;amp;lt; 5
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;不过需要注意的是，code 范围内，不论是行内还是区块， &lt;code&gt;&amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;amp;&lt;/code&gt; 两个符号都&lt;em&gt;一定&lt;/em&gt;会被转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML code （和 HTML 相对而言， HTML 语法中，你要把所有的 &lt;code&gt;&amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;amp;&lt;/code&gt; 都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。）&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;block&quot;&gt;区块元素&lt;/h2&gt;


&lt;h3 id=&quot;p&quot;&gt;段落和换行&lt;/h3&gt;

&lt;p&gt;一个段落是由一个以上相连接的行句组成，而一个以上的空行则会切分出不同的段落（空行的定义是显示上看起来像是空行，便会被视为空行。比方说，若某一行只包含空白和 tab，则该行也会被视为空行），一般的段落不需要用空白或断行缩排。&lt;/p&gt;
&lt;p&gt;「一个以上相连接的行句组成」这句话其实暗示了 Markdown 允许段落内的强迫断行，这个特性和其他大部分的 text-to-HTML 格式不一样（包括 MovableType 的「Convert Line Breaks」选项），其它的格式会把每个断行都转成 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; 标签。&lt;/p&gt;
&lt;p&gt;如果你&lt;em&gt;真的&lt;/em&gt;想要插入 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; 标签的话，在行尾加上两个以上的空白，然后按 enter。&lt;/p&gt;
&lt;p&gt;是的，这确实需要花比较多功夫来插入 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; ，但是「每个换行都转换为 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;」的方法在 Markdown 中并不适合， Markdown 中 email 式的 &lt;a href=&quot;#blockquote&quot;&gt;区块引言&lt;/a&gt; 和多段落的 &lt;a href=&quot;#list&quot;&gt;清单&lt;/a&gt; 在使用换行来排版的时候，不但更好用，还更好阅读。&lt;/p&gt;
&lt;h3 id=&quot;header&quot;&gt;标题&lt;/h3&gt;

&lt;p&gt;Markdown 支持两种标题的语法，&lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Setext&lt;/a&gt; 和 &lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;atx&lt;/a&gt; 形式。&lt;/p&gt;
&lt;p&gt;Setext 形式是用底线的形式，利用 &lt;code&gt;=&lt;/code&gt; （最高阶标题）和 &lt;code&gt;-&lt;/code&gt; （第二阶标题），例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This is an H1
=============

This is an H2
-------------
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;任何数量的 &lt;code&gt;=&lt;/code&gt; 和 &lt;code&gt;-&lt;/code&gt; 都可以有效果。&lt;/p&gt;
&lt;p&gt;Atx 形式则是在行首插入 1 到 6 个 &lt;code&gt;#&lt;/code&gt; ，对应到标题 1 到 6 阶，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# This is an H1

## This is an H2

###### This is an H6
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你可以选择性地「关闭」atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上 &lt;code&gt;#&lt;/code&gt;，而行尾的 &lt;code&gt;#&lt;/code&gt; 数量也不用和开头一样（行首的井字数量决定标题的阶数）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# This is an H1 #

## This is an H2 ##

### This is an H3 ######
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;blockquote&quot;&gt;Blockquotes&lt;/h3&gt;

&lt;p&gt;Markdown 使用 email 形式的区块引言，如果你很熟悉如何在 email 信件中引言，你就知道怎么在 Markdown 文件中建立一个区块引言，那会看起来像是你强迫断行，然后在每行的最前面加上 &lt;code&gt;&amp;gt;&lt;/code&gt; ：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
&amp;gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
&amp;gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
&amp;gt; 
&amp;gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
&amp;gt; id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Markdown 也允许你只在整个段落的第一行最前面加上 &lt;code&gt;&amp;gt;&lt;/code&gt; ：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.

&amp;gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;区块引言可以有阶层（例如：引言内的引言），只要根据层数加上不同数量的 &lt;code&gt;&amp;gt;&lt;/code&gt; ：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; This is the first level of quoting.
&amp;gt;
&amp;gt; &amp;gt; This is nested blockquote.
&amp;gt;
&amp;gt; Back to the first level.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;引言的区块内也可以使用其他的 Markdown 语法，包括标题、列表、程序代码区块等：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; ## This is a header.
&amp;gt; 
&amp;gt; 1.   This is the first list item.
&amp;gt; 2.   This is the second list item.
&amp;gt; 
&amp;gt; Here&amp;apos;s some example code:
&amp;gt; 
&amp;gt;     return shell_exec(&amp;quot;echo $input | $markdown_script&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;任何标准的文本编辑器都能简单地建立 email 样式的引言，例如 BBEdit ，你可以选取文字后然后从选单中选择&lt;em&gt;增加引言阶层&lt;/em&gt;。&lt;/p&gt;
&lt;h3 id=&quot;list&quot;&gt;清单&lt;/h3&gt;

&lt;p&gt;Markdown 支持有序列表和无序列表。&lt;/p&gt;
&lt;p&gt;无序清单使用星号、加号或是减号作为列表标记：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*   Red
*   Green
*   Blue
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;等同于：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;+   Red
+   Green
+   Blue
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;也等同于：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-   Red
-   Green
-   Blue
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;有序列表则使用数字接着一个英文句点：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.  Bird
2.  McHale
3.  Parish
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;ol&amp;gt;
&amp;lt;li&amp;gt;Bird&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;McHale&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;Parish&amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你的列表标记写成：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.  Bird
1.  McHale
1.  Parish
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或甚至是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;3. Bird
1. McHale
8. Parish
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。&lt;/p&gt;
&lt;p&gt;如果你使用懒惰的写法，建议第一个项目最好还是从 1. 开始，因为 Markdown 未来可能会支持有序列表的 start 属性。&lt;/p&gt;
&lt;p&gt;列表项目标记通常是放在最左边，但是其实也可以缩排，最多三个空白，项目标记后面则一定要接着至少一个空白或 tab。&lt;/p&gt;
&lt;p&gt;要让清单看起来更漂亮，你可以把内容用固定的缩排整理好：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
    viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
    Suspendisse id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是如果你很懒，那也不一定需要：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
Suspendisse id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果列表项目间用空行分开， Markdown 会把项目的内容在输出时用 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;br&gt;标签包起来，举例来说：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*   Bird
*   Magic
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会被转换为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;Bird&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;Magic&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是这个：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*   Bird

*   Magic
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会被转换为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Bird&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Magic&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;列表项目可以包含多个段落，每个项目下的段落都必须缩排 4 个空白或是一个 tab ：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.  This is a list item with two paragraphs. Lorem ipsum dolor
    sit amet, consectetuer adipiscing elit. Aliquam hendrerit
    mi posuere lectus.

    Vestibulum enim wisi, viverra nec, fringilla in, laoreet
    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum
    sit amet velit.

2.  Suspendisse id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你每行都有缩排，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*   This is a list item with two paragraphs.

    This is the second paragraph in the list item. You&amp;apos;re
only required to indent the first line. Lorem ipsum dolor
sit amet, consectetuer adipiscing elit.

*   Another item in the same list.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果要在列表项目内放进引言，那 &lt;code&gt;&amp;gt;&lt;/code&gt; 就需要缩排：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*   A list item with a blockquote:

    &amp;gt; This is a blockquote
    &amp;gt; inside a list item.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果要放程序代码区块的话，该区块就需要缩排&lt;em&gt;两次&lt;/em&gt;，也就是 8 个空白或是两个 tab：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*   A list item with a code block:

        &amp;lt;code goes here&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当然，项目列表很可能会不小心产生，像是下面这样的写法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1986. What a great season.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;换句话说，也就是在行首出现&lt;em&gt;数字-句点-空白&lt;/em&gt;，要避免这样的状况，你可以在句点前面加上反斜杠。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1986\. What a great season.
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;precode&quot;&gt;程序代码区块&lt;/h3&gt;

&lt;p&gt;和程序相关的写作或是卷标语言原始码通常会有已经排版好的程序代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; 标签来把程序代码区块包起来。&lt;/p&gt;
&lt;p&gt;要在 Markdown 中建立程序代码区块很简单，只要简单地缩排 4 个空白或是 1 个 tab 就可以，例如，下面的输入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This is a normal paragraph:

    This is a code block.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Markdown 会转换成：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;This is a normal paragraph:&amp;lt;/p&amp;gt;

&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;This is a code block.
&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个每行一阶的缩排（4 个空白或是 1 个 tab），都会被移除，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Here is an example of AppleScript:

    tell application &amp;quot;Foo&amp;quot;
        beep
    end tell
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会被转换为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;Here is an example of AppleScript:&amp;lt;/p&amp;gt;

&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;tell application &amp;quot;Foo&amp;quot;
    beep
end tell
&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一个程序代码区块会一直持续到没有缩排的那一行（或是文件结尾）。&lt;/p&gt;
&lt;p&gt;在程序代码区块里面， &lt;code&gt;&amp;amp;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;gt;&lt;/code&gt; 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩排就可以了，剩下的 Markdown 都会帮你处理，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;footer&amp;quot;&amp;gt;
    &amp;amp;copy; 2004 Foo Corporation
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会被转换为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;&amp;amp;lt;div class=&amp;quot;footer&amp;quot;&amp;amp;gt;
    &amp;amp;amp;copy; 2004 Foo Corporation
&amp;amp;lt;/div&amp;amp;gt;
&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;程序代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。&lt;/p&gt;
&lt;h3 id=&quot;hr&quot;&gt;分隔线&lt;/h3&gt;

&lt;p&gt;你可以在一行中用三个或以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号中间插入空白。下面每种写法都可以建立分隔线：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* * *

***

*****

- - -

---------------------------------------
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&quot;span&quot;&gt;区段元素&lt;/h2&gt;

&lt;h3 id=&quot;link&quot;&gt;连结&lt;/h3&gt;

&lt;p&gt;Markdown 支持两种形式的链接语法： &lt;em&gt;行内&lt;/em&gt;和&lt;em&gt;参考&lt;/em&gt;两种形式。&lt;/p&gt;
&lt;p&gt;不管是哪一种，链接的文字都是用 [方括号] 来标记。&lt;/p&gt;
&lt;p&gt;要建立一个行内形式的连结，只要在方块括号后面马上接着括号并插入网址连结即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This is [an example](http://example.com/ &amp;quot;Title&amp;quot;) inline link.

[This link](http://example.net/) has no title attribute.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会产生：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;This is &amp;lt;a href=&amp;quot;http://example.com/&amp;quot; title=&amp;quot;Title&amp;quot;&amp;gt;
an example&amp;lt;/a&amp;gt; inline link.&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://example.net/&amp;quot;&amp;gt;This link&amp;lt;/a&amp;gt; has no
title attribute.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你是要链接到同样主机的资源，你可以使用相对路径：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;See my [About](/about/) page for details.   
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参考形式的连结使用另外一个方括号接在链接文字的括号后面，而在第二个方括号里面要填入用以辨识链接的标签：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This is [an example][id] reference-style link.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你也可以选择性地在两个方括号中间加上空白：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This is [an example] [id] reference-style link.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接着，在文件的任意处，你可以把这个标签的链接内容定义出来：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[id]: http://example.com/  &amp;quot;Optional Title Here&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;连结定义的形式为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方括号，里面输入链接的辨识用标签&lt;/li&gt;
&lt;li&gt;接着一个冒号&lt;/li&gt;
&lt;li&gt;接着一个以上的空白或 tab&lt;/li&gt;
&lt;li&gt;接着连结的网址&lt;/li&gt;
&lt;li&gt;选择性地接着 title 内容，可以用单引号、双引号或是括号包着&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面这三种连结的定义都是相同：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[foo]: http://example.com/  &amp;quot;Optional Title Here&amp;quot;
[foo]: http://example.com/  &amp;apos;Optional Title Here&amp;apos;
[foo]: http://example.com/  (Optional Title Here)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;请注意：&lt;/strong&gt;有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的连结 title。&lt;/p&gt;
&lt;p&gt;连结网址也可以用方括号包起来：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[id]: &amp;lt;http://example.com/&amp;gt;  &amp;quot;Optional Title Here&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你也可以把 title 属性放到下一行，也可以加一些缩排，网址太长的话，这样会比较好看：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[id]: http://example.com/longish/path/to/resource/here
    &amp;quot;Optional Title Here&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;网址定义只有在产生连结的时候用到，并不会直接出现在文件之中。&lt;/p&gt;
&lt;p&gt;链接辨识卷标可以有字母、数字、空白和标点符号，但是并&lt;em&gt;不&lt;/em&gt;区分大小写，因此下面两个连结是一样的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[link text][a]
[link text][A]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;默认的链接卷标&lt;/em&gt;功能让你可以省略指定链接标签，这种情形下，链接卷标和链接文字会视为相同，要用默认链接卷标只要在链接文字后面加上一个空的方括号，如果你要让 “Google” 连结到 google.com，你可以简化成：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Google][]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后定义连结内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Google]: http://google.com/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;由于链接文字可能包含空白，所以这种简化的标签内也可以包含多个文字：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Visit [Daring Fireball][] for more information.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后接着定义连结：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Daring Fireball]: http://daringfireball.net/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;连结的定义可以放在文件中的任何一个地方，我比较偏好直接放在连结出现段落的后面，你也可以把它放在文件最后面，就像是批注一样。&lt;/p&gt;
&lt;p&gt;下面是一个参考式链接的范例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;I get 10 times more traffic from [Google] [1] than from
[Yahoo] [2] or [MSN] [3].

  [1]: http://google.com/        &amp;quot;Google&amp;quot;
  [2]: http://search.yahoo.com/  &amp;quot;Yahoo Search&amp;quot;
  [3]: http://search.msn.com/    &amp;quot;MSN Search&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果改成用连结名称的方式写：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;I get 10 times more traffic from [Google][] than from
[Yahoo][] or [MSN][].

  [google]: http://google.com/        &amp;quot;Google&amp;quot;
  [yahoo]:  http://search.yahoo.com/  &amp;quot;Yahoo Search&amp;quot;
  [msn]:    http://search.msn.com/    &amp;quot;MSN Search&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面两种写法都会产生下面的 HTML。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;I get 10 times more traffic from &amp;lt;a href=&amp;quot;http://google.com/&amp;quot;
title=&amp;quot;Google&amp;quot;&amp;gt;Google&amp;lt;/a&amp;gt; than from
&amp;lt;a href=&amp;quot;http://search.yahoo.com/&amp;quot; title=&amp;quot;Yahoo Search&amp;quot;&amp;gt;Yahoo&amp;lt;/a&amp;gt;
or &amp;lt;a href=&amp;quot;http://search.msn.com/&amp;quot; title=&amp;quot;MSN Search&amp;quot;&amp;gt;MSN&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下面是用行内形式写的同样一段内容的 Markdown 文件，提供作为比较之用：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;I get 10 times more traffic from [Google](http://google.com/ &amp;quot;Google&amp;quot;)
than from [Yahoo](http://search.yahoo.com/ &amp;quot;Yahoo Search&amp;quot;) or
[MSN](http://search.msn.com/ &amp;quot;MSN Search&amp;quot;).
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参考式的连结其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的连结却会增加到 176 个字符，如果是用纯 HTML 格式来写，会有 234 个字符，在 HTML 格式中，卷标比文字还要多。&lt;/p&gt;
&lt;p&gt;使用 Markdown 的参考式连结，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的信息移到段落文字之外，你就可以增加连结而不让文章的阅读感觉被打断。&lt;/p&gt;
&lt;h3 id=&quot;em&quot;&gt;强调&lt;/h3&gt;

&lt;p&gt;Markdown 使用星号（&lt;code&gt;*&lt;/code&gt;）和底线（&lt;code&gt;_&lt;/code&gt;）作为标记强调字词的符号，被 &lt;code&gt;*&lt;/code&gt; 或 &lt;code&gt;_&lt;/code&gt; 包围的字词会被转成用 &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; 标签包围，用两个 &lt;code&gt;*&lt;/code&gt; 或 &lt;code&gt;_&lt;/code&gt; 包起来的话，则会被转成 &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*single asterisks*

_single underscores_

**double asterisks**

__double underscores__
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会转成：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;em&amp;gt;single asterisks&amp;lt;/em&amp;gt;

&amp;lt;em&amp;gt;single underscores&amp;lt;/em&amp;gt;

&amp;lt;strong&amp;gt;double asterisks&amp;lt;/strong&amp;gt;

&amp;lt;strong&amp;gt;double underscores&amp;lt;/strong&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启卷标，就要用什么符号结束。&lt;/p&gt;
&lt;p&gt;强调也可以直接插在文字中间：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;un*frigging*believable
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是如果你的 &lt;code&gt;*&lt;/code&gt; 和 &lt;code&gt;_&lt;/code&gt; 两边都有空白的话，它们就只会被当成普通的符号。&lt;/p&gt;
&lt;p&gt;如果要在文字前后直接插入普通的星号或底线，你可以用反斜杠：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\*this text is surrounded by literal asterisks\*
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;code&quot;&gt;程序代码&lt;/h3&gt;

&lt;p&gt;如果要标记一小段行内程序代码，你可以用反引号把它包起来（&lt;code&gt;` &lt;/code&gt;），例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Use the `printf()` function.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会产生：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;Use the &amp;lt;code&amp;gt;printf()&amp;lt;/code&amp;gt; function.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果要在程序代码区段内插入反引号，你可以用多个反引号来开启和结束程序代码区段：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;``There is a literal backtick (`) here.``
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这段语法会产生：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;code&amp;gt;There is a literal backtick (`) here.&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;程序代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A single backtick in a code span: `` ` ``

A backtick-delimited string in a code span: `` `foo` ``
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会产生：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;A single backtick in a code span: &amp;lt;code&amp;gt;`&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;A backtick-delimited string in a code span: &amp;lt;code&amp;gt;`foo`&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在程序代码区段内，&lt;code&gt;&amp;amp;&lt;/code&gt; 和方括号都会被转成 HTML 实体，这样会比较容易插入 HTML 原始码，Markdown 会把下面这段：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Please don&amp;apos;t use any `&amp;lt;blink&amp;gt;` tags.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;转为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;Please don&amp;apos;t use any &amp;lt;code&amp;gt;&amp;amp;lt;blink&amp;amp;gt;&amp;lt;/code&amp;gt; tags.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你也可以这样写：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;`&amp;amp;#8212;` is the decimal-encoded equivalent of `&amp;amp;mdash;`.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以产生：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;code&amp;gt;&amp;amp;amp;#8212;&amp;lt;/code&amp;gt; is the decimal-encoded
equivalent of &amp;lt;code&amp;gt;&amp;amp;amp;mdash;&amp;lt;/code&amp;gt;.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;img&quot;&gt;图片&lt;/h3&gt;

&lt;p&gt;很明显地，要在纯文本应用中设计一个 「自然」的语法来插入图片是有一定难度的。&lt;/p&gt;
&lt;p&gt;Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： &lt;em&gt;行内&lt;/em&gt;和&lt;em&gt;参考&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;行内图片的语法看起来像是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;![Alt text](/path/to/img.jpg)

![Alt text](/path/to/img.jpg &amp;quot;Optional title&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;详细叙述如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个惊叹号 &lt;code&gt;!&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;接着一对方括号，里面放上图片的替换文字&lt;/li&gt;
&lt;li&gt;接着一对普通括号，里面放上图片的网址，最后还可以用引号包住并加上&lt;br&gt;选择性的 ‘title’ 文字。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考式的图片语法则长得像这样：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;![Alt text][id]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[id]: url/to/image  &amp;quot;Optional title attribute&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 标签。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;misc&quot;&gt;其它&lt;/h2&gt;

&lt;h3 id=&quot;autolink&quot;&gt;自动连结&lt;/h3&gt;

&lt;p&gt;Markdown 支持比较简短的自动连结形式来处理网址和电子邮件信箱，只要是用方括号包起来， Markdown 就会自动把它转成链接，链接的文字就和链接位置一样，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;http://example.com/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Markdown 会转为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;http://example.com/&amp;quot;&amp;gt;http://example.com/&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;自动的邮件连结也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以混淆一些不好的信箱地址收集机器人，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;address@example.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Markdown 会转成：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;&amp;amp;#x6D;&amp;amp;#x61;i&amp;amp;#x6C;&amp;amp;#x74;&amp;amp;#x6F;:&amp;amp;#x61;&amp;amp;#x64;&amp;amp;#x64;&amp;amp;#x72;&amp;amp;#x65;
&amp;amp;#115;&amp;amp;#115;&amp;amp;#64;&amp;amp;#101;&amp;amp;#120;&amp;amp;#x61;&amp;amp;#109;&amp;amp;#x70;&amp;amp;#x6C;e&amp;amp;#x2E;&amp;amp;#99;&amp;amp;#111;
&amp;amp;#109;&amp;quot;&amp;gt;&amp;amp;#x61;&amp;amp;#x64;&amp;amp;#x64;&amp;amp;#x72;&amp;amp;#x65;&amp;amp;#115;&amp;amp;#115;&amp;amp;#64;&amp;amp;#101;&amp;amp;#120;&amp;amp;#x61;
&amp;amp;#109;&amp;amp;#x70;&amp;amp;#x6C;e&amp;amp;#x2E;&amp;amp;#99;&amp;amp;#111;&amp;amp;#109;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在浏览器里面，这段字符串会变成一个可以点击的「address@example.com」连结。&lt;/p&gt;
&lt;p&gt;（这种作法虽然可以混淆不少的机器人，但并无法全部挡下来，不过这样也比什么都不做好些。无论如何，公开你的信箱终究会引来广告信件的。）&lt;/p&gt;
&lt;h3 id=&quot;backslash&quot;&gt;跳脱字符&lt;/h3&gt;

&lt;p&gt;Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; 标签），你可以在星号的前面加上反斜杠：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\*literal asterisks\*
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Markdown 支持在下面这些符号前面加上反斜杠来帮助插入普通的符号：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\   反斜杠
`   反引号
*   星号
_   底线
{}  大括号
[]  方括号
()  括号
#   井字号
+    加号
-    减号
.   英文句点
!   惊叹号
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;acknowledgement&quot;&gt;感谢&lt;/h2&gt;

&lt;p&gt;感谢 &lt;a href=&quot;https://twitter.com/#!/leafy7382&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;leafy7382&lt;/a&gt; 协助翻译，&lt;a href=&quot;http://iamhlb.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hlb&lt;/a&gt;、&lt;a href=&quot;http://twitter.com/randylien&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Randylien&lt;/a&gt; 帮忙润稿，&lt;a href=&quot;https://twitter.com/#!/ethantw&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ethantw&lt;/a&gt; 的&lt;a href=&quot;http://ethantw.net/projects/han/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;汉字标准格式・CSS Reset&lt;/a&gt;， &lt;a href=&quot;http://kidwm.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WM&lt;/a&gt; 回报文字错误。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Markdown-文件&quot;&gt;&lt;a href=&quot;#Markdown-文件&quot; class=&quot;headerlink&quot; title=&quot;Markdown 文件&quot;&gt;&lt;/a&gt;Markdown 文件&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://markdown.tw/images/208x128.png&quot; alt=&quot;Markdown&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This is Simplified Chinese Edition Document of&lt;br&gt;Markdown Syntax. If you are seeking for English Edition&lt;br&gt;Document. Please refer to &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown: Syntax&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="基础学习" scheme="http://jznudt.github.io/categories/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Markdown" scheme="http://jznudt.github.io/tags/Markdown/"/>
    
  </entry>
  
</feed>
