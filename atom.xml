<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>品创信联</title>
  <subtitle>品创世界，信联天下</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jznudt.github.io/"/>
  <updated>2016-07-25T13:01:15.250Z</updated>
  <id>http://jznudt.github.io/</id>
  
  <author>
    <name>Zhao Jing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常用模型验证方法及适用性总结</title>
    <link href="http://jznudt.github.io/2016/07/25/ModelVVAApproaches/"/>
    <id>http://jznudt.github.io/2016/07/25/ModelVVAApproaches/</id>
    <published>2016-07-25T12:24:02.000Z</published>
    <updated>2016-07-25T13:01:15.250Z</updated>
    
    <content type="html">&lt;p&gt;在模型校验过程中，不同校验方法的选择，与校验对象的具体特点紧密相关。在&lt;strong&gt;MIS&lt;/strong&gt;（军用信息系统）的开发过程中，除了最终得到软件系统外，主要的中间产品包括功能需求、概念模型、数学模型、物理效应模型、系统方案、软件程序、系统设备、测试及试验数据等。在上述产品中，功能需求、概念模型、数学模型、物理效应模型、系统方案大都以文档形式存在，一般情况下可将其统称为文档类产品。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;通过总结发现，适用于上述系统的模型数据校验方法主要分为三类：&lt;code&gt;基础型&lt;/code&gt;、&lt;code&gt;分析测试型&lt;/code&gt;、&lt;code&gt;数据处理型&lt;/code&gt;方法。本节将对这三类模型测试方法进行具体分析，并对其适用性进行简要分析。&lt;/p&gt;
&lt;h2 id=&quot;基础型校验方法&quot;&gt;&lt;a href=&quot;#基础型校验方法&quot; class=&quot;headerlink&quot; title=&quot;基础型校验方法&quot;&gt;&lt;/a&gt;基础型校验方法&lt;/h2&gt;&lt;p&gt;基础型模型校验方法主要包括&lt;strong&gt;非形式化&lt;/strong&gt;、&lt;strong&gt;形式化&lt;/strong&gt;方法两大类。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;非形式化方法上要包括图灵测试、当面验证、桌面核查、专家评审法等，其中专家评审法又可具体分为审核、检查、审查、顶演等多种不同方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;非形式化校验方法是军用软件系统模型校验常用的方法，它适用于各个校验的环节。对于文档类产品，由于具有专业性强和非可测性的特点，其主要的校验手段就是由领域专家参与，基于非形式化方法对其进行评估。对于软件程序、系统设备、测试及试验数据、乃至整个软件系统，可以使用桌面核查方法对其进行校核；在仿真测试或试验之后，基于测试或试验结果，将当面验证、图灵测试等方法与其它校验相结合，可以有效地评估试验对象的可信性。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;形式化方法较为通用的形式化方法包括归纳、推理、逻辑演绎、归纳断言、λ运算、谓词运算、谓词转换、正确性证明等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一般地，形式化方法很难直接使用，但归纳、推理等部分方法的思想已在数学模型、物理效应模型等产品的评估过程中得到了应用。下图给出了上述两种基础型校验方法的适用性。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/png/20160725_BasicVVAChart.png&quot; alt=&quot;基础型模型校验方法的适用性分析示意图&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;分析测试型校验方法&quot;&gt;&lt;a href=&quot;#分析测试型校验方法&quot; class=&quot;headerlink&quot; title=&quot;分析测试型校验方法&quot;&gt;&lt;/a&gt;分析测试型校验方法&lt;/h2&gt;&lt;p&gt;分析测试型方法是在模型校验过程中，用于对各类模型进行分析、测试的方法统称。&lt;/p&gt;
&lt;p&gt;从方法的应用目的来分，可分为&lt;em&gt;策略型&lt;/em&gt;、&lt;em&gt;结构型&lt;/em&gt;、&lt;em&gt;功能型&lt;/em&gt;方法三类；从方法是否需要运行模型的角度考虑，主要分为&lt;strong&gt;静态分析&lt;/strong&gt;、&lt;strong&gt;动态测试&lt;/strong&gt;方法两大类。下面进行详细地描述。&lt;/p&gt;
&lt;h3 id=&quot;策略型方法&quot;&gt;&lt;a href=&quot;#策略型方法&quot; class=&quot;headerlink&quot; title=&quot;策略型方法&quot;&gt;&lt;/a&gt;策略型方法&lt;/h3&gt;&lt;p&gt;为系统或模型测试计划提供理论支持，根据模型自身特点及开发过程的不同，主要包括自底向上测试、自顶向下测试、子模型/模块测试、多级验证等方法。&lt;/p&gt;
&lt;h3 id=&quot;结构型方法&quot;&gt;&lt;a href=&quot;#结构型方法&quot; class=&quot;headerlink&quot; title=&quot;结构型方法&quot;&gt;&lt;/a&gt;结构型方法&lt;/h3&gt;&lt;p&gt;类似于软件上程中的白箱测试方法，利用数据流图和控制流图，通过检查模型元素如语句、分支、条件、循环、内部逻辑、内部数据表示、子模型接口以及模型运行路径等，对模型内部结构的正确性进行评估。&lt;/p&gt;
&lt;h3 id=&quot;功能型方法&quot;&gt;&lt;a href=&quot;#功能型方法&quot; class=&quot;headerlink&quot; title=&quot;功能型方法&quot;&gt;&lt;/a&gt;功能型方法&lt;/h3&gt;&lt;p&gt;类似于软件工程中的黑箱测试方法，在了解模型的功能、性能指标前提下，通过测试来考察各项功能是否正确实现。换句话说，功能型方法上要用于评估模型输入输出转换的正确性，通过向模型输入数据井评估对应输出结果的正确性来完成对模型各项功能的测试。&lt;/p&gt;
&lt;h3 id=&quot;静态分析方法&quot;&gt;&lt;a href=&quot;#静态分析方法&quot; class=&quot;headerlink&quot; title=&quot;静态分析方法&quot;&gt;&lt;/a&gt;静态分析方法&lt;/h3&gt;&lt;p&gt;静态分析方法不需要运行模型，主要通过人工分析或借助工具来评估模型设计或源代码，以考察其正确性。&lt;/p&gt;
&lt;h3 id=&quot;动态分析方法&quot;&gt;&lt;a href=&quot;#动态分析方法&quot; class=&quot;headerlink&quot; title=&quot;动态分析方法&quot;&gt;&lt;/a&gt;动态分析方法&lt;/h3&gt;&lt;p&gt;基于不同的测试目的，在给定的输入条件下执行模型，主要通过考察模型的运行过程和运行结果来评估模型的可信性。动态测试方法一般需与数据处理型方法相结合，以便对测试结果数据进行分析和评估，最终得到针对模型的评估结果。&lt;/p&gt;
&lt;p&gt;需要强调的是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由于是按照不同的方式进行划分，上述五种方法在一定程度上有所交叉。例如，结构型方法与功能型方法又分别包含静态分析、动态测试方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;常见的分析测试型模型校验方法如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/png/20160725_AnalysisVVAClassChart.png&quot; alt=&quot;分析测试型模型校验方法分类图&quot;&gt;&lt;/p&gt;
&lt;p&gt;分析测试型方法的主要应用对象是数学模型、物理效应模型、软件程序、系统设备、软件系统等。由于数学模型和物理效应模型&lt;strong&gt;不能&lt;/strong&gt;直接运行，所以其验证方法主要包括功能型、结构型方法中的静态分析方法；对于软件程序、系统设备、软件系统等，上述各类方法均可使用。&lt;/p&gt;
&lt;p&gt;分析测试型方法的适用性分析参见下图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/png/20160725_AnalysisVVAUsageChart.png&quot; alt=&quot;分析测试型方法的适用性示意图&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;数据处理型校验方法&quot;&gt;&lt;a href=&quot;#数据处理型校验方法&quot; class=&quot;headerlink&quot; title=&quot;数据处理型校验方法&quot;&gt;&lt;/a&gt;数据处理型校验方法&lt;/h2&gt;&lt;p&gt;数据处理型验证方法的应用对象即为测试或试验数据，通过对其分析、处理和评估，实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于实际试验的测试数据，验证相应模块的数学模型（模型程序）；&lt;/li&gt;
&lt;li&gt;在相同试验条件下，比较和检验实际试验结果与模型输出结果之间的一致性（或称相容性），从而评估模型或系统的可信度。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;以某型导弹的仿真模型为例，其性能特征分为：动态性能、静态性能。动态性能如位置、速度、加速度、航向、姿态、过载、舵偏角等，均可视为随机过程；静态性能如终端脱靶量、单发杀伤概率、有效毁伤半径等，可视为随机变量。与之相对应，飞行试验结果、模型输出结果可视为随机过程或随机变量的观测样本，即动态数据（表现为时间序列）和静态数据。二者具有不同的处理方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;静态数据处理方法&quot;&gt;&lt;a href=&quot;#静态数据处理方法&quot; class=&quot;headerlink&quot; title=&quot;静态数据处理方法&quot;&gt;&lt;/a&gt;静态数据处理方法&lt;/h3&gt;&lt;p&gt;静态数据处理方法可简单分为静态数据&lt;em&gt;分析&lt;/em&gt;方法、静态数据&lt;em&gt;验证&lt;/em&gt;方法。静态数据分析方法的上要用途是通过模型/设备误差、控制参数、试验条件等各种因素对静态试验结果的影响分析，找出影响仿真试验精度的主要因素，井对其进行修正和改进。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;常用的静态数据分析方法包括统计分析方法和假设检验方法两大类，其中常用的统计分析方法包括回归分析、方差分析、相关分析、主成分分析、判别分析、聚类分析等。假设检验方法则主要用于检验静态试验数据的统计分布特性，一般重点考察试验数据是否服从正态分布，常用方法上要包括W检验、D检验、偏度检验、峰度检验、K氏检验等。具体方法参见下图。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/png/20160725_StaticVVAClassChart.png&quot; alt=&quot;静态数据处理方法分类图&quot;&gt;&lt;/p&gt;
&lt;p&gt;静态数据验证方法的主要用途是通过验证模型输出与实际试验（如导弹系统的实际飞行试验）中静态数据的相容性来评估模型输出结果、系统的可信度。在实际工程中应用如图4所列的方法进行数据处理时，应当尽可能采用多种方法进行检验，以提高检验结果的可信性和可靠性。&lt;/p&gt;
&lt;h3 id=&quot;动态数据处理方法&quot;&gt;&lt;a href=&quot;#动态数据处理方法&quot; class=&quot;headerlink&quot; title=&quot;动态数据处理方法&quot;&gt;&lt;/a&gt;动态数据处理方法&lt;/h3&gt;&lt;p&gt;动态数据处理方法的核心是动态数据验证方法，用于检验模型输出数据与实际试验数据（如导弹系统的飞行试验数据，或其它标准数据）的相容性，进而对模型输出结果的可信性进行评估。此外，动态数据处理方法还包括数据预处理方法，主要用于消除动态数据序列中存在的时间偏差、丢点、重点、单个或成片野值点、噪声干扰等多种误差。&lt;/p&gt;
&lt;p&gt;从方法的原理上看，动态数据验证方法主要分为：相似比较法、特征比较法。常见的动态数据处理方法参见下图中的总结。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;相似比较法的主要特点是不一定关注动态数据的统计特性，主要通过考察动态性能随时间或频率的变化趋势，评估模型输出数据与实际试验数据的相似程度。常见的相似比较方法包括：误差分析法、灰色关联系数法、相关系数（如评价欧氏距离、相关系数、TIC系数）等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;特征比较法的主要思想是从动态数据中估计出动态性能的典型特征，再利用假设检验等方法，来检验模型输出数据与实际试验数据的相容性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/png/20160725_DynamicVVAClassChart.png&quot; alt=&quot;动态数据处理方法分类图&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;从理论上说，模型动态性能(随机过程)的统计性质都包含在其概率分布中，两个时间序列的比较可通过比较二者的概率分布来进行。但是，要想通过动态数据确定分布函数或概率密度非常困难，一般上要通过估计动态数据的典型特性来实施相容性检验。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;从时域分析，随机过程的典型特征如均值函数、方差函数、协方差函数、自相关函数等，都具有明确的实际物理意义，某些特殊情况下恰恰是这些特性决定了全部过程。因此，通过比较这些特征来验证仿真结果或模型虽不充分，却很有实际意义，而且可操作性强。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从频域分析，功率谱密度函数可以表征随机过程的统计平均谱特性，是随机过程的重要频域特征。因此，首先进行功率谱估计，然后基于功率谱数据进行统计分析，是特征比较方法中最常用、最重要的方法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;功率谱估计方法上要包括以下几种：周期图方法、窗谱估计方法、现代谱估计方法。得到功率谱数据之后，可以基于其统计特性进行假设检验，考察不同动态数据之间的相容性；但是，由于功率谱估计方法的不同，功率谱数据的统计特性也不同，有时仅在大样本情况下成立甚至难以确定，因此实际中进行相容性检验时，经常使用非参数检验方法。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在模型校验过程中，不同校验方法的选择，与校验对象的具体特点紧密相关。在&lt;strong&gt;MIS&lt;/strong&gt;（军用信息系统）的开发过程中，除了最终得到软件系统外，主要的中间产品包括功能需求、概念模型、数学模型、物理效应模型、系统方案、软件程序、系统设备、测试及试验数据等。在上述产品中，功能需求、概念模型、数学模型、物理效应模型、系统方案大都以文档形式存在，一般情况下可将其统称为文档类产品。&lt;/p&gt;
    
    </summary>
    
      <category term="关键技术" scheme="http://jznudt.github.io/categories/%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="模型校验" scheme="http://jznudt.github.io/tags/%E6%A8%A1%E5%9E%8B%E6%A0%A1%E9%AA%8C/"/>
    
      <category term="数据验证" scheme="http://jznudt.github.io/tags/%E6%95%B0%E6%8D%AE%E9%AA%8C%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>模型数据验证的一般方法概述</title>
    <link href="http://jznudt.github.io/2016/07/25/ModelVVAMethodIntros/"/>
    <id>http://jznudt.github.io/2016/07/25/ModelVVAMethodIntros/</id>
    <published>2016-07-25T12:13:36.000Z</published>
    <updated>2016-07-25T13:10:54.448Z</updated>
    
    <content type="html">&lt;p&gt;按照前述&lt;a href=&quot;https://jznudt.github.io/2016/07/23/ModelVVABasicConcepts/&quot;&gt;模型校验&lt;/a&gt;的定义，模型校验具有两方面的含义：一是检查概念模型是否充分、准确地描述了实际系统，二是考察模型输出是否充分接近实际系统的行为过程。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;上述第一点实际上是考察演绎过程中的可信性，可以通过以下两个途径进行分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过对系统前提条件(各种假设条件)是否真实的研究，来验证模型本身是否可信；&lt;/li&gt;
&lt;li&gt;通过对推理过程是否符合思维规律、规则，即推理的形式是否正确的研究来检验模型的可信性。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;模型验证含义中的第二点是考察在归纳中的&lt;strong&gt;可信性&lt;/strong&gt;，往往主要是通过考察在相同输入条件下，仿真模型输出结果与实际系统输出结果是否一致，以及一致性的程度如何来做出判断，从而发展了以下一些主观或客观、定性或定量判断方法：&lt;/p&gt;
&lt;h3 id=&quot;专家经验评估法&quot;&gt;&lt;a href=&quot;#专家经验评估法&quot; class=&quot;headerlink&quot; title=&quot;专家经验评估法&quot;&gt;&lt;/a&gt;专家经验评估法&lt;/h3&gt;&lt;p&gt;请有经验的领域专家、行业工程师和项目主管对模型输出和实际系统输出进行比较判断，如果他们认为两类输出相差无几或者根本就区分不开，那么就认为模型精度可以接受。&lt;/p&gt;
&lt;h3 id=&quot;动态关联分析法&quot;&gt;&lt;a href=&quot;#动态关联分析法&quot; class=&quot;headerlink&quot; title=&quot;动态关联分析法&quot;&gt;&lt;/a&gt;动态关联分析法&lt;/h3&gt;&lt;p&gt;根据先验知识，提出某一关联性能指标，利用该性能指标对模型输出与实际系统输出进行定性分析、比较，据此给出二者一致性的定性结论。&lt;/p&gt;
&lt;h3 id=&quot;系统分解法-子系统分析法&quot;&gt;&lt;a href=&quot;#系统分解法-子系统分析法&quot; class=&quot;headerlink&quot; title=&quot;系统分解法(子系统分析法)&quot;&gt;&lt;/a&gt;系统分解法(子系统分析法)&lt;/h3&gt;&lt;p&gt;把复杂的大系统分解成若干个小子系统，对每个子模型进行分析、验证，然后根据子系统组成大系统的方式(串联、并联等)考察整个系统模型的有效性。&lt;/p&gt;
&lt;h3 id=&quot;灵敏度分析法&quot;&gt;&lt;a href=&quot;#灵敏度分析法&quot; class=&quot;headerlink&quot; title=&quot;灵敏度分析法&quot;&gt;&lt;/a&gt;灵敏度分析法&lt;/h3&gt;&lt;p&gt;通过考察模型中一组灵敏度系数变化给模型输出造成的影响情况来分析判断模型的有效性。&lt;/p&gt;
&lt;h3 id=&quot;参数估计法&quot;&gt;&lt;a href=&quot;#参数估计法&quot; class=&quot;headerlink&quot; title=&quot;参数估计法&quot;&gt;&lt;/a&gt;参数估计法&lt;/h3&gt;&lt;p&gt;对于某些性能指标参数(如武器系统的杀伤概率、命中精度等)，考察其仿真输出可信域是否与相应的参考（期望）输出可信域重合，或者落入期望的可信域内。&lt;/p&gt;
&lt;h3 id=&quot;假设检验法&quot;&gt;&lt;a href=&quot;#假设检验法&quot; class=&quot;headerlink&quot; title=&quot;假设检验法&quot;&gt;&lt;/a&gt;假设检验法&lt;/h3&gt;&lt;p&gt;利用假设检验理论来判断仿真结果和参考结果是否在统计意义下一致以及一致性的程度如何。有不少软件工程研制部门均采用此方法对仿真模型进行验证和对仿真精度进行评估。&lt;/p&gt;
&lt;h3 id=&quot;时间序列与频谱分析&quot;&gt;&lt;a href=&quot;#时间序列与频谱分析&quot; class=&quot;headerlink&quot; title=&quot;时间序列与频谱分析&quot;&gt;&lt;/a&gt;时间序列与频谱分析&lt;/h3&gt;&lt;p&gt;把仿真模型输出与相应的参考输出（比如实际的飞行试验获取的样本序列）看作时间序列，对它们进行预处理后用时间序列理论和频谱分析方法考察二者在频域内的统计一致性。&lt;/p&gt;
&lt;h3 id=&quot;综合方法&quot;&gt;&lt;a href=&quot;#综合方法&quot; class=&quot;headerlink&quot; title=&quot;综合方法&quot;&gt;&lt;/a&gt;综合方法&lt;/h3&gt;&lt;p&gt;上述方法两种或两种以上的综合使用，以便从多个侧面考察仿真模型的有效性。&lt;/p&gt;
&lt;p&gt;需要强调的是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;模型验证方法&lt;em&gt;远不止&lt;/em&gt;以上几种，还有其它一些方法。如基于Kalman滤波理论的模型检验与校正方法，决策理论在系统概念模型有效性确认中的应用，模糊数学在模型验证中的应用等。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;按照前述&lt;a href=&quot;https://jznudt.github.io/2016/07/23/ModelVVABasicConcepts/&quot;&gt;模型校验&lt;/a&gt;的定义，模型校验具有两方面的含义：一是检查概念模型是否充分、准确地描述了实际系统，二是考察模型输出是否充分接近实际系统的行为过程。&lt;/p&gt;
    
    </summary>
    
      <category term="关键技术" scheme="http://jznudt.github.io/categories/%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="数据验证" scheme="http://jznudt.github.io/tags/%E6%95%B0%E6%8D%AE%E9%AA%8C%E8%AF%81/"/>
    
      <category term="模型验证" scheme="http://jznudt.github.io/tags/%E6%A8%A1%E5%9E%8B%E9%AA%8C%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>功能模型开发中的一些问题</title>
    <link href="http://jznudt.github.io/2016/07/24/DLLDevThought/"/>
    <id>http://jznudt.github.io/2016/07/24/DLLDevThought/</id>
    <published>2016-07-24T00:38:01.000Z</published>
    <updated>2016-07-24T01:09:03.989Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160723_DLLDevThought.jpg&quot; alt=&quot;DLLDevelopmentThinking&quot;&gt;&lt;/p&gt;
&lt;p&gt;随着开发工作的逐步深入，有必要系统地总结下目前在开发过程中遇到的&lt;em&gt;问题&lt;/em&gt;，并找出针对性的解决方案。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;版本控制&quot;&gt;&lt;a href=&quot;#版本控制&quot; class=&quot;headerlink&quot; title=&quot;版本控制&quot;&gt;&lt;/a&gt;版本控制&lt;/h3&gt;&lt;p&gt;之前在开发时，多采用“小作坊”模式，没有过多地考虑团队协作，对版本控制这块儿考虑较少，例如最明显的是采用丑陋无比的“硬备份方式”，用不了多久硬盘中便充斥着各种打上时间戳的备份，时间一长根本无法记起各个版本之前的差别。随着模型、系统体量的逐渐扩大，对版本控制的需求逐渐地迫切起来。因为开发软件自身的性质，不便于使用Git这样的工具，目前采用的是&lt;a href=&quot;https://tortoisesvn.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TortoiseSVN&lt;/a&gt;这种轻量级的工具，并结合&lt;a href=&quot;https://www.visualsvn.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;VisualSVN&lt;/a&gt;进行仓库控制。这种基于版本控制的开发思路，一定要坚定不移地贯彻到后续的开发过程中。&lt;/p&gt;
&lt;h3 id=&quot;设计模式&quot;&gt;&lt;a href=&quot;#设计模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式&quot;&gt;&lt;/a&gt;设计模式&lt;/h3&gt;&lt;p&gt;设计模式是软件工程领域中一套经过充分验证的&lt;strong&gt;经验、模式和策略的集合&lt;/strong&gt;。在解决实际问题前，首先要思考一下，能否用这些成熟的设计模式来进行解决？有时候可能会略嫌啰嗦，比如可能会增加项目中类的数量、判决逻辑分散等，但从后期维护、功能扩展的角度来看，这些前期的工作都是值得的。目前，已经成功地将十余种设计模式应用于相关模型的开发，积累了一定的经验。&lt;/p&gt;
&lt;h3 id=&quot;ORM&quot;&gt;&lt;a href=&quot;#ORM&quot; class=&quot;headerlink&quot; title=&quot;ORM&quot;&gt;&lt;/a&gt;ORM&lt;/h3&gt;&lt;p&gt;目前，面向对象分析与设计（OOAD）技术已经广泛地应用于模型、程序开发过程中，但与之对应的是，关系数据库的开发却进展较为缓慢。采用SQL语句来操作数据库会遇到各种不便，最为繁琐的是会出现很多意想不到的错误。&lt;/p&gt;
&lt;p&gt;对象-关系映射（OBJECT/RELATIONALMAPPING，ORM），是随着面向对象的软件开发方法发展而产生的。面向对象的开发方法是当今企业级应用开发环境中的主流开发方法，关系数据库是企业级应用环境中永久存放数据的主流数据存储系统。对象和关系数据是业务实体的两种表现形式，业务实体在内存中表现为对象，在数据库中表现为关系数据。内存中的对象之间存在关联和继承关系，而在数据库中，关系数据无法直接表达多对多关联和继承关系。因此，对象-关系映射(ORM)系统一般以中间件的形式存在，主要实现程序对象到关系数据库数据的映射。面向对象是从软件工程基本原则(如耦合、聚合、封装)的基础上发展起来的，而关系数据库则是从数学理论发展而来的，两套理论存在显著的区别。为了解决这个不匹配的现象,对象关系映射技术应运而生。目前，有一些较为成熟的框架，例如&lt;a href=&quot;http://hibernate.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hibernate&lt;/a&gt;，&lt;a href=&quot;https://technet.microsoft.com/zh-cn/bb386976&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LINQ TO SQL&lt;/a&gt;等，应该尽快熟悉这种技术，并将其应用于实际系统的开发。&lt;/p&gt;
&lt;h3 id=&quot;Doxygen&quot;&gt;&lt;a href=&quot;#Doxygen&quot; class=&quot;headerlink&quot; title=&quot;Doxygen&quot;&gt;&lt;/a&gt;Doxygen&lt;/h3&gt;&lt;p&gt;对于程序员来说，撰写注释和文档往往是一件头疼的事情，自动化文档生成工具应运而生。虽然还无法生成目前项目研发中需要的各种文档，但至少可以为我们提供一份最为详尽的开发手册。&lt;a href=&quot;http://www.doxygen.nl/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Doxygen&lt;/a&gt;就是其中的佼佼者。&lt;/p&gt;
&lt;p&gt;Doxygen是一种开源跨平台的，以类似JavaDoc风格描述的文档系统，完全支持C、C++、Java、Objective-C和IDL语言，部分支持PHP、C#。注释的语法与Qt-Doc、KDoc和JavaDoc兼容。Doxygen可以从一套归档源文件开始，生成HTML格式的在线类浏览器，或离线的LATEX、RTF参考手册。&lt;/p&gt;
&lt;p&gt;Doxygen 是一个程序的文件产生工具，可将程序中的特定批注转换成为说明文件。通常我们在写程序时，或多或少都会写上批注，但是对于其它人而言，要直接探索程序里的批注，与打捞泰坦尼克号同样的辛苦。大部分有用的批注都是属于针对函数、类型等等的说明。所以，如果能依据程序本身的结构，将批注经过处理重新整理成为一个纯粹的参考手册，对于后面利用您的程序代码的人而言将会减少许多的负担。不过，反过来说，整理文件的工作对于您来说，就是沉重的负担。&lt;/p&gt;
&lt;p&gt;对于未归档的源文件，也可以通过配置Doxygen来提取代码结构。或者借助自动生成的包含依赖图（includedependency graphs）、继承图（inheritance diagram）以及协作图（collaborationdiagram）来可视化文档之间的关系。Doxygen生成的帮助文档的格式可以是CHM、RTF、PostScript、PDF、HTML和Unixman page等。&lt;/p&gt;
&lt;p&gt;一个好的程序设计师，在写程序时，都会在适当的地方加上合适的批注。如果，能够在撰写批注时，稍微符合某种格式，接着就可以透过一个工具程序依据程序结构及您的批注产生出漂亮的文件。这将令许多工作繁重的程序设计师有时间多喝几杯咖啡。&lt;/p&gt;
&lt;p&gt;Doxygen 就是这样的一个工具。在您写批注时，稍微按照一些它所制订的规则。接着，他就可以帮您产生出漂亮的文件了。因此，Doxygen 的使用可分为两大部分。首先是特定格式的批注撰写，第二便是利用Doxygen的工具来产生文件。&lt;/p&gt;
&lt;h3 id=&quot;自动代码生成&quot;&gt;&lt;a href=&quot;#自动代码生成&quot; class=&quot;headerlink&quot; title=&quot;自动代码生成&quot;&gt;&lt;/a&gt;自动代码生成&lt;/h3&gt;&lt;p&gt;UML（统一建模语言）是目前面向对象分析与设计的强力工具，最理想的情形是直接利用UML工具完成设计，然后通过框架自动生成代码。当前现在还没有办法完整地实现这个功能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/losophy/article/details/12417531&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Rational Rose&lt;/a&gt;包括了统一建模语言（UML），OOSE，以及OMT。其中统一建模语言（UML）由Rational公司3位世界级面向对象技术专家Grady Booch、Ivar Jacobson、和Jim Rumbaugh通过对早期面向对象研究和设计方法的进一步扩展而得来的，它为可视化建模软件奠定了坚实的理论基础。同时这样的渊源也使Rational Rose力挫当前市场上很多基于UML可视化建模的工具，例如Microsoft的Visio、Oracle的Designer，还有PlayCase 、CA BPWin、CA ERWin、Sybase PowerDesigner等等。&lt;/p&gt;
&lt;p&gt;Rational Rose 是一个完全的、具有能满足所有建模环境（Web开发，数据建模，Visual Studio和 C++ ）灵活性需求的一套解决方案。Rose 允许开发人员，项目经理，系统工程师和分析人员在软件开发周期内在将需求和系统的体系架构转换成代码，消除浪费的消耗，对需求和系统的体系架构进行可视化，理解和精练。通过在软件开发周期内使用同一种建模工具可以确保更快更好的创建满足客户需求的可扩展的、灵活的并且可靠的应用系统。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160723_DLLDevThought.jpg&quot; alt=&quot;DLLDevelopmentThinking&quot;&gt;&lt;/p&gt;
&lt;p&gt;随着开发工作的逐步深入，有必要系统地总结下目前在开发过程中遇到的&lt;em&gt;问题&lt;/em&gt;，并找出针对性的解决方案。&lt;/p&gt;
    
    </summary>
    
      <category term="点滴随笔" scheme="http://jznudt.github.io/categories/%E7%82%B9%E6%BB%B4%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="设计与实现" scheme="http://jznudt.github.io/tags/%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
    
      <category term="功能模型" scheme="http://jznudt.github.io/tags/%E5%8A%9F%E8%83%BD%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>将线程池技术应用于并行仿真引擎设计？</title>
    <link href="http://jznudt.github.io/2016/07/23/ThreadPoolIntro/"/>
    <id>http://jznudt.github.io/2016/07/23/ThreadPoolIntro/</id>
    <published>2016-07-23T06:47:22.000Z</published>
    <updated>2016-07-24T00:08:34.922Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/png/20160723_ThreadPoolPrincipal.png&quot; alt=&quot;ThreadPoolPrincipal&quot;&gt;&lt;/p&gt;
&lt;p&gt;为了充分利用多核的优势，我们利用多线程来进行任务处理，但是线程也同样不能够滥用，它会带来下面的问题：&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线程本身存在开销，系统必须为每个线程分配如栈、TLS（线程局部存储）、寄存器等；&lt;/li&gt;
&lt;li&gt;线程管理会给系统带来开销，上下文切换同样会给系统带来成本；&lt;/li&gt;
&lt;li&gt;线程本身是可重用的资源，不需要每次都进行初始化操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以往往在使用中，我们无需把线程和&lt;code&gt;Task任务&lt;/code&gt;进行一对一的映射，只需要预先初始化有限的线程个数来处理无限的任务即可。相应地，&lt;strong&gt;线程池技术&lt;/strong&gt;应运而生，原理也就是如此。&lt;/p&gt;
&lt;p&gt;从图中可看出，线程池中主要含有三个队列：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;工作队列&lt;/li&gt;
&lt;li&gt;工作线程队列&lt;/li&gt;
&lt;li&gt;忙碌线程队列&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;工作队列是一个阻塞队列，任务（仿函数）不断地被添加进来（自动地阻塞获取的工作线程），工作线程队列（一直不变）则从该队列中获取任务执行（当任务队列为空时阻塞等待通知），如果获取到任务，则将线程送入到忙碌线程队列中，执行任务的仿函数，当任务完成时，重新移出工作线程队列。&lt;/p&gt;
&lt;p&gt;上述线程池技术有效地实现了线程、任务的解耦，并且能够有效地管理多个线程，在进行并行仿真引擎设计时，将起到良好的效果。下一步将进行这样的尝试，在线程池技术的基础上，设计出一个良好的并行仿真引擎。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/png/20160723_ThreadPoolPrincipal.png&quot; alt=&quot;ThreadPoolPrincipal&quot;&gt;&lt;/p&gt;
&lt;p&gt;为了充分利用多核的优势，我们利用多线程来进行任务处理，但是线程也同样不能够滥用，它会带来下面的问题：
    
    </summary>
    
      <category term="点滴随笔" scheme="http://jznudt.github.io/categories/%E7%82%B9%E6%BB%B4%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="多线程" scheme="http://jznudt.github.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="并行仿真" scheme="http://jznudt.github.io/tags/%E5%B9%B6%E8%A1%8C%E4%BB%BF%E7%9C%9F/"/>
    
      <category term="线程池" scheme="http://jznudt.github.io/tags/%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    
  </entry>
  
  <entry>
    <title>模型数据验证概述</title>
    <link href="http://jznudt.github.io/2016/07/23/ModelVVAIntroduction/"/>
    <id>http://jznudt.github.io/2016/07/23/ModelVVAIntroduction/</id>
    <published>2016-07-23T02:04:14.000Z</published>
    <updated>2016-07-23T02:23:17.282Z</updated>
    
    <content type="html">&lt;p&gt;从影响模型有效性的因素、模型数据验证工作的难点这两个方面，对模型数据验证工作进行概述。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;影响模型有效性的因素分析&quot;&gt;&lt;a href=&quot;#影响模型有效性的因素分析&quot; class=&quot;headerlink&quot; title=&quot;影响模型有效性的因素分析&quot;&gt;&lt;/a&gt;影响模型有效性的因素分析&lt;/h2&gt;&lt;p&gt;模型与实际系统无法完全吻合的主要因素总结如下：&lt;/p&gt;
&lt;h3 id=&quot;建模过程中忽略了部分次要因素&quot;&gt;&lt;a href=&quot;#建模过程中忽略了部分次要因素&quot; class=&quot;headerlink&quot; title=&quot;建模过程中忽略了部分次要因素&quot;&gt;&lt;/a&gt;建模过程中忽略了部分次要因素&lt;/h3&gt;&lt;p&gt;一些因素因为对所研究的系统（建模对象），或对研究的目标相关性较小，因此在建模中可以忽略。这种忽略在一定程度上具有潜在的危险。&lt;/p&gt;
&lt;h3 id=&quot;目前尚无一套完整评价方法来检验哪些约束可忽略&quot;&gt;&lt;a href=&quot;#目前尚无一套完整评价方法来检验哪些约束可忽略&quot; class=&quot;headerlink&quot; title=&quot;目前尚无一套完整评价方法来检验哪些约束可忽略&quot;&gt;&lt;/a&gt;目前尚无一套完整评价方法来检验哪些约束可忽略&lt;/h3&gt;&lt;p&gt;在建模过程中，常常是凭经验取舍，这不可避免地造成了模型与现实系统的差异。&lt;/p&gt;
&lt;h3 id=&quot;模型仿真实验时间过短&quot;&gt;&lt;a href=&quot;#模型仿真实验时间过短&quot; class=&quot;headerlink&quot; title=&quot;模型仿真实验时间过短&quot;&gt;&lt;/a&gt;模型仿真实验时间过短&lt;/h3&gt;&lt;p&gt;模型所描述的系统通常是复杂、慢变过程，该类模型的实验、测试等往往需要许多时间。因各种条件限制，无法获取足够大的统计样本，导致输出数据严重不足，进而导致模型输出结果不可信。&lt;/p&gt;
&lt;h3 id=&quot;模型初始数据确定失误&quot;&gt;&lt;a href=&quot;#模型初始数据确定失误&quot; class=&quot;headerlink&quot; title=&quot;模型初始数据确定失误&quot;&gt;&lt;/a&gt;模型初始数据确定失误&lt;/h3&gt;&lt;p&gt;模型的初始状态对其输出结果有着直接影响，特别是在运行时间较短的情况下，模型输出结果将具有较大的偏差。&lt;/p&gt;
&lt;h3 id=&quot;输入随机数据分布的确定&quot;&gt;&lt;a href=&quot;#输入随机数据分布的确定&quot; class=&quot;headerlink&quot; title=&quot;输入随机数据分布的确定&quot;&gt;&lt;/a&gt;输入随机数据分布的确定&lt;/h3&gt;&lt;p&gt;模型中多含有一定数量的随机变量，它们分布确定的正确与否直接影响模型的质量。&lt;/p&gt;
&lt;h3 id=&quot;模型输出结果的统计误差&quot;&gt;&lt;a href=&quot;#模型输出结果的统计误差&quot; class=&quot;headerlink&quot; title=&quot;模型输出结果的统计误差&quot;&gt;&lt;/a&gt;模型输出结果的统计误差&lt;/h3&gt;&lt;p&gt;对特定测试条件下模型输出结果的收集和统计有严格的要求。实际中，许多模型很难得到大量输出数据，因此导致其统计结果失效。&lt;/p&gt;
&lt;h2 id=&quot;模型数据验证工作的难点&quot;&gt;&lt;a href=&quot;#模型数据验证工作的难点&quot; class=&quot;headerlink&quot; title=&quot;模型数据验证工作的难点&quot;&gt;&lt;/a&gt;模型数据验证工作的难点&lt;/h2&gt;&lt;p&gt;总体上看，模型数据校验工作的难点体现在以下方面：&lt;/p&gt;
&lt;h3 id=&quot;模型的验证是一个逐步迭代的过程&quot;&gt;&lt;a href=&quot;#模型的验证是一个逐步迭代的过程&quot; class=&quot;headerlink&quot; title=&quot;模型的验证是一个逐步迭代的过程&quot;&gt;&lt;/a&gt;模型的验证是一个逐步迭代的过程&lt;/h3&gt;&lt;p&gt;模型是建模者依据特定目的，按照相似原理对实际系统的科学抽象与简化描述，它反映了建模者对实际系统由感性到理性人事的阶段，这种认识的正确、精确与否，需要经过实践检验。因此，模型验证工作实际上是“实践——理论——实践”的循环过程。&lt;/p&gt;
&lt;h3 id=&quot;模型数据验证工作具有模糊性&quot;&gt;&lt;a href=&quot;#模型数据验证工作具有模糊性&quot; class=&quot;headerlink&quot; title=&quot;模型数据验证工作具有模糊性&quot;&gt;&lt;/a&gt;模型数据验证工作具有模糊性&lt;/h3&gt;&lt;p&gt;模型是原型的相似系统，这种相似具有一定的不确定性。这种不确定性不仅与建模者对原型认识的深刻程度有关，而且与他采用的方法、技巧等有关。&lt;/p&gt;
&lt;h3 id=&quot;模型验证工作受到多种因素影响&quot;&gt;&lt;a href=&quot;#模型验证工作受到多种因素影响&quot; class=&quot;headerlink&quot; title=&quot;模型验证工作受到多种因素影响&quot;&gt;&lt;/a&gt;模型验证工作受到多种因素影响&lt;/h3&gt;&lt;p&gt;首先是模型本身的因素。一个完整的模型包含两个方面的内容：一方面是它的结构，另一方面是它的参数。结构往往可以代表某一类模型的共性，而参数的加入，体现的是模型的个性。这两方面是模型能否代表原型的决定因素，是内因。&lt;/p&gt;
&lt;p&gt;其次是模型运行的环境即外因，其中最基本的是给模型系统施加的输入作用。这种作用应与给实际系统施加的作用相似，只有这样，才能为分析判断模型的有效性创造条件。&lt;/p&gt;
&lt;h3 id=&quot;模型验证过程中往往存在大量的统计分析与计算&quot;&gt;&lt;a href=&quot;#模型验证过程中往往存在大量的统计分析与计算&quot; class=&quot;headerlink&quot; title=&quot;模型验证过程中往往存在大量的统计分析与计算&quot;&gt;&lt;/a&gt;模型验证过程中往往存在大量的统计分析与计算&lt;/h3&gt;&lt;p&gt;假设检验、统计判断、置信区间估计等都要涉及到复杂的计算。因此，模型验证工作需要付出很高的代价，特别是对于复杂的大型军用软件更是如此，以致模型的全面验证实际上成为不可能。&lt;/p&gt;
&lt;h3 id=&quot;难以得到或者得不到实际系统输出行为的可靠结果&quot;&gt;&lt;a href=&quot;#难以得到或者得不到实际系统输出行为的可靠结果&quot; class=&quot;headerlink&quot; title=&quot;难以得到或者得不到实际系统输出行为的可靠结果&quot;&gt;&lt;/a&gt;难以得到或者得不到实际系统输出行为的可靠结果&lt;/h3&gt;&lt;p&gt;比如导弹武器系统，尽管可以通过打靶试验获得有关真实系统的一些行为特征数据，但这些参考数据是极其有限的，对进行全面的验证来说是不充分的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;从影响模型有效性的因素、模型数据验证工作的难点这两个方面，对模型数据验证工作进行概述。&lt;/p&gt;
    
    </summary>
    
      <category term="关键技术" scheme="http://jznudt.github.io/categories/%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="数据验证" scheme="http://jznudt.github.io/tags/%E6%95%B0%E6%8D%AE%E9%AA%8C%E8%AF%81/"/>
    
      <category term="模型验证" scheme="http://jznudt.github.io/tags/%E6%A8%A1%E5%9E%8B%E9%AA%8C%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>模型数据校核基础概念</title>
    <link href="http://jznudt.github.io/2016/07/23/ModelVVABasicConcepts/"/>
    <id>http://jznudt.github.io/2016/07/23/ModelVVABasicConcepts/</id>
    <published>2016-07-23T02:04:00.000Z</published>
    <updated>2016-07-23T02:16:11.035Z</updated>
    
    <content type="html">&lt;p&gt;模型是对真实世界实体、对象、关系、过程等本质与内在的一种抽象与描述，各类软件系统本质上都是模型的有机构成。软件运行结果是否可信，一方面决定于模型对系统行为子集特性描述的正确性和精度，另一方面决定于模型实现时的准确度。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;只有建立能够准确反映对象系统内在特性和变化规律的模型，才可保证软件运行结果具有实际应用价值和意义。另一方面，大型软件系统中通常包含有多种辅助数据（例如地理信息数据、气象环境数据、武器装备参数等），它们是系统稳定、正常运行的基础，它们的逼真度、准确度同样直接影响软件系统运行结果的可信度。综上，为了确保软件质量，必须对其中的模型、数据进行评测，&lt;strong&gt;模型数据的校核、验证、测试、确认与可信度评估&lt;/strong&gt;便是要着重解决其中的精度评测问题，因而很早便受到国内外的广泛重视。&lt;/p&gt;
&lt;p&gt;本文对模型、仿真、校核、验证、测试、确认、可信度等术语的基本概念进行简要分析。&lt;/p&gt;
&lt;h2 id=&quot;模型&quot;&gt;&lt;a href=&quot;#模型&quot; class=&quot;headerlink&quot; title=&quot;模型&quot;&gt;&lt;/a&gt;模型&lt;/h2&gt;&lt;p&gt;模型是对真实世界实体、对象、关系、过程等本质与内在的一种抽象与描述。它具有可构造性、语义性、表示多样性、可实现性等典型特征。借助于模型，可描述对象的本质和内在关系，无论是工程软件系统还是非工程软件系统，都可以建立起一定形式的模型。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;按照不同的划分准则，可对模型进行划分。按其属性，可分为物理模型、数学模型，前者与实际系统具有相似的物理性质，包括缩比实物模型（如风洞试验中的飞行器外形模型）、试制样机模型（导引头样机）、实物模型（导弹上的陀螺仪）等；数学模型是用抽象的数学方程描述系统内部物理变量之间的关系而建立的模型，它可完整地揭示系统的内在运动规律及其动态特性。数学模型又可分为静态模型（代数方程、逻辑表达关系式等）、动态模型（连续系统、离散系统）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;另外，按照模型在软件系统中的作用划分，可分为逻辑模型、实体模型。前者是指再抽象的概念模型基础上构造的、在原理上可行的，它考虑了模型总体的合理性、结构合理性和实现可行性；后者是一个完全确定的模型，一个可实现的实在模型，有具体细节。&lt;/p&gt;
&lt;h2 id=&quot;仿真&quot;&gt;&lt;a href=&quot;#仿真&quot; class=&quot;headerlink&quot; title=&quot;仿真&quot;&gt;&lt;/a&gt;仿真&lt;/h2&gt;&lt;p&gt;仿真是用某种模型或模型体系，来模拟真实对象并对其进行研究以达到预定目的的过程，它是一个为了实现特定目的而进行的循环往复过程。&lt;/p&gt;
&lt;p&gt;仿真与软件开发具有密切的联系。以上述作战武器任务规划软件系统为例，它包含了种类繁多的模型，相应地便实现了对实际过程的仿真模拟；同时，为了确保仿真系统的功能性、可靠性、易用性、高效性、维护性、可移植性等质量指标，需要充分借鉴软件工程相关体系。&lt;/p&gt;
&lt;h2 id=&quot;模型校核&quot;&gt;&lt;a href=&quot;#模型校核&quot; class=&quot;headerlink&quot; title=&quot;模型校核&quot;&gt;&lt;/a&gt;模型校核&lt;/h2&gt;&lt;p&gt;模型在从一种形式转换到另一种形式时，需要保证足够的精度。例如，把流程图形式的模型转换为可执行的计算机程序过程中，其中的精度评估就是模型校核问题。&lt;/p&gt;
&lt;h2 id=&quot;ModelVerify&quot;&gt;模型验证&lt;/h2&gt;

&lt;p&gt;在适用范围内，针对建模对象，模型具有足够高的精度。模型验证要解决的问题，是建立与对象相对应的正确模型。&lt;/p&gt;
&lt;h2 id=&quot;模型测试&quot;&gt;&lt;a href=&quot;#模型测试&quot; class=&quot;headerlink&quot; title=&quot;模型测试&quot;&gt;&lt;/a&gt;模型测试&lt;/h2&gt;&lt;p&gt;模型测试要解决的问题是模型是否存在不精确或误差，在特定的测试数据和测试条件下进行模型测试，以确定模型的功能是否正确。有些测试过程设计用于评估模型的输出精度，即验证；而有些测试过程设计用于评估模型从一种形式到另一种形式的转换精度，即校核。&lt;/p&gt;
&lt;h2 id=&quot;模型确认&quot;&gt;&lt;a href=&quot;#模型确认&quot; class=&quot;headerlink&quot; title=&quot;模型确认&quot;&gt;&lt;/a&gt;模型确认&lt;/h2&gt;&lt;p&gt;针对特定目的，官方对模型是否可被接受使用进行认证。&lt;/p&gt;
&lt;h2 id=&quot;模型可信度评估&quot;&gt;&lt;a href=&quot;#模型可信度评估&quot; class=&quot;headerlink&quot; title=&quot;模型可信度评估&quot;&gt;&lt;/a&gt;模型可信度评估&lt;/h2&gt;&lt;p&gt;针对特定目的，在特定测试条件下，依据某种准则对模型的可信程度进行的量化评价。需要指出的是，我们一般指的是广义定义，而不是&lt;a href=&quot;#ModelVerify&quot;&gt;狭义的模型验证&lt;/a&gt;定义。广义的模型验证则包括模型的校核、验证、确认与可信度评估。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;模型是对真实世界实体、对象、关系、过程等本质与内在的一种抽象与描述，各类软件系统本质上都是模型的有机构成。软件运行结果是否可信，一方面决定于模型对系统行为子集特性描述的正确性和精度，另一方面决定于模型实现时的准确度。
    
    </summary>
    
      <category term="关键技术" scheme="http://jznudt.github.io/categories/%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="模型校验" scheme="http://jznudt.github.io/tags/%E6%A8%A1%E5%9E%8B%E6%A0%A1%E9%AA%8C/"/>
    
      <category term="数据校验" scheme="http://jznudt.github.io/tags/%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>雷达电子战仿真系统发展现状</title>
    <link href="http://jznudt.github.io/2016/07/23/RadarEWSimDevelopment/"/>
    <id>http://jznudt.github.io/2016/07/23/RadarEWSimDevelopment/</id>
    <published>2016-07-23T01:43:05.000Z</published>
    <updated>2016-07-23T02:00:47.599Z</updated>
    
    <content type="html">&lt;p&gt;近些，随着雷达电子战技术的发展，雷达电子战综合仿真系统、仿真实验室及环境仿真技术在国内外得到了广泛的关注，并迅速发展起来。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;美国国防部的先进电子对抗实验室由实时和非实时网络组成，采用的是开放性和高弹性架构，并大量采用商用产品，不但降低了成本还能够提高系统的更新换代速度。实验室提供对电子战系统性能评估、电子对抗战术评估和人员训练等多项功能。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/png/20160723_RadarEWForeignCorps.png&quot; alt=&quot;RadarEWForeignCorps&quot;&gt;&lt;/p&gt;
&lt;p&gt;例如，美国阿莫斯特公司的作战电磁环境模拟系统可以模拟动态的作战环境，包括电子战系统在执行任务时会面临的敌方和友方电磁辐射；可以模拟各种辐射源类型，包括电子战/捕获/地面控制截获、地对空、地对地、导弹制导寻的器、机载电子战截获器、防空高炮、敌我识别及大气和导航雷达；目的是为雷达告警接收机、电子情报系统和干扰机等电子战系统提供激励，支持装备的研究、试验和操作员的训练。&lt;/p&gt;
&lt;p&gt;南非科学工业研究理事会（CSIR）的雷达电子战仿真系统主要有三个产品，分别为通用雷达与电子战环境仿真系统（GREES），这是一个硬件在回路的仿真系统，为测试和评估雷达与电子战系统提供一个闭环仿真系统；雷达目标与电子对抗仿真系统（ENIGMA IV），该系统主要是用来生成雷达表面回波和先进对抗措施的场景；传感器与电子战作战仿真系统（&lt;strong&gt;SEWES&lt;/strong&gt;），这是一个多对多的电子战仿真环境，能够支持任意数量传感器和电子战系统在仿真环境中交战对抗。用户可以使用SEWES来仿真“如果……将会怎样”的问题，用以完善和评估被测系统的性能。&lt;/p&gt;
&lt;p&gt;2005年安捷伦公司收购Elanix公司，将原先的SystemView软件改名为&lt;em&gt;SyetemVue&lt;/em&gt;，完善了功能组件库。内含大量可复用的雷达组件库，可以用于闭环的雷达仿真。&lt;/p&gt;
&lt;p&gt;国内近些年，以弹道导弹攻防对抗、防空反导、区域防空、战略预警、体系对抗等为背景，在雷达电子战仿真领域也取得了众多进展。国防科技大学、西安电子科技大学、电子科技大学等单位都相继研发出了多套雷达仿真系统。其中国防科技大学电子科学与工程学院所研制的功能级和信号级雷达仿真系统已经大范围覆盖地基、舰载和机载雷达，以及美国NMD和TMD中的关键雷达系统和国内多种先进体制雷达系统，对于雷达系统仿真具备了丰富的经验和技术积累。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/png/20160723_RadarEWDomInsts.png&quot; alt=&quot;RadarEWDomesticCampus&quot;&gt;&lt;/p&gt;
&lt;p&gt;此外，目前国内有许多从事的军事仿真科技方面的公司，经过多年的发展,也积累了大量的战役、战术级别的雷达电子战仿真系统成果。在开发过程中，尤其注重模型的可复用性。可复用的雷达仿真系统可以充分利用过去雷达仿真系统开发中积累的成果，减少重复开发的过程，从而能够保证仿真系统开发质量、降低开发成本。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/png/20160723_RadarEWDomCorps.png&quot; alt=&quot;RadarEWDomesticCorps&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;近些，随着雷达电子战技术的发展，雷达电子战综合仿真系统、仿真实验室及环境仿真技术在国内外得到了广泛的关注，并迅速发展起来。&lt;/p&gt;
    
    </summary>
    
      <category term="行业综述" scheme="http://jznudt.github.io/categories/%E8%A1%8C%E4%B8%9A%E7%BB%BC%E8%BF%B0/"/>
    
    
      <category term="发展综述" scheme="http://jznudt.github.io/tags/%E5%8F%91%E5%B1%95%E7%BB%BC%E8%BF%B0/"/>
    
      <category term="雷达电子战" scheme="http://jznudt.github.io/tags/%E9%9B%B7%E8%BE%BE%E7%94%B5%E5%AD%90%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>脉冲多普勒导引头抗干扰技术概述</title>
    <link href="http://jznudt.github.io/2016/07/23/PDSeekerECCMAnalysis/"/>
    <id>http://jznudt.github.io/2016/07/23/PDSeekerECCMAnalysis/</id>
    <published>2016-07-23T01:31:04.000Z</published>
    <updated>2016-07-23T02:37:28.945Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160722_PDRadarSeekerConfig.jpg&quot; alt=&quot;PDRadarSeekerConfig&quot;&gt;&lt;/p&gt;
&lt;p&gt;脉冲多普勒导引头（PD导引头）是一类典型的末制导雷达体制，本博文旨在对PD导引头的抗干扰特性进行简要叙述，从而为设计针对PD导引头的干扰技术提供一定的参考依据。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;单脉冲处理&quot;&gt;&lt;a href=&quot;#单脉冲处理&quot; class=&quot;headerlink&quot; title=&quot;单脉冲处理&quot;&gt;&lt;/a&gt;单脉冲处理&lt;/h2&gt;&lt;p&gt;PD导引头采用&lt;strong&gt;单脉冲测角体制&lt;/strong&gt;，这是一种典型的同时多波束测角方法，这种同时波瓣的测角方法具有很强的抗干扰能力，如目标上的自卫式噪声干扰、转发式脉冲调幅干扰、逆增益应答式欺骗干扰都对单脉冲角度跟踪系统的工作影响很小，甚至没有影响。同时，受单脉冲测角的体制影响，这种测角体制本质上是跟踪目标回波信号的波前（等相位面），因此任何改变相位波前的因素，都会影响测角精度，这实际上为我们提供了针对PD导引头干扰的可能途径——角度欺骗干扰。&lt;/p&gt;
&lt;h2 id=&quot;频率选择&quot;&gt;&lt;a href=&quot;#频率选择&quot; class=&quot;headerlink&quot; title=&quot;频率选择&quot;&gt;&lt;/a&gt;频率选择&lt;/h2&gt;&lt;p&gt;当PD导引头工作在HPRF波形（即准连续波波形）情形下，采用了&lt;strong&gt;频率选择&lt;/strong&gt;方式。它是通过压窄接收机带宽来实现的。接收机带宽，可以利用高度稳定的发射频率和高度稳定的接收本振频率以及随着目标多普勒频率及其变化而变化的跟踪系统的调谐来压窄。频率选择能够有效地对抗有源和无源压制式干扰，还可以消除或大大地减小箔条、地物杂波的干扰。通过对PD导引头频率选择的特性分析可看出，采用宽带噪声压制式干扰并不能起到很好的干扰效果，因为其大部分干扰功率并不能够有效地进入接收机后端。因此，有效的针对PD导引头的干扰，应该能够保证频率上的对准。&lt;/p&gt;
&lt;h2 id=&quot;加速度限制&quot;&gt;&lt;a href=&quot;#加速度限制&quot; class=&quot;headerlink&quot; title=&quot;加速度限制&quot;&gt;&lt;/a&gt;加速度限制&lt;/h2&gt;&lt;p&gt;为有效地抵御速度波门拖引干扰，PD导引头还采用了&lt;strong&gt;加速度限制&lt;/strong&gt;方法。速度波门拖引干扰(VGPO)，就是在速度/频域上把速度波门脱离目标。因此，必须增大加速度。加速度限制，就是把速度门恩总的最大加速度能力加以限制，使得VGPO不能够超过这个限制。速度跟踪回路中，鉴频器输出的电压大小便代表了目标运动的加速度。在实际中，可按照实际目标可能的加速度边界值作为门限，一旦鉴频器输出的电压大小超过门限，即可认为是受到了VGPO干扰。此时，PD导引头可以迅速地转入重新搜索状态，从而使得高加速度的速度门拖引干扰，在拖引期间不被导引头跟踪。这个加速度跟踪能力的限制，在末段飞行时间内，减小了拖引次数，也就减小了拖引干扰的有效性。&lt;/p&gt;
&lt;h2 id=&quot;倒置接收&quot;&gt;&lt;a href=&quot;#倒置接收&quot; class=&quot;headerlink&quot; title=&quot;倒置接收&quot;&gt;&lt;/a&gt;倒置接收&lt;/h2&gt;&lt;p&gt;PD导引头采用&lt;strong&gt;倒置接收&lt;/strong&gt;技术，窄带滤波器位于中频放大器之前，窄带速度波门的跟踪环路通过微波本振直接闭合。窄带滤波器之前的前置放大，保持低的噪声系数，接收机的增益主要放在窄带滤波器之后获得，角度误差信号在中放之后提取。这种带宽的设置，与一般接收机中带宽逐渐变窄的情况恰好相反，非常有效的保护了窄带滤波器滞后的多普勒处理器和自动增益控制电路的正常工作。否则，目标信号必将与包含在中频带宽内的杂波和干扰信号混在一起，直到窄带速度波门位置。这样，多普勒滤波器和AGC电路的性能将受到这些强干扰的影响而明显地降低。&lt;/p&gt;
&lt;h2 id=&quot;跟踪干扰源（HOJ）&quot;&gt;&lt;a href=&quot;#跟踪干扰源（HOJ）&quot; class=&quot;headerlink&quot; title=&quot;跟踪干扰源（HOJ）&quot;&gt;&lt;/a&gt;跟踪干扰源（HOJ）&lt;/h2&gt;&lt;p&gt;PD导引头的&lt;strong&gt;干扰源寻的&lt;/strong&gt;，就是把目标发出的干扰信号作为导引导弹到目标的信号，实行无源被动角跟踪。一般地，有全程干扰源寻的和末段干扰源寻的两种方式。其中后者比前者有明显的优点，它大大地减少了自卫式速度波门拖引干扰的停拖次数，虚弱了速度波门拖引干扰和其它干扰的效果。末制导的导引头，一般的工作时间在几十左右，通常速度门拖引一周需要数秒钟，所以在末制导过程中，只能够拖引有限的几次。&lt;/p&gt;
&lt;h2 id=&quot;速度波门和天线位置预置&quot;&gt;&lt;a href=&quot;#速度波门和天线位置预置&quot; class=&quot;headerlink&quot; title=&quot;速度波门和天线位置预置&quot;&gt;&lt;/a&gt;速度波门和天线位置预置&lt;/h2&gt;&lt;p&gt;导弹发射前，可以采用&lt;strong&gt;速度波门&lt;/strong&gt;和&lt;strong&gt;天线位置预置&lt;/strong&gt;。制导雷达通过连续地测量目标和导弹的运动参数，计算机可以不断地计算目标到导弹间的距离，到达拦截点的预计时间后，指令制导上行链路命令导弹进入末制导寻的工作状态。导引头的速度波门和天线位置均由上行指令进行预置。这样，导引头可以采用等待方式来截获目标，这样便提高了空间选择性和频率选择性。&lt;/p&gt;
&lt;h2 id=&quot;变参数的跟踪回路&quot;&gt;&lt;a href=&quot;#变参数的跟踪回路&quot; class=&quot;headerlink&quot; title=&quot;变参数的跟踪回路&quot;&gt;&lt;/a&gt;变参数的跟踪回路&lt;/h2&gt;&lt;p&gt;提高跟踪系统的性能，是抗各种干扰的有效办法。PD导引头可以利用弹载视线加速度表，向跟踪回路提供修正电压，使系统带宽随目标运动规律而变化。因此，多普勒频率跟踪系统成为一个&lt;strong&gt;变参数系统&lt;/strong&gt;。在导引头整个工作过程中，速度跟踪回路带宽在加速度滞后误差和噪声干扰误差的平衡中，处于最佳状态。同时，也可以限制各种突然性的干扰。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160722_PDRadarSeekerConfig.jpg&quot; alt=&quot;PDRadarSeekerConfig&quot;&gt;&lt;/p&gt;
&lt;p&gt;脉冲多普勒导引头（PD导引头）是一类典型的末制导雷达体制，本博文旨在对PD导引头的抗干扰特性进行简要叙述，从而为设计针对PD导引头的干扰技术提供一定的参考依据。&lt;/p&gt;
    
    </summary>
    
      <category term="关键技术" scheme="http://jznudt.github.io/categories/%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="导引头" scheme="http://jznudt.github.io/tags/%E5%AF%BC%E5%BC%95%E5%A4%B4/"/>
    
      <category term="脉冲多普勒" scheme="http://jznudt.github.io/tags/%E8%84%89%E5%86%B2%E5%A4%9A%E6%99%AE%E5%8B%92/"/>
    
      <category term="抗干扰" scheme="http://jznudt.github.io/tags/%E6%8A%97%E5%B9%B2%E6%89%B0/"/>
    
  </entry>
  
  <entry>
    <title>关于云计算与大数据的一些思考</title>
    <link href="http://jznudt.github.io/2016/07/23/CloudBigDataThinking/"/>
    <id>http://jznudt.github.io/2016/07/23/CloudBigDataThinking/</id>
    <published>2016-07-23T01:20:25.000Z</published>
    <updated>2016-07-23T02:33:48.706Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160722_CloudBigDataInMil.jpg&quot; alt=&quot;BDataInMilitary&quot;&gt;&lt;/p&gt;
&lt;p&gt;云计算和大数据正在深刻地影响、改变着我们身处的社会，如何将云计算和大数据应用于军事仿真领域，值得我们深入地思考。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;数据价值挖掘&quot;&gt;&lt;a href=&quot;#数据价值挖掘&quot; class=&quot;headerlink&quot; title=&quot;数据价值挖掘&quot;&gt;&lt;/a&gt;数据价值挖掘&lt;/h2&gt;&lt;p&gt;大数据着力于解决海量数据的采集、存储、检索、处理和挖掘，它是业务领域发展的必然产物。对于军事模拟、训练与测试领域，是否存在着这样的大数据？这是首先需要回答的问题。相较采集与存储而言，对已有数据的充分挖掘与揭示，可能更为重要，更能发挥数据本身蕴含的价值。&lt;/p&gt;
&lt;h2 id=&quot;私有云&quot;&gt;&lt;a href=&quot;#私有云&quot; class=&quot;headerlink&quot; title=&quot;私有云&quot;&gt;&lt;/a&gt;私有云&lt;/h2&gt;&lt;p&gt;受各种条件限制，对于军事领域应用而言，私有云更为适合。如果要筹备一个情报数据中心，目前较好的整体解决方案有哪些？类似于&lt;a href=&quot;http://www.supermap.com.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;超图公司&lt;/a&gt;提供的云GIS一体机（将云计算与GIS融合一体，对外呈现形式为一台机柜，以虚拟机形式对外部用户提供服务），这是否为发展的趋势？&lt;/p&gt;
&lt;h2 id=&quot;业务辅助&quot;&gt;&lt;a href=&quot;#业务辅助&quot; class=&quot;headerlink&quot; title=&quot;业务辅助&quot;&gt;&lt;/a&gt;业务辅助&lt;/h2&gt;&lt;p&gt;以无人飞行器的航路规划为研究案例——业务人员在规划过程中需要考虑飞行器本身的飞行性能约束（高度、速度、转弯半径、制导方式、续航能力等），还需要考虑它面临的各类自然与人为环境。总体而言，其航路规划是需要大量实践经验的。那么，有没有可能通过大数据的相关理论与方法，从前期已保存的航路规划成果中，有效地提取一条优质航路的若干特征，从而实现自动规划辅助？这在实际应用中是个非常迫切的需求，而且对很多类似的&lt;code&gt;经验密集型&lt;/code&gt;业务领域都有极好的参考价值。现在火热的深度学习、机器学习等理论是否能够利用进来？&lt;/p&gt;
&lt;h2 id=&quot;数据可视化&quot;&gt;&lt;a href=&quot;#数据可视化&quot; class=&quot;headerlink&quot; title=&quot;数据可视化&quot;&gt;&lt;/a&gt;数据可视化&lt;/h2&gt;&lt;p&gt;可视化是释放大数据价值的&lt;code&gt;最后一公里&lt;/code&gt;，对于我们关注的军事模拟、训练与测试业务领域，有必要设计一套完整的&lt;a href=&quot;http://www.digihail.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;可视化展现方式&lt;/a&gt;。一般而言，展示方式的设计是需要与用户密切沟通后完成的。&lt;/p&gt;
&lt;h2 id=&quot;网络爬虫&quot;&gt;&lt;a href=&quot;#网络爬虫&quot; class=&quot;headerlink&quot; title=&quot;网络爬虫&quot;&gt;&lt;/a&gt;网络爬虫&lt;/h2&gt;&lt;p&gt;身处信息时代，对于我们关注业务领域内数据的长期搜集整理至关重要，有助于我们把握动态、了解前沿。除了传统的搜索引擎外，是否需要我们自己编写网络爬虫，来满足定制化的需要？是否已有成熟的爬虫可供使用，我们仅用关注于业务领域的本身？&lt;/p&gt;
&lt;h2 id=&quot;数据采集与处理&quot;&gt;&lt;a href=&quot;#数据采集与处理&quot; class=&quot;headerlink&quot; title=&quot;数据采集与处理&quot;&gt;&lt;/a&gt;数据采集与处理&lt;/h2&gt;&lt;p&gt;关于数据采集的问题：很多时候，原始数据是通过多种渠道获取（例如态势数据可能由各类雷达、光电、声学等传感器搜集），不可避免地存在时空失配、野值、器件误差等因素。那么是否意味着我们研发的应用系统需要具备较强的原始数据处理能力（野值剔除、时空配置等），乃至多传感器信息融合能力？&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160722_CloudBigDataInMil.jpg&quot; alt=&quot;BDataInMilitary&quot;&gt;&lt;/p&gt;
&lt;p&gt;云计算和大数据正在深刻地影响、改变着我们身处的社会，如何将云计算和大数据应用于军事仿真领域，值得我们深入地思考。&lt;/p&gt;
    
    </summary>
    
      <category term="深沉思索" scheme="http://jznudt.github.io/categories/%E6%B7%B1%E6%B2%89%E6%80%9D%E7%B4%A2/"/>
    
    
      <category term="云计算" scheme="http://jznudt.github.io/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
      <category term="大数据" scheme="http://jznudt.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>雷达电子战仿真若干思考</title>
    <link href="http://jznudt.github.io/2016/07/23/RadarEWProblems/"/>
    <id>http://jznudt.github.io/2016/07/23/RadarEWProblems/</id>
    <published>2016-07-23T00:52:22.000Z</published>
    <updated>2016-07-23T02:31:20.817Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160723_RadarEWDemo.jpg&quot; alt=&quot;RadarEWSimGUIDemo&quot;&gt;&lt;/p&gt;
&lt;p&gt;对雷达电子战仿真领域中存在的一些问题进行简要分析，并给出了相应的建议。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;分布式仿真&quot;&gt;&lt;a href=&quot;#分布式仿真&quot; class=&quot;headerlink&quot; title=&quot;分布式仿真&quot;&gt;&lt;/a&gt;分布式仿真&lt;/h2&gt;&lt;p&gt;许多实际项目所采用的“分布式仿真”从&lt;em&gt;本质上&lt;/em&gt;讲是没有必要的。相比于分布式仿真系统的大投入、高成本、长周期，设计一套单机版的应用程序，无论是算法验证、数学仿真、半实物试验，还是外场试验，可能都更为有用，移植性也会更好。单机版程序的仿真时效性问题可通过优化算法、重构设计方案、高性能计算等方式进行提升与改进。&lt;/p&gt;
&lt;h2 id=&quot;装备级模型&quot;&gt;&lt;a href=&quot;#装备级模型&quot; class=&quot;headerlink&quot; title=&quot;装备级模型&quot;&gt;&lt;/a&gt;装备级模型&lt;/h2&gt;&lt;p&gt;相对于战术、战役级仿真系统的高投入、高消耗，着眼于装备级模型的仿真，可能更为行之有效。无论是论证单位、生产部门、鉴定考核单位，还是实际使用部门，对细粒度内核模型的需求都非常迫切，尤其是模型的置信度，会直接影响装备的论证、研发、鉴定、训练和使用全寿命周期。&lt;/p&gt;
&lt;h2 id=&quot;复杂战场环境&quot;&gt;&lt;a href=&quot;#复杂战场环境&quot; class=&quot;headerlink&quot; title=&quot;复杂战场环境&quot;&gt;&lt;/a&gt;复杂战场环境&lt;/h2&gt;&lt;p&gt;目前言必称“复杂电磁环境”，或是“复杂战场环境”，但对它们的认识大多停留在感性认识阶段，比如经常会引用的&lt;code&gt;时域密集、频域交叠、空域密度、功率参差&lt;/code&gt;等，但这种感性的认识对我们没并有实质的帮助。我们需要朝着“&lt;strong&gt;复杂战场环境定量化&lt;/strong&gt;”的方向努力，大致可分为三个层面，即：要素梳理、效应分析、改进措施。只有把握住了这个大的方向，研发出来的仿真系统才会真正地具备实用价值。但想要实现对复杂战场环境的量化分析并不容易，需要长期积累、持续投入。&lt;/p&gt;
&lt;h2 id=&quot;仿真试验评估&quot;&gt;&lt;a href=&quot;#仿真试验评估&quot; class=&quot;headerlink&quot; title=&quot;仿真试验评估&quot;&gt;&lt;/a&gt;仿真试验评估&lt;/h2&gt;&lt;p&gt;仿真作为一种行之有效的手段，为有效地评估装备的实际效能提供了可行的技术实现方案，并不是仅有外场试验才能够用于装备的考核与鉴定。但目前仿真模型、仿真系统、仿真试验评估并未真正地得到广泛认可，究其原因可能有三点：模型置信度不够、仿真场景设置不合理、评估方法和指标体系不全面。有效地提升模型的置信度，还是有很多方法可资借鉴的。比如采用&lt;a href=&quot;https://jznudt.github.io/2016/07/22/EWCVLevelMS/&quot;&gt;相干视频信号级模型&lt;/a&gt;代替传统的功能级仿真模型，就能够充分地揭示各类环境因素对用频装备（如各类雷达导引头、制导雷达、监视雷达等）的影响机理，并能对影响效应进行定量评估。很多时候，模型置信度不高恰恰是因为我们在进行模型/系统的顶层设计时，没有赋予它们与实际装备相同的能力，比如各类抗干扰措施、状态切换逻辑等。仿真系统绝不应该是“金玉其外败絮其中”，而应该是内外兼修，这样才能真正地提升仿真的话语权。&lt;/p&gt;
&lt;h2 id=&quot;粒度与时效性&quot;&gt;&lt;a href=&quot;#粒度与时效性&quot; class=&quot;headerlink&quot; title=&quot;粒度与时效性&quot;&gt;&lt;/a&gt;粒度与时效性&lt;/h2&gt;&lt;p&gt;&lt;code&gt;仿真粒度和时效性的结构性矛盾&lt;/code&gt;一度困扰了该领域内的大多数工程人员，直到现在都没有很好的解决方法，采用半实物仿真手段，将难以建模的部件或分系统直接用实物替代，这是一种非常有效的解决方案，但是实现难度非常大，对整个试验测试环境的要求也非常高。比如构建一整套射频制导半实物仿真系统，需要暗室、三轴转台、惯导、飞行模拟器等诸多条件的配合，系统复杂程度高。因此全数字仿真系统成为一种必须的解决方案（很多情况下甚至是唯一的方案）。多核多线程、面向GPU的高性能并行运算、硬件加速（DSP、FPGA或其它嵌入式硬件系统），是现在主流的三种解决方案，但目前该领域大体尚处于探索阶段，很少有成熟的设计方法和思路可供借鉴引用。尤其是面向GPU的高性能并行运算，虽然在信号处理、图像处理等领域得到了验证，但大多限于算法研究与验证，但将它完整地应用至应用系统中，还缺乏成熟的经验。&lt;/p&gt;
&lt;h2 id=&quot;可复用性&quot;&gt;&lt;a href=&quot;#可复用性&quot; class=&quot;headerlink&quot; title=&quot;可复用性&quot;&gt;&lt;/a&gt;可复用性&lt;/h2&gt;&lt;p&gt;关于模型体系的可复用性，目前已经有很多类型的尝试，包括源码、函数、类库、组件、BOM等，但大多仅限于形式上的复用，并未带来任何&lt;strong&gt;实质上的可复用设计&lt;/strong&gt;。真正的可复用设计，需要对装备的工作原理进入深入分析，并充分借鉴成熟的设计模式（目前已成功地将10余种&lt;a href=&quot;https://jznudt.github.io/2016/07/22/CLP6DOFSim/&quot;&gt;设计模式&lt;/a&gt;应用于实际系统的研发），它应该是一种解决方案层面的可复用，对同类系统应具有指导意义。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160723_RadarEWDemo.jpg&quot; alt=&quot;RadarEWSimGUIDemo&quot;&gt;&lt;/p&gt;
&lt;p&gt;对雷达电子战仿真领域中存在的一些问题进行简要分析，并给出了相应的建议。&lt;/p&gt;
    
    </summary>
    
      <category term="深沉思索" scheme="http://jznudt.github.io/categories/%E6%B7%B1%E6%B2%89%E6%80%9D%E7%B4%A2/"/>
    
    
      <category term="发展综述" scheme="http://jznudt.github.io/tags/%E5%8F%91%E5%B1%95%E7%BB%BC%E8%BF%B0/"/>
    
      <category term="雷达电子战" scheme="http://jznudt.github.io/tags/%E9%9B%B7%E8%BE%BE%E7%94%B5%E5%AD%90%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>适配器模式的妙用？</title>
    <link href="http://jznudt.github.io/2016/07/22/AdapterModeDEV/"/>
    <id>http://jznudt.github.io/2016/07/22/AdapterModeDEV/</id>
    <published>2016-07-22T05:14:11.000Z</published>
    <updated>2016-07-22T05:29:33.277Z</updated>
    
    <content type="html">&lt;p&gt;目前，雷达电子战综合仿真领域已有很多的COTS，比如MATLAB、STK、SystemVUE、LabVIEW、SPW等。这些成熟的商用软件，大都按照面向对象分析与设计（OOAD）思路进行开发，基本上可以划分为数据层、模型层、用户层三个层次。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;出于保护知识产权的目的，上述软件中的模型体系大都自成体系，不便于进行集成开发。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;适配器模式&lt;/strong&gt;是一种典型的设计模式，用于进行不同接口之间的转换。将适配器模式应用于上述领域，自然地产生了一个想法：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;能否开发通用的中间件，完成上述COTS底层功能模型间的互联互通&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上述想法较为朴素，但在实际实现过程中困难重重。由于对COTS进行二次开发受制于很多因素，可能无法直接访问到底层的功能模块。那么，这种思路究竟是否可行？能否给出相应实践的方法论？&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;目前，雷达电子战综合仿真领域已有很多的COTS，比如MATLAB、STK、SystemVUE、LabVIEW、SPW等。这些成熟的商用软件，大都按照面向对象分析与设计（OOAD）思路进行开发，基本上可以划分为数据层、模型层、用户层三个层次。
    
    </summary>
    
      <category term="奇思妙想" scheme="http://jznudt.github.io/categories/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/"/>
    
    
      <category term="设计模式" scheme="http://jznudt.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="功能扩展" scheme="http://jznudt.github.io/tags/%E5%8A%9F%E8%83%BD%E6%89%A9%E5%B1%95/"/>
    
  </entry>
  
  <entry>
    <title>VR技术与雷达电子战领域结合畅想</title>
    <link href="http://jznudt.github.io/2016/07/22/VRRadarEWWorld/"/>
    <id>http://jznudt.github.io/2016/07/22/VRRadarEWWorld/</id>
    <published>2016-07-22T05:04:41.000Z</published>
    <updated>2016-07-22T05:29:42.762Z</updated>
    
    <content type="html">&lt;p&gt;随着VR领域内软、硬件技术的不断成熟，目前VR技术逐步地迈向“&lt;strong&gt;内容为王&lt;/strong&gt;”的阶段。如何将大热的VR技术与雷达电子战综合仿真领域相结合，逐渐地引起了大家的关注。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以&lt;em&gt;第一视角&lt;/em&gt;的身份，用VR技术构建一个完全虚拟的信号/信息处理世界。以雷达系统建模仿真为例，“&lt;strong&gt;我&lt;/strong&gt;”可能就是一串由任意波形发生器生成的门信号，在这个虚拟的世界里，将模拟出我是如何一步步地被生成、传输、变换的，直至最终寿命终结。&lt;/p&gt;
&lt;p&gt;如果能够实现上述功能，一方面可以做模拟训练用，让受训者深刻地理解信号/信息处理流程；另一方面，可以把它与实际的硬件设备相连接，这样能够快速地检测、定位、排查故障。&lt;/p&gt;
&lt;p&gt;这只是个人脑洞大开的想法，想要实现这个目标，必要下一番苦功夫。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;随着VR领域内软、硬件技术的不断成熟，目前VR技术逐步地迈向“&lt;strong&gt;内容为王&lt;/strong&gt;”的阶段。如何将大热的VR技术与雷达电子战综合仿真领域相结合，逐渐地引起了大家的关注。
    
    </summary>
    
      <category term="奇思妙想" scheme="http://jznudt.github.io/categories/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/"/>
    
    
      <category term="雷达电子战" scheme="http://jznudt.github.io/tags/%E9%9B%B7%E8%BE%BE%E7%94%B5%E5%AD%90%E6%88%98/"/>
    
      <category term="VR" scheme="http://jznudt.github.io/tags/VR/"/>
    
  </entry>
  
  <entry>
    <title>精选书目</title>
    <link href="http://jznudt.github.io/2016/07/22/SelectedBooksList/"/>
    <id>http://jznudt.github.io/2016/07/22/SelectedBooksList/</id>
    <published>2016-07-22T04:58:47.000Z</published>
    <updated>2016-07-22T05:03:29.292Z</updated>
    
    <content type="html">&lt;p&gt;最近较为系统地整理了本领域内的&lt;strong&gt;精读书目&lt;/strong&gt;，和大家分享一下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;《现代雷达装备综合试验与评价》&lt;/li&gt;
&lt;li&gt;《战争复杂系统仿真分析与实验》&lt;/li&gt;
&lt;li&gt;《复杂系统建模与仿真》&lt;/li&gt;
&lt;li&gt;《武器装备作战效能仿真与评估》&lt;/li&gt;
&lt;li&gt;《装备作战试验理论与方法》&lt;/li&gt;
&lt;li&gt;《武器装备综合试验与评估》&lt;/li&gt;
&lt;li&gt;《机载导弹武器系统作战效能评估》&lt;/li&gt;
&lt;li&gt;《战场环境概论》&lt;/li&gt;
&lt;li&gt;《反舰导弹战场电磁环境仿真及试验鉴定技术》&lt;/li&gt;
&lt;li&gt;《联合作战中的空军司令部》&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近较为系统地整理了本领域内的&lt;strong&gt;精读书目&lt;/strong&gt;，和大家分享一下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;《现代雷达装备综合试验与评价》&lt;/li&gt;
&lt;li&gt;《战争复杂系统仿真分析与实验》&lt;/li&gt;
&lt;li&gt;《复杂系统建模与仿真》&lt;/li&gt;
&lt;li&gt;《武器装备作战
    
    </summary>
    
      <category term="点滴随笔" scheme="http://jznudt.github.io/categories/%E7%82%B9%E6%BB%B4%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="仿真评估" scheme="http://jznudt.github.io/tags/%E4%BB%BF%E7%9C%9F%E8%AF%84%E4%BC%B0/"/>
    
      <category term="试验鉴定" scheme="http://jznudt.github.io/tags/%E8%AF%95%E9%AA%8C%E9%89%B4%E5%AE%9A/"/>
    
  </entry>
  
  <entry>
    <title>展开CTreeCtrl控件全部节点</title>
    <link href="http://jznudt.github.io/2016/07/22/CTreeCtrlExpand/"/>
    <id>http://jznudt.github.io/2016/07/22/CTreeCtrlExpand/</id>
    <published>2016-07-22T02:45:12.000Z</published>
    <updated>2016-07-22T05:29:21.811Z</updated>
    
    <content type="html">&lt;p&gt;最近在使用&lt;code&gt;MFC&lt;/code&gt;中的&lt;code&gt;CTreeCtrl&lt;/code&gt;控件时，遇到了“&lt;strong&gt;一次性展开所有子节点&lt;/strong&gt;”的需求，原以为实现起来非常简单，实际编写时才发现有一定的困难。采用下面的&lt;em&gt;递归函数&lt;/em&gt;方式，实现了上述功能，分享给大家。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
 &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//MainFrame其它实现代码&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CTreeCtrl  m_TreeCtrl;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; MainFrame::ExpandTree(CTreeCtrl* pTreeCtrl, HTREEITEM hItem)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    HTREEITEM hChild, hNext;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//如果存在，则展开节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pTreeCtrl-&amp;gt;Expand(hItem, TVE_EXPAND);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    hChild = pTreeCtrl-&amp;gt;GetNextItem(hItem, TVGN_CHILD);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(hChild)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ExpandTree(pTreeCtrl, hChild);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        hChild = pTreeCtrl-&amp;gt;GetNextItem(hChild, TVGN_NEXT);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//调用方法&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ExpandTree(&amp;amp;m_TreeCtrl, TVI_ROOT);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ExpandTree(&amp;amp;m_TreeCtrl, m_TreeCtrl.GetRootItem());&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在使用&lt;code&gt;MFC&lt;/code&gt;中的&lt;code&gt;CTreeCtrl&lt;/code&gt;控件时，遇到了“&lt;strong&gt;一次性展开所有子节点&lt;/strong&gt;”的需求，原以为实现起来非常简单，实际编写时才发现有一定的困难。采用下面的&lt;em&gt;递归函数&lt;/em&gt;方式，实现了上述功能，分享给大家。&lt;/p&gt;
    
    </summary>
    
      <category term="代码分享" scheme="http://jznudt.github.io/categories/%E4%BB%A3%E7%A0%81%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="C++" scheme="http://jznudt.github.io/tags/C/"/>
    
      <category term="MFC控件" scheme="http://jznudt.github.io/tags/MFC%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>信号级仿真中的时效性问题初探</title>
    <link href="http://jznudt.github.io/2016/07/22/EWCVLevelMS/"/>
    <id>http://jznudt.github.io/2016/07/22/EWCVLevelMS/</id>
    <published>2016-07-22T02:15:12.000Z</published>
    <updated>2016-07-22T04:54:10.163Z</updated>
    
    <content type="html">&lt;h1 id=&quot;信号级仿真中的时效性问题初探&quot;&gt;&lt;a href=&quot;#信号级仿真中的时效性问题初探&quot; class=&quot;headerlink&quot; title=&quot;信号级仿真中的时效性问题初探&quot;&gt;&lt;/a&gt;信号级仿真中的时效性问题初探&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160722_RadarCVLevelSim.jpg&quot; alt=&quot;EWCVLevelMSDemo&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;对雷达系统（本博文特指末制导雷达、雷达导引头）的建模仿真一般有两种思路：&lt;strong&gt;功能级仿真、信号级仿真&lt;/strong&gt;。前者采用&lt;em&gt;解析&lt;/em&gt;的方法，定量地表述各因素（例如目标运动特性、电磁散射特性、地海杂波、气象杂波、导引头技战术参数、弹载环境、人为对抗环境等）对雷达系统探测威力、测量精度、工作特性等的影响效应。这种解析表达式一般以&lt;strong&gt;雷达方程&lt;/strong&gt;为基础，将各种因素的影响效应体现为相应的因子加以修正。因为直接采用了定量表述的方式，所以雷达系统的功能级仿真执行效率很高、仿真时效性好。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;功能级仿真缺点&quot;&gt;&lt;a href=&quot;#功能级仿真缺点&quot; class=&quot;headerlink&quot; title=&quot;功能级仿真缺点&quot;&gt;&lt;/a&gt;功能级仿真缺点&lt;/h2&gt;&lt;p&gt;随着各类精确打击武器面临的实战环境愈发复杂，由导弹、目标、人为干扰以及自然背景相互影响、密切关联、动态演化所形成的战场电磁环境对导弹的实战性能产生了巨大影响。很多情况下，功能级仿真对上述现状显得无能为力。例如，传统的功能级仿真中对于干扰的描述主要利用&lt;strong&gt;压制比系数&lt;/strong&gt;，这对于噪声压制式干扰较为有效，但对于其它类型的干扰样式，例如距离密集假目标、多普勒压制干扰、距离速度联合拖引干扰、拖曳式诱饵相干角度欺骗干扰等，压制比便不能够全面地反映这些因素对末制导雷达的影响效应了。为了完整、科学、全面地评估贴近于实战环境下的末制导雷达作战效能，需要另寻其它的技术途径。&lt;/p&gt;
&lt;h2 id=&quot;信号级仿真特点&quot;&gt;&lt;a href=&quot;#信号级仿真特点&quot; class=&quot;headerlink&quot; title=&quot;信号级仿真特点&quot;&gt;&lt;/a&gt;信号级仿真特点&lt;/h2&gt;&lt;p&gt;直观上理解，功能级仿真无法准确、全面地描述各环境因素对末制导雷达的影响效应，本质上是因为各种要素对雷达系统的作用机理&lt;em&gt;无法简单地揭示&lt;/em&gt;。尤其是动态演化的战场电磁环境对于末制导雷达的影响效应，更难通过简单的公式来进行描述。这也就是我们常说的“&lt;strong&gt;复杂系统必须用复杂的手段来进行描述&lt;/strong&gt;”。所以我们将目光更多地瞄准了信号级仿真。&lt;/p&gt;
&lt;h3 id=&quot;信号级仿真基本概念&quot;&gt;&lt;a href=&quot;#信号级仿真基本概念&quot; class=&quot;headerlink&quot; title=&quot;信号级仿真基本概念&quot;&gt;&lt;/a&gt;信号级仿真基本概念&lt;/h3&gt;&lt;p&gt;信号级仿真一般采用相干视频方法，完整地复现导引头信号调制、发射、前向传输、电波衰减、目标后向散射、大气传输效应、天线接收、接收机处理、信号处理、数据处理的全过程。从这个流程我们就可清晰地看出，信号级仿真实质上采用了一种复杂描述的手段，以此完成对原本复杂的战场电磁环境影响末制导雷达这个过程的描述与模拟近似。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160722_MultiAntPatterns.jpg&quot; alt=&quot;MultiAntPatterns&quot;&gt;&lt;/p&gt;
&lt;p&gt;直观上看，我们首先需要在理想工作条件下（不考虑人为对抗、地海杂波等因素）完成导引头与弹道解算的闭环仿真，然后在准确完成各类环境因素建模的基础上，从而定量地描述它们对末制导雷达探测、跟踪、识别、抗干扰等各个环节的影响。实际上，因为战场电磁环境影响末制导雷达这个过程本身是非常复杂的，我们无法期望通过几个简单的公式来进行解析的表述。信号级仿真通过增加了仿真系统的&lt;em&gt;复杂度&lt;/em&gt;，很好地解决了这个问题，它实质上是一种通过“细粒度仿真+多轮次统计评估”的思路来准确、全面地描述各环境因素对末制导雷达的影响效应的技术途径。&lt;/p&gt;
&lt;h3 id=&quot;仿真时效性问题&quot;&gt;&lt;a href=&quot;#仿真时效性问题&quot; class=&quot;headerlink&quot; title=&quot;仿真时效性问题&quot;&gt;&lt;/a&gt;仿真时效性问题&lt;/h3&gt;&lt;p&gt;遗憾的是，信号级仿真大大地增加了仿真的复杂度，尤其是模拟信号/信息处理链路过程中需要的海量数据，造成了仿真的时效性大大降低。一般地，雷达系统建模仿真领域的人员均认为，“仿真粒度与时效性是一对不可调和的矛盾”，这个问题长期地困扰着该领域的科技人员。仿真时效性的降低，严重地影响了仿真进程的直观提现，不利于深刻地揭示各环境因素对末制导雷达的作用机理和影响效应。&lt;/p&gt;
&lt;h3 id=&quot;时效性影响因素&quot;&gt;&lt;a href=&quot;#时效性影响因素&quot; class=&quot;headerlink&quot; title=&quot;时效性影响因素&quot;&gt;&lt;/a&gt;时效性影响因素&lt;/h3&gt;&lt;p&gt;在实践过程中，通过对信号级仿真过程的深入剖析，我们发现影响时效性的主要因素有两个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;整个信号级仿真从本质上是一种&lt;em&gt;串行执行流程&lt;/em&gt;，“发射信号——目标散射——接收机处理”这个信号/信息处理链路是串行的，某个耗时严重的处理环节会影响后续所有环节的处理时效；&lt;/li&gt;
&lt;li&gt;为了完整地体现信号特性，尤其是宽带信号的时频域特性，采用了较高的采样频率（系统中的采样率高达0.5GHz），以一个典型的CPI（相干处理周期）为例，32ms内的采样点高达1.6e+7点，每个采样点包含同相、正交两个分量（即I、Q分量），并以double类型存储，简单计算可知，一个CPI内的信号采样值耗费的内存空间已经超过了256MB。更为困难的时，要完成对这些海量信号采样值的卷积、混频、乘方、幂次等计算，从而造成了时效性的严重下降。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;提高时效性思路&quot;&gt;&lt;a href=&quot;#提高时效性思路&quot; class=&quot;headerlink&quot; title=&quot;提高时效性思路&quot;&gt;&lt;/a&gt;提高时效性思路&lt;/h2&gt;&lt;p&gt;从上面的分析中可看出，为了有效地提升信号级仿真的时效性，需要从两个方面入手：一是尽量采用并行化处理，二是采用高性能计算方法。这也就是采用“&lt;strong&gt;多核多线程与GPU并行计算&lt;/strong&gt;”的本意所在。&lt;/p&gt;
&lt;p&gt;现今的高性能处理平台一般都包含多个处理核心（CPU），并配备了性能强大的图形处理单元（GPU），从而为多核多线程与GPU并行计算奠定了坚实基础。下面结合具体实践过程，对上述方法进行展开叙述。&lt;/p&gt;
&lt;h3 id=&quot;多线程处理&quot;&gt;&lt;a href=&quot;#多线程处理&quot; class=&quot;headerlink&quot; title=&quot;多线程处理&quot;&gt;&lt;/a&gt;多线程处理&lt;/h3&gt;&lt;p&gt;首先，采用多线程体系结构，改写了原有的串行执行流程。雷达导引头多采用单脉冲测角技术，以提取弹目视线角。为了实现单脉冲测角，一般设置四个接收通道（接收波束），并通过和差波束形成网络来完成形成和通道、方位差通道、俯仰差通道的接收信号。直观上理解，上述四个接收通道中的处理流程完全一致，包括下变频（混频）、匹配接收、自动增益控制、A/D采样、相干解调、包络检波、MTI、MTD、距离-多普勒联合处理等，完全可以用四个独立的线程来实现其中的功能，这种多线程并行处理方式的采用，将大大缩短原有的处理耗时（处理时间大约可达到原来的1/4）。&lt;/p&gt;
&lt;h3 id=&quot;面向GPU的并行计算&quot;&gt;&lt;a href=&quot;#面向GPU的并行计算&quot; class=&quot;headerlink&quot; title=&quot;面向GPU的并行计算&quot;&gt;&lt;/a&gt;面向GPU的并行计算&lt;/h3&gt;&lt;p&gt;其次，针对信号级仿真中的数据吞吐量大、存储器访问频繁、数据密集等典型特点，采用了面向GPU的并行计算方法，旨在借助GPU的高效数值计算能力，进一步提升仿真系统的时效性。&lt;/p&gt;
&lt;p&gt;GPU实际上是一个流多处理器（SM，Streaming Multiprocessor）的阵列加存储器组成，下图为一个由14个SM以及存储器组成的GPU的结构简图。在GPU里面包含大量的SM单元，因此GPU的浮点计算能力已经远超CPU。在通用计算技术、并行计算中的应用， GPU表现优异，甚至可以提供数十倍乃至于上百倍CPU的性能。无源干扰和有源干扰的数学仿真算法，涉及到对大量信号数据的处理和计算，必须以高性能的处理计算机和高速数据存储器为基础。现代GPU计算技术的迅速发展，支撑了高性能数学仿真的发展，基于GPU的干扰数学仿真构架以其独特的优势：高性能、可重用性、互操作性和开放性为仿真系统提供高性能的干扰模块。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160722_GPUConfigChart.png&quot; alt=&quot;GPUConfigChart&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;信号级仿真中的时效性问题初探&quot;&gt;&lt;a href=&quot;#信号级仿真中的时效性问题初探&quot; class=&quot;headerlink&quot; title=&quot;信号级仿真中的时效性问题初探&quot;&gt;&lt;/a&gt;信号级仿真中的时效性问题初探&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160722_RadarCVLevelSim.jpg&quot; alt=&quot;EWCVLevelMSDemo&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;对雷达系统（本博文特指末制导雷达、雷达导引头）的建模仿真一般有两种思路：&lt;strong&gt;功能级仿真、信号级仿真&lt;/strong&gt;。前者采用&lt;em&gt;解析&lt;/em&gt;的方法，定量地表述各因素（例如目标运动特性、电磁散射特性、地海杂波、气象杂波、导引头技战术参数、弹载环境、人为对抗环境等）对雷达系统探测威力、测量精度、工作特性等的影响效应。这种解析表达式一般以&lt;strong&gt;雷达方程&lt;/strong&gt;为基础，将各种因素的影响效应体现为相应的因子加以修正。因为直接采用了定量表述的方式，所以雷达系统的功能级仿真执行效率很高、仿真时效性好。&lt;/p&gt;
    
    </summary>
    
      <category term="深沉思索" scheme="http://jznudt.github.io/categories/%E6%B7%B1%E6%B2%89%E6%80%9D%E7%B4%A2/"/>
    
    
      <category term="CUDA" scheme="http://jznudt.github.io/tags/CUDA/"/>
    
      <category term="多线程" scheme="http://jznudt.github.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="信号级仿真" scheme="http://jznudt.github.io/tags/%E4%BF%A1%E5%8F%B7%E7%BA%A7%E4%BB%BF%E7%9C%9F/"/>
    
      <category term="时效性" scheme="http://jznudt.github.io/tags/%E6%97%B6%E6%95%88%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>海战场电磁环境初步认知</title>
    <link href="http://jznudt.github.io/2016/07/22/SeaBattlefieldEM/"/>
    <id>http://jznudt.github.io/2016/07/22/SeaBattlefieldEM/</id>
    <published>2016-07-22T01:47:47.000Z</published>
    <updated>2016-07-22T05:29:10.735Z</updated>
    
    <content type="html">&lt;h1 id=&quot;海战场电磁环境初步认知&quot;&gt;&lt;a href=&quot;#海战场电磁环境初步认知&quot; class=&quot;headerlink&quot; title=&quot;海战场电磁环境初步认知&quot;&gt;&lt;/a&gt;海战场电磁环境初步认知&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160722_SeaBattlefieldEM.jpg&quot; alt=&quot;SeaBattlefieldEM&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们需要用一种多元、动态、定量的全新视角来认知反舰导弹实际作战中面临的海战场电磁环境。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;首先，反舰导弹面临的海战场电磁环境是&lt;strong&gt;错综复杂&lt;/strong&gt;的。时、空、频域上与反舰导弹探测信号相关的各类电磁环境构成要素，尤其是各类人为制造的各种有源、无源用频设备辐射或反射的电磁干扰营造的电磁干扰环境，日益影响反舰导弹雷达导引头的作战效能。对复杂系统或过程的认知必须是多元化的，所谓“偏听则暗、兼听则明”。用多元的观点来描述海战场电磁环境，不仅贴近现实战场，也符合未来战场，不仅有利于海战场电磁环境下的试验鉴定，也有利于研究对脉冲多普勒雷达等典型反舰导弹导引头的干扰技术发展。&lt;/p&gt;
&lt;p&gt;其次，反舰导弹面临的海战场电磁环境是&lt;strong&gt;动态演进&lt;/strong&gt;的。电磁环境的营造不仅取决于敌我双方各类用频设备的战技指标，更与战术、战法、作战应用、交战规则等密切相关。反舰导弹面临的海战场电磁环境是由导弹、目标、人为干扰以及自然背景相互影响、密切关联、动态演化的结果，具有时变性，因此必须以动态的视角来考察海战场电磁环境。&lt;/p&gt;
&lt;p&gt;最后，反舰导弹面临的海战场电磁环境是&lt;strong&gt;可以量化&lt;/strong&gt;的。建立海战场电磁环境的量化表征方法（即数学模型），是科学、有效地实施反舰导弹的海战场电磁环境适应性定量评估的关键。立足于海战场电磁环境的受体——反舰导弹雷达导引头，基于多元的观点来分析反舰导弹面临的海战场电磁环境，我们可以得到三点结论：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对导弹干扰的强度，不仅取决于干扰因素本身，也取决于目标回波的强弱；&lt;/li&gt;
&lt;li&gt;无论电磁环境的复杂度再高，对反舰导弹而言无外两种：压制式干扰、欺骗时干扰，前者主要立足于能量域上的压制；后者更强调在形式和特征上与目标回波的逼真度；&lt;/li&gt;
&lt;li&gt;从上述两点可看出，对海战场电磁环境的量化表征可以从两方面入手，一是用干扰信号和目标回波能量之比来描述压制式干扰（压制比），二是用干扰信号和目标回波的相似程度来描述欺骗式干扰（相似度）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;借助于&lt;em&gt;压制比&lt;/em&gt;、&lt;em&gt;相似度&lt;/em&gt;这两个核心概念，我们便可着手从时域、空域、频域上逐一分析海战场现阶段已有的人为干扰技术，将其与目标相比较，研究其特点和规律，这样就为得出海战场电磁环境的量化表征方法、数学模型等奠定了坚实基础。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;海战场电磁环境初步认知&quot;&gt;&lt;a href=&quot;#海战场电磁环境初步认知&quot; class=&quot;headerlink&quot; title=&quot;海战场电磁环境初步认知&quot;&gt;&lt;/a&gt;海战场电磁环境初步认知&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160722_SeaBattlefieldEM.jpg&quot; alt=&quot;SeaBattlefieldEM&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们需要用一种多元、动态、定量的全新视角来认知反舰导弹实际作战中面临的海战场电磁环境。&lt;/p&gt;
    
    </summary>
    
      <category term="深沉思索" scheme="http://jznudt.github.io/categories/%E6%B7%B1%E6%B2%89%E6%80%9D%E7%B4%A2/"/>
    
    
      <category term="电磁环境" scheme="http://jznudt.github.io/tags/%E7%94%B5%E7%A3%81%E7%8E%AF%E5%A2%83/"/>
    
      <category term="反舰导弹" scheme="http://jznudt.github.io/tags/%E5%8F%8D%E8%88%B0%E5%AF%BC%E5%BC%B9/"/>
    
  </entry>
  
  <entry>
    <title>六自由度闭环仿真</title>
    <link href="http://jznudt.github.io/2016/07/22/CLP6DOFSim/"/>
    <id>http://jznudt.github.io/2016/07/22/CLP6DOFSim/</id>
    <published>2016-07-22T01:17:47.000Z</published>
    <updated>2016-07-22T04:50:59.240Z</updated>
    
    <content type="html">&lt;h1 id=&quot;模式驱动的六自由度闭环解算平台&quot;&gt;&lt;a href=&quot;#模式驱动的六自由度闭环解算平台&quot; class=&quot;headerlink&quot; title=&quot;模式驱动的六自由度闭环解算平台&quot;&gt;&lt;/a&gt;模式驱动的六自由度闭环解算平台&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160722_6DOFFlightSim.jpg&quot; alt=&quot;6DOFCLPSim&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;区别于地基固定雷达，雷达导引头（末制导雷达）部署于弹体头部，它面临的实际作用环境除了目标、人为干扰以及自然背景等，还面临着&lt;em&gt;弹载环境&lt;/em&gt;的影响。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;一般雷达导引头天线安装在角度稳定平台上，虽然可以通过角速率稳定回路实现天线指向与弹体高频运动的解耦（即：无论弹体做何种质心平动与转动，天线空间指向保持不变），但受各种误差因素影响，导弹的运动不可避免地会对搭载于其上的电子设备（此处特指末制导雷达）产生影响。直观上看，末制导雷达需要探测目标相对于弹体的实时运动状态，包括弹目距离、斜距率、弹目视线角、视线角速率等，提取的弹目测量信息被送往制导律生成环节，生成相应的导引指令送往弹体的自动驾驶仪环节，进而通过操纵机构（主要是舵机）来改变弹体的空气动力学特性，从而将导弹成功地导向目标；与此同时，弹体运动状态的时变特性对雷达导引头的实时探测产生了耦合和交联，这也是末制导雷达与地基固定雷达最大的&lt;strong&gt;差异&lt;/strong&gt;所在。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/gif/20160722_6DOFPlatformConfig.gif&quot; alt=&quot;6DOFPlatformConfig&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;制导控制回路&quot;&gt;&lt;a href=&quot;#制导控制回路&quot; class=&quot;headerlink&quot; title=&quot;制导控制回路&quot;&gt;&lt;/a&gt;制导控制回路&lt;/h2&gt;&lt;p&gt;下图给出了导弹制导控制回路的一般结构，从中可看出，末制导雷达（雷达导引头）&lt;em&gt;仅是&lt;/em&gt;整个闭环回路中的一个环节。整个导弹制导控制回路可分为内环、外环两个回路，前者用于稳定弹体，后者则完成对目标的闭环跟踪，通过两个回路的密切协作，控制导弹&lt;strong&gt;稳定地转向目标&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160722_GNCLoopChart.png&quot; alt=&quot;GNCLoopDemo&quot;&gt;&lt;/p&gt;
&lt;p&gt;末制导雷达作为整个导弹制导控制回路中的一个环节，对它的科学、全面的性能评估，不可避免地需要建立一个可用的闭环解算平台。从上图中看出，完整的导弹制导控制回路涵盖的分系统非常广，而且横跨了目标特性、电子、自动化、控制、机械等多个领域，要想构建一个完整的导弹制导控制闭环平台难度非常大。&lt;/p&gt;
&lt;h2 id=&quot;模式驱动建模仿真&quot;&gt;&lt;a href=&quot;#模式驱动建模仿真&quot; class=&quot;headerlink&quot; title=&quot;模式驱动建模仿真&quot;&gt;&lt;/a&gt;模式驱动建模仿真&lt;/h2&gt;&lt;p&gt;针对此现状，创造性地把软件工程领域中的“设计模式”的思想引入到导弹制导控制回路建模仿真的过程中。借助于成熟的设计模式，来分析在构建通用的闭环解算平台中遇到的实际问题，并提供一个优雅的、鲁棒的解决方案。具体的步骤分为下面三步：&lt;br&gt;首先，详细地分析导弹制导控制回路的各个关键环节，例如目标机动、导引头探测、角度滤波（数据处理）、制导律生成、PID控制器、操纵机构、舵面、惯性测量器件、空气动力学特性、弹体动力学、导弹运动学等，深入地了解其工作原理，尤其关注信号、信息流在整个链路中的流动，即各关键环节的输入输出关系。&lt;br&gt;其次，以设计模型中的“外观模式”为指导思想，制定导弹制导控制回路建模仿真的总体用例图（实际上也就是模块划分图），如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160722_GNCLoopModelUML.png&quot; alt=&quot;GNCLoopModelUML&quot;&gt;&lt;/p&gt;
&lt;p&gt;在上图所示的用例图中，导弹飞行解算较为复杂，它包含导弹目标探测、制导控制解算、导弹气动特性、导弹动力计算、导弹运动计算、导航系统计算等。其中制导控制解算又包含制导指令计算、控制指令计算和舵偏角计算；导弹气动特性包含气动力和气动力矩计算；导弹动力计算包含发动机推力计算、质量流变计算和转动惯量计算。&lt;br&gt;最后，综合应用&lt;strong&gt;单例模式、策略模式、模板模式、工厂模式&lt;/strong&gt;等十余种成熟的设计模式，完成导弹制导控制回路建模的总体设计。&lt;/p&gt;
&lt;p&gt;通过对导弹制导控制回路仿真模型进行子系统划分，可以将不同子系统进行解耦，这样每个子系统发生变化时，对其余子系统无影响或影响不大，只需对发生变化的子系统按照新的需求进行重新设计即可。划分了子系统后，交互接口中的各个功能函数就可以通过调用子系统的相关接口来完成。例如，对于初始化函数&lt;code&gt;Initialize()&lt;/code&gt;，它包含七个子系统的初始化过程，也就是说初始化函数&lt;code&gt;Initialize()&lt;/code&gt;的实现过程就是委托子系系统执行初始化函数，传递的参数不同而已。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;通过上述三个步骤，完成了导弹制导控制回路仿真模型的设计，并用C++语言进行了实现，从而构建了较为完善的导弹制导控制回路，为开展闭环条件下的末制导雷达效能评估试验奠定了坚实的基础。&lt;br&gt;总体上看，因为导弹制导控制回路涵盖分系统众多、涉及专业领域广，对其进行建模仿真的难度非常大，造成了目前通用的导弹制导控制仿真平台极为缺乏。针对这一迫切需求，创新地将软件设计领域中的成熟原则应用于导弹制导控制回路建模仿真的具体实践中，真正地实现了“&lt;strong&gt;组件化、易扩展、细粒度&lt;/strong&gt;”的通用六自由度闭环弹道解算平台。该成果不仅可应用于对海场景，它可以便捷地扩展至防空、地地、反辐射等多种典型应用场景中，因而具有极强的实际应用价值。该思路有助于解决长期困扰导弹武器装备鉴定与评估人员的难题——构建通用的六自由度闭环弹道解算平台。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;模式驱动的六自由度闭环解算平台&quot;&gt;&lt;a href=&quot;#模式驱动的六自由度闭环解算平台&quot; class=&quot;headerlink&quot; title=&quot;模式驱动的六自由度闭环解算平台&quot;&gt;&lt;/a&gt;模式驱动的六自由度闭环解算平台&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160722_6DOFFlightSim.jpg&quot; alt=&quot;6DOFCLPSim&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;区别于地基固定雷达，雷达导引头（末制导雷达）部署于弹体头部，它面临的实际作用环境除了目标、人为干扰以及自然背景等，还面临着&lt;em&gt;弹载环境&lt;/em&gt;的影响。
    
    </summary>
    
      <category term="关键技术" scheme="http://jznudt.github.io/categories/%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="设计模式" scheme="http://jznudt.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="六自由度" scheme="http://jznudt.github.io/tags/%E5%85%AD%E8%87%AA%E7%94%B1%E5%BA%A6/"/>
    
      <category term="闭环仿真" scheme="http://jznudt.github.io/tags/%E9%97%AD%E7%8E%AF%E4%BB%BF%E7%9C%9F/"/>
    
  </entry>
  
  <entry>
    <title>环形缓冲器的设计与C++实现</title>
    <link href="http://jznudt.github.io/2016/07/22/CircleBuffer/"/>
    <id>http://jznudt.github.io/2016/07/22/CircleBuffer/</id>
    <published>2016-07-22T00:36:28.000Z</published>
    <updated>2016-07-22T04:26:23.180Z</updated>
    
    <content type="html">&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;信号采样序列的生成与存储是雷达电子战系统仿真的前提。设计并采用存储高效、访问便捷、线程安全的信号存储器，对于提高系统的仿真时效性具有重要意义。结合实际性能需求，利用C++设计并实现了一个这样的信号存储器，可为开发类似功能模型提供参考。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;功能概述&quot;&gt;&lt;a href=&quot;#功能概述&quot; class=&quot;headerlink&quot; title=&quot;功能概述&quot;&gt;&lt;/a&gt;功能概述&lt;/h2&gt;&lt;p&gt;该信号存储器的主要功能概述如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由外部应用系统指定信号存储器的容量，以及信号采样点存储数据的具体格式；&lt;/li&gt;
&lt;li&gt;销毁该信号存储器时，执行相应的内存、线程等清理，确保无内存泄露隐患；&lt;/li&gt;
&lt;li&gt;按照FIFO（即“先入先出”）的原则，完成单个、一组信号数据的存储；&lt;/li&gt;
&lt;li&gt;依据传入的信号采样点时间选择区间，完成单个、一组信号数据的取出；&lt;/li&gt;
&lt;li&gt;清空信号存储器；&lt;/li&gt;
&lt;li&gt;判断信号存储器是否已满；&lt;/li&gt;
&lt;li&gt;判断信号存储器是否为空；&lt;/li&gt;
&lt;li&gt;获取信号存储器的容量，即该存储器可保存信号采样点的最大数目；&lt;/li&gt;
&lt;li&gt;获取信号存储器当前存储的信号采样点数目；&lt;/li&gt;
&lt;li&gt;确保信号存储器在进行信号采样点存储、取出时的线程安全。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;代码实现&quot;&gt;&lt;a href=&quot;#代码实现&quot; class=&quot;headerlink&quot; title=&quot;代码实现&quot;&gt;&lt;/a&gt;代码实现&lt;/h2&gt; &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifndef&lt;/span&gt; CIRCLEBUFFER_H&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; CIRCLEBUFFER_H&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//定义信号采样结构体&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; RADSIGSAMPLES&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;		TimeIndex;			&lt;span class=&quot;comment&quot;&gt;//时间戳，s&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;		Amplitude;			&lt;span class=&quot;comment&quot;&gt;//幅度值，V&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	RADSIGSAMPLES() : TimeIndex(&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;), Amplitude(&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;) &amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; CircleBuffer &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	CircleBuffer(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; MaxSize = &lt;span class=&quot;number&quot;&gt;65535&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; ~CircleBuffer();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; RADSIGSAMPLES&amp;amp; ele)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;RADSIGSAMPLES&amp;gt;&amp;amp; ele)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(RADSIGSAMPLES &amp;amp;ele)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;RADSIGSAMPLES&amp;gt; &amp;amp;ele, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; tbegin, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; tend)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;full&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GetSize&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    RADSIGSAMPLES *Arr;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_l&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;c;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;size;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;cnt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	HANDLE &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;mutex;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;conv&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//CIRCLEBUFFER_H&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;93&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;95&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;96&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;97&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;98&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;102&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;104&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;105&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;106&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;107&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;108&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;109&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;110&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;111&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;112&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;113&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;114&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;115&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;116&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;117&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;118&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;119&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;120&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;121&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;122&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;123&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;124&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;125&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;126&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;127&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;128&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;129&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;130&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;131&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;132&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;133&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;134&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;135&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;136&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;137&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;138&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;139&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;140&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;141&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;142&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;143&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;144&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;145&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;146&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;147&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;148&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;149&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;150&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;151&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;152&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;153&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;154&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;155&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;156&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;157&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;158&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;159&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;160&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;161&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;162&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;163&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;164&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;165&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;166&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;167&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;168&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;169&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&quot;stdafx.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&quot;CircleBuffer.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CircleBuffer::CircleBuffer(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; MaxSize) : &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;size(MaxSize)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;size &amp;lt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;size = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	Arr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RADSIGSAMPLES[MaxSize];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;number&quot;&gt;_l&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;c = &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;size - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;cnt = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;mutex = CreateMutex(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,FALSE,&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CircleBuffer::~CircleBuffer()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; []Arr;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	Arr = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	CloseHandle(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;mutex);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; CircleBuffer::conv(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (i &amp;lt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;size) ? i : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; CircleBuffer::push(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; RADSIGSAMPLES&amp;amp; ele)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;cnt &amp;lt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;size)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			WaitForSingleObject(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;mutex,INFINITE);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;number&quot;&gt;_l&lt;/span&gt; = conv(&lt;span class=&quot;number&quot;&gt;_l&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			Arr[&lt;span class=&quot;number&quot;&gt;_l&lt;/span&gt;] = ele;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;cnt++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			ReleaseMutex(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;mutex);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (...)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			ReleaseMutex(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;mutex);	&lt;span class=&quot;comment&quot;&gt;//防止死锁&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; CircleBuffer::push(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;RADSIGSAMPLES&amp;gt;&amp;amp; ele)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;RADSIGSAMPLES&amp;gt;::const_iterator SigIt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		WaitForSingleObject(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;mutex, INFINITE);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (SigIt = ele.begin(); SigIt != ele.end(); SigIt++)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;number&quot;&gt;_l&lt;/span&gt; = conv(&lt;span class=&quot;number&quot;&gt;_l&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			Arr[&lt;span class=&quot;number&quot;&gt;_l&lt;/span&gt;] = *SigIt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;cnt++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;cnt &amp;gt;= &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;size) &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		ReleaseMutex(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;mutex);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (...)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		ReleaseMutex(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;mutex);	&lt;span class=&quot;comment&quot;&gt;//防止死锁&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; CircleBuffer::pop(RADSIGSAMPLES &amp;amp;ele)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;cnt == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			WaitForSingleObject(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;mutex,INFINITE);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;cnt--;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;c = conv(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;c + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			ele = Arr[&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;c];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			ReleaseMutex(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;mutex);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (...)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			ReleaseMutex(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;mutex);	&lt;span class=&quot;comment&quot;&gt;//防止死锁&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; CircleBuffer::pop(&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;RADSIGSAMPLES&amp;gt; &amp;amp;ele, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; tbegin, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; tend)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	ele.clear();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		WaitForSingleObject(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;mutex,INFINITE);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; retFlag = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;cnt == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( Arr[conv(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;c + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)].TimeIndex &amp;lt; tbegin)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;cnt--;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;c = conv(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;c + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (Arr[conv(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;c + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)].TimeIndex &amp;lt; tend &amp;amp;&amp;amp; Arr[conv(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;c + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)].TimeIndex &amp;gt;= tbegin)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;cnt--;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;c = conv(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;c + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				ele.push_back(Arr[&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;c]) ;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (Arr[conv(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;c + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)].TimeIndex &amp;gt;= tend)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				retFlag = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;				&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		ReleaseMutex(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;mutex);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; retFlag;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (...)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		ReleaseMutex(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;mutex);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; CircleBuffer::count()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;cnt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; CircleBuffer::empty()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;cnt) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; CircleBuffer::full()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;cnt == &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;size) ? &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; CircleBuffer::GetSize()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;size;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CircleBuffer::clear()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;number&quot;&gt;_l&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;c = &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;size - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;cnt = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;结束语&quot;&gt;&lt;a href=&quot;#结束语&quot; class=&quot;headerlink&quot; title=&quot;结束语&quot;&gt;&lt;/a&gt;结束语&lt;/h2&gt;&lt;p&gt;总结上述&lt;code&gt;CircleBuffer&lt;/code&gt;的实现过程，做以下补充说明：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为了确保信号存储器在进行信号采样点存储、取出时的线程安全，在存储器内部设置了互斥量&lt;strong&gt;Mutex&lt;/strong&gt;，确保了读写操作的互斥性；&lt;/li&gt;
&lt;li&gt;在头文件中定义了记录数据采样点的结构，可以修改它来改变记录采样点的类型；&lt;/li&gt;
&lt;li&gt;实现了单个采样点、多个采样点的存储、取出操作。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上述信号存储器的实现过程中包含了较为深刻的C/C++编程实践经验。这种存储器结构将大量地应用于雷达电子战建模仿真过程中，尤其是在进行并行程序设计时。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;信号采样序列的生成与存储是雷达电子战系统仿真的前提。设计并采用存储高效、访问便捷、线程安全的信号存储器，对于提高系统的仿真时效性具有重要意义。结合实际性能需求，利用C++设计并实现了一个这样的信号存储器，可为开发类似功能模型提供参考。&lt;/p&gt;
    
    </summary>
    
      <category term="代码分享" scheme="http://jznudt.github.io/categories/%E4%BB%A3%E7%A0%81%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="C++" scheme="http://jznudt.github.io/tags/C/"/>
    
      <category term="缓冲器" scheme="http://jznudt.github.io/tags/%E7%BC%93%E5%86%B2%E5%99%A8/"/>
    
      <category term="设计与实现" scheme="http://jznudt.github.io/tags/%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>美陆军提出新型导航方式</title>
    <link href="http://jznudt.github.io/2016/07/21/NovelPNTMethod/"/>
    <id>http://jznudt.github.io/2016/07/21/NovelPNTMethod/</id>
    <published>2016-07-21T12:25:52.000Z</published>
    <updated>2016-07-21T12:29:42.094Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://i7.qhimg.com/t0130e1ec41471817b4.jpg&quot; alt=&quot;GPSChart&quot;&gt;&lt;/p&gt;
&lt;p&gt;根据美国陆军士兵及地面平台定位、导航、授时的需求，美国陆军通信电子研发工程中心将通过资金和研发备份导航方案来支持PM PNT发展，这将会解决士兵不同战术环境下的PNT挑战。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;由于GPS信号容易受干扰或其他破坏，美国军方一直在寻求GPS备份导航方式。美陆军研究人员最新提出了一种导航方式——利用像眼睛一样的先进敏感相机帮助用户确定目标的相对运动。&lt;/p&gt;
&lt;p&gt;美国陆军通信电子研究开发与工程中心（CERDEC）采用可以捕捉微小运动的微型相机，使用户可以追踪到某一个人的相对位置或移动。这将作为GPS信号削弱时增强定位、导航与授时（PNT）信息的一种手段。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;美国陆军通信电子研究开发与工程中心PNT分部研发了一种视觉辅助导航系统，装有单目摄像机，可以捕捉旋转和平移运动，但是不能捕捉纵向深度变化。此外，该系统还具有惯性测量单元组件，如陀螺仪、加速器和其它传感器等，用以传递运动和方向数据。结合单目摄像机和惯性测量组件，该系统提供了类似人眼的立体视觉，用以识别距离和运动。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PNT分部工程师艾瑞克·比克福德说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;视觉辅助导航系统依靠对目标快速帧速率拍照的相机，通过对比每一帧目标的特征来判断目标相对运动的距离和方向。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;美国陆军通信电子研发工程中心称，该视觉辅助导航系统很有可能会在地面战车中首次使用，一些研究人员已在高速公路上做了试验，相机即便以高速行驶也能够拍到看到的一切事物，包括汽车、信号标志、树。&lt;/p&gt;
&lt;p&gt;目前许多商业机构依然使用GPS，且极度依赖GPS获取定位和导航信息。随着电磁频谱获取越来越紧张以及对手技术能力的增强，美国军方加快步伐寻求GPS备份导航方式。&lt;/p&gt;
&lt;p&gt;美国陆军通信电子研发工程中心计划研发“伪卫星”，这是一种能够在只有小几千英尺（几百米）的低高度轨道运行的卫星，信号会增强且不易被干扰。该中心还在研制“芯片级原子钟”，用以对GPS接收端提供精确授时，且具有反欺骗功能。同时，美国国防先期研究计划局（DARPA）“对抗性环境中的空间、时间和方位信息”（STOIC）项目，旨在开发能够提供GPS同等性能导航质量的PNT系统。&lt;/p&gt;
&lt;p&gt;战场上GPS有效性已显著提升了士兵们的导航能力，但是GPS极易受干扰。根据美国陆军士兵及地面平台定位、导航、授时的需求，美国陆军通信电子研发工程中心将通过资金和研发备份导航方案来支持PM PNT发展，这将会解决士兵不同战术环境下的PNT挑战。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://i7.qhimg.com/t0130e1ec41471817b4.jpg&quot; alt=&quot;GPSChart&quot;&gt;&lt;/p&gt;
&lt;p&gt;根据美国陆军士兵及地面平台定位、导航、授时的需求，美国陆军通信电子研发工程中心将通过资金和研发备份导航方案来支持PM PNT发展，这将会解决士兵不同战术环境下的PNT挑战。&lt;/p&gt;
    
    </summary>
    
      <category term="技术前沿" scheme="http://jznudt.github.io/categories/%E6%8A%80%E6%9C%AF%E5%89%8D%E6%B2%BF/"/>
    
    
      <category term="导航" scheme="http://jznudt.github.io/tags/%E5%AF%BC%E8%88%AA/"/>
    
      <category term="GPS" scheme="http://jznudt.github.io/tags/GPS/"/>
    
  </entry>
  
  <entry>
    <title>国外战术导弹导引头半实物仿真系统发展</title>
    <link href="http://jznudt.github.io/2016/07/21/HWILSeekerSim/"/>
    <id>http://jznudt.github.io/2016/07/21/HWILSeekerSim/</id>
    <published>2016-07-21T12:13:47.000Z</published>
    <updated>2016-07-21T12:24:11.090Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://ast.sjtu.edu.cn/userfiles/1/images/yt01.png&quot; alt=&quot;RFHWILSim&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;半实物仿真是在计算机仿真回路中接入一些实物进行的仿真试验，与纯数学模型的全数字仿真相比，由于采用了部分实物组件，因此仿真仿真结果可信度更高。由于半实物仿真系统能为导弹武器的研制实验提供最优的手段，使在不做实物飞行的条件下，可对导弹全系统进行综合测试，因此国外高度重视半实物仿真系统发展，建立了大量半实物设施，以支持战术导弹研发。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;国外发展现状&quot;&gt;&lt;a href=&quot;#国外发展现状&quot; class=&quot;headerlink&quot; title=&quot;国外发展现状&quot;&gt;&lt;/a&gt;国外发展现状&lt;/h2&gt;&lt;p&gt;经过多年建设和发展，美国已经形成了较为完整的战术导弹导引头半实物仿真体系，可进行从部件级到系统级的半实物仿真实验，满足现代战术导弹武器研制的需求，尤其是其多模导引头半实物仿真能力、制导和控制系统联合半实物仿真能力、导引头抗干扰半实物仿真能力的发展，直接支持了动能拦截弹、先进中距空空弹、远程反舰弹等先进战术导弹武器的研制。&lt;/p&gt;
&lt;p&gt;美国自20世纪60年代开始发展半实物仿真系统，至今已经建立了由军方、国防工业部门和科研机构组成的多层次、不同级别的战术导弹半实物仿真设施体系。这些半实物仿真设施主要用于战术导弹制导控制系统的试验验证，可以独立测试导引头（单模/多模）、自动驾驶仪、GPS/惯性导航器等组件，也可以综合进行战术导弹制导控制系统测试，为战术导弹研发提供了重要测试手段。&lt;/p&gt;
&lt;h3 id=&quot;具有双模引头半实物仿真能力&quot;&gt;&lt;a href=&quot;#具有双模引头半实物仿真能力&quot; class=&quot;headerlink&quot; title=&quot;具有双模引头半实物仿真能力&quot;&gt;&lt;/a&gt;具有双模引头半实物仿真能力&lt;/h3&gt;&lt;p&gt;多模导引头对于增强战术导弹武器在飞行末段的目标识别能力和提高打击精度有重要的支撑作用。近些年国外研发的新型号防空导弹、巡航导弹、空空导弹和反舰导弹等，均采用了不同制导体制混合的多模导引头。目前美国已建立的导引头半实物仿真设施能够支持不同制导体制的双模导引头半实物仿真试验，如红外/射频复合、红外/半主动激光复合。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160721_DualModeHWIL.jpg&quot; alt=&quot;DualModeHWIL&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;美国高级仿真中心的长波红外/半主动激光双模半实物仿真设施&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;具有制导和控制系统联合半实物仿真能力&quot;&gt;&lt;a href=&quot;#具有制导和控制系统联合半实物仿真能力&quot; class=&quot;headerlink&quot; title=&quot;具有制导和控制系统联合半实物仿真能力&quot;&gt;&lt;/a&gt;具有制导和控制系统联合半实物仿真能力&lt;/h3&gt;&lt;p&gt;战术导弹武器制导控制回路一般包括导引头、弹载计算机、惯性测量单元、GPS接收器和舵机等主要硬件，以及目标识别算法、制导律、自动驾驶控制算法等软件，目标识别算法、制导律、惯性测量单元、GPS接收器和导引头构成了制导系统，自动驾驶控制算法、弹载计算机和舵机构成了控制系统。整个制导控制系统半实物仿真涉及多个环节，需要软硬件结合，是一项复杂的仿真工程。目前美国军方的主要半实物仿真设施中心基本都具备同时进行战术导弹武器制导与控制系统的半实物仿真能力，其中美国陆军AMRDEC还具有双模制导系统的制导控制回路仿真能力。&lt;/p&gt;
&lt;h3 id=&quot;具有导弹抗干扰半实物仿真能力&quot;&gt;&lt;a href=&quot;#具有导弹抗干扰半实物仿真能力&quot; class=&quot;headerlink&quot; title=&quot;具有导弹抗干扰半实物仿真能力&quot;&gt;&lt;/a&gt;具有导弹抗干扰半实物仿真能力&lt;/h3&gt;&lt;p&gt;美国空军电子战靶场（AFEWES）是美国战术导弹武器红外抗干扰半实物仿真试验中心，也是美国最主要的战术导弹抗干扰测试中心，能够进行点源红外对抗和激光红外干扰半实物仿真试验。美国海军空战中心则可以对弹载GPS接收机进行半实物干扰仿真试验。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oaneuh4rf.bkt.clouddn.com/image/jpg/20160721_IRECCMHWILSys.jpg&quot; alt=&quot;IRECCMHWILSys&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;美国红外抗干扰半实物仿真系统&lt;/em&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ast.sjtu.edu.cn/userfiles/1/images/yt01.png&quot; alt=&quot;RFHWILSim&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;半实物仿真是在计算机仿真回路中接入一些实物进行的仿真试验，与纯数学模型的全数字仿真相比，由于采用了部分实物组件，因此仿真仿真结果可信度更高。由于半实物仿真系统能为导弹武器的研制实验提供最优的手段，使在不做实物飞行的条件下，可对导弹全系统进行综合测试，因此国外高度重视半实物仿真系统发展，建立了大量半实物设施，以支持战术导弹研发。&lt;/p&gt;
    
    </summary>
    
      <category term="行业综述" scheme="http://jznudt.github.io/categories/%E8%A1%8C%E4%B8%9A%E7%BB%BC%E8%BF%B0/"/>
    
    
      <category term="导引头" scheme="http://jznudt.github.io/tags/%E5%AF%BC%E5%BC%95%E5%A4%B4/"/>
    
      <category term="半实物仿真" scheme="http://jznudt.github.io/tags/%E5%8D%8A%E5%AE%9E%E7%89%A9%E4%BB%BF%E7%9C%9F/"/>
    
      <category term="战术导弹" scheme="http://jznudt.github.io/tags/%E6%88%98%E6%9C%AF%E5%AF%BC%E5%BC%B9/"/>
    
  </entry>
  
</feed>
